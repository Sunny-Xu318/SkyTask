{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { computed, onBeforeUnmount, onMounted, reactive, ref, watch } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport { Search, Plus, Download } from '@element-plus/icons-vue';\nimport { ElMessage } from 'element-plus';\nimport StatusTag from '@/components/common/StatusTag.vue';\nimport TaskFormDrawer from '@/components/task/TaskFormDrawer.vue';\nimport TaskExecutionDrawer from '@/components/task/TaskExecutionDrawer.vue';\nexport default {\n  __name: 'TaskCenterView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const store = useStore();\n    const route = useRoute();\n    const router = useRouter();\n    const canReadTasks = computed(() => store.getters['auth/hasPermission']('task:read'));\n    const canManageTasks = computed(() => store.getters['auth/hasPermission']('task:write'));\n    const canTriggerTasks = computed(() => store.getters['auth/hasPermission']('task:trigger'));\n    const drawerVisible = ref(false);\n    const executionVisible = ref(false);\n    const submitting = ref(false);\n    const currentTaskForm = ref({});\n    const currentTask = ref(null);\n    let refreshTimer = null;\n    let stopPermissionWatcher = null;\n    const filters = reactive({\n      keyword: '',\n      status: 'ALL',\n      owner: null,\n      tags: []\n    });\n    const ownerOptions = [{\n      label: 'Zhang Qiang · Data Platform',\n      value: 'zhangqiang'\n    }, {\n      label: 'Li Na · Marketing',\n      value: 'lina'\n    }, {\n      label: 'Wang Wei · Settlement',\n      value: 'wangwei'\n    }, {\n      label: 'Zhou Kai · Recommendation',\n      value: 'zhoukai'\n    }];\n    const tagOptions = ['Report', 'Risk', 'Cache', 'Recommend', 'Marketing', 'Settlement'];\n    const groupOptions = [{\n      label: 'Data Report',\n      value: 'DATA_REPORT'\n    }, {\n      label: 'Realtime Risk',\n      value: 'RISK_CONTROL'\n    }, {\n      label: 'Marketing Center',\n      value: 'MARKETING'\n    }, {\n      label: 'Recommendation',\n      value: 'RECOMMEND'\n    }];\n    const taskList = computed(() => store.getters['tasks/taskList']);\n    const pagination = computed(() => store.getters['tasks/taskPagination']);\n    const executions = computed(() => store.getters['tasks/taskExecutions']);\n    const executionPagination = computed(() => store.getters['tasks/taskExecutionPagination']);\n    const loading = computed(() => store.getters['tasks/tasksLoading']);\n    const executionsLoading = computed(() => store.getters['tasks/taskExecutionLoading']);\n    const listError = computed(() => store.getters['tasks/taskListError']);\n    const metricsError = computed(() => store.getters['tasks/taskMetricsError']);\n    const listErrorState = computed(() => buildErrorState(listError.value));\n    const metricsErrorState = computed(() => buildErrorState(metricsError.value));\n    const ensureReadPermission = (toast = true) => {\n      if (canReadTasks.value) {\n        return true;\n      }\n      if (toast) {\n        ElMessage.warning('You do not have permission to view tasks');\n      }\n      return false;\n    };\n    const ensureManagePermission = () => {\n      if (canManageTasks.value) {\n        return true;\n      }\n      ElMessage.warning('You do not have permission to manage tasks');\n      return false;\n    };\n    const ensureTriggerPermission = () => {\n      if (canTriggerTasks.value) {\n        return true;\n      }\n      ElMessage.warning('You do not have permission to trigger tasks');\n      return false;\n    };\n    const requestTaskData = async () => {\n      if (!ensureReadPermission(false)) {\n        return;\n      }\n      try {\n        await store.dispatch('tasks/loadTaskList');\n      } catch (error) {\n        // errors handled via store state\n      }\n      try {\n        await store.dispatch('tasks/loadMetrics');\n      } catch (error) {\n        // errors handled via store state\n      }\n    };\n    const startAutoRefresh = () => {\n      if (refreshTimer) {\n        return;\n      }\n      refreshTimer = window.setInterval(requestTaskData, 10000);\n    };\n    const stopAutoRefresh = () => {\n      if (refreshTimer) {\n        window.clearInterval(refreshTimer);\n        refreshTimer = null;\n      }\n    };\n    const applyQueryFilters = () => {\n      if (typeof route.query.keyword === 'string') {\n        filters.keyword = route.query.keyword;\n      }\n      if (typeof route.query.status === 'string') {\n        filters.status = route.query.status;\n      }\n      if (typeof route.query.owner === 'string') {\n        filters.owner = route.query.owner;\n      }\n      if (route.query.tags) {\n        if (Array.isArray(route.query.tags)) {\n          filters.tags = route.query.tags;\n        } else if (typeof route.query.tags === 'string') {\n          filters.tags = route.query.tags.split(',');\n        }\n      }\n    };\n    onMounted(() => {\n      applyQueryFilters();\n      stopPermissionWatcher = watch(canReadTasks, allowed => {\n        if (!allowed) {\n          stopAutoRefresh();\n          return;\n        }\n        handleSearch();\n        startAutoRefresh();\n      }, {\n        immediate: true\n      });\n    });\n    onBeforeUnmount(() => {\n      if (stopPermissionWatcher) {\n        stopPermissionWatcher();\n      }\n      stopAutoRefresh();\n    });\n    const handleSearch = async () => {\n      if (!ensureReadPermission()) {\n        return;\n      }\n      await store.dispatch('tasks/setFilters', {\n        ...filters\n      });\n      try {\n        await store.dispatch('tasks/loadMetrics');\n      } catch (error) {\n        // errors handled via store state\n      }\n      const query = {\n        keyword: filters.keyword || undefined,\n        status: filters.status && filters.status !== 'ALL' ? filters.status : undefined,\n        owner: filters.owner || undefined,\n        tags: filters.tags.length ? filters.tags.join(',') : undefined\n      };\n      router.replace({\n        query: {\n          ...route.query,\n          ...query\n        }\n      });\n    };\n    const changePage = async page => {\n      if (!ensureReadPermission(false)) {\n        return;\n      }\n      await store.dispatch('tasks/setPagination', {\n        page\n      });\n    };\n    const changeSize = async size => {\n      if (!ensureReadPermission(false)) {\n        return;\n      }\n      await store.dispatch('tasks/setPagination', {\n        size,\n        page: 1\n      });\n    };\n    const handleDrawerVisible = visible => {\n      drawerVisible.value = visible;\n      if (!visible) {\n        currentTaskForm.value = {};\n      }\n    };\n    const openCreate = () => {\n      if (!ensureManagePermission()) {\n        return;\n      }\n      currentTaskForm.value = {};\n      drawerVisible.value = true;\n    };\n    const editTask = row => {\n      if (!ensureManagePermission()) {\n        return;\n      }\n      currentTaskForm.value = {\n        ...row\n      };\n      drawerVisible.value = true;\n    };\n    const submitTask = async payload => {\n      if (!ensureManagePermission()) {\n        return;\n      }\n      submitting.value = true;\n      try {\n        await store.dispatch('tasks/submitTask', payload);\n        drawerVisible.value = false;\n        currentTaskForm.value = {};\n        handleSearch();\n      } finally {\n        submitting.value = false;\n      }\n    };\n    const toggleTask = async row => {\n      if (!ensureManagePermission()) {\n        return;\n      }\n      await store.dispatch('tasks/changeTaskStatus', {\n        taskId: row.id,\n        enabled: !row.enabled\n      });\n      handleSearch();\n    };\n    const removeTask = async row => {\n      if (!ensureManagePermission()) {\n        return;\n      }\n      await store.dispatch('tasks/removeTask', row.id);\n      handleSearch();\n    };\n    const triggerTask = async row => {\n      if (!ensureTriggerPermission()) {\n        return;\n      }\n      await store.dispatch('tasks/triggerTask', {\n        taskId: row.id,\n        payload: {}\n      });\n      ElMessage.success('Task execution requested');\n    };\n    const openExecution = async row => {\n      if (!ensureReadPermission()) {\n        return;\n      }\n      await store.dispatch('tasks/loadTaskExecutions', {\n        taskId: row.id\n      });\n      currentTask.value = row;\n      executionVisible.value = true;\n    };\n    const handleExecutionPage = async page => {\n      if (!ensureReadPermission(false) || !currentTask.value) {\n        return;\n      }\n      await store.dispatch('tasks/loadTaskExecutions', {\n        taskId: currentTask.value.id,\n        page,\n        size: executionPagination.value.size\n      });\n    };\n    const openDetail = row => {\n      if (!ensureReadPermission()) {\n        return;\n      }\n      router.push(`/tasks/${row.id}`);\n    };\n    const viewLog = record => {\n      if (!ensureReadPermission()) {\n        return;\n      }\n      router.push({\n        path: `/tasks/${currentTask.value?.id}`,\n        query: {\n          recordId: record.id\n        }\n      });\n    };\n    const openCronHelper = () => {\n      router.push({\n        path: '/config',\n        query: {\n          tab: 'cron-tool'\n        }\n      });\n    };\n    const exportTasks = () => {\n      if (!ensureReadPermission()) {\n        return;\n      }\n      window.open('/api/tasks/export');\n    };\n    const formatType = type => {\n      const map = {\n        CRON: 'Cron',\n        ONE_TIME: 'One-time',\n        FIXED_RATE: 'Fixed rate'\n      };\n      return map[type] || type;\n    };\n    const getOwnerInitials = owner => {\n      if (!owner) {\n        return 'NA';\n      }\n      return owner.slice(0, 2).toUpperCase();\n    };\n    const __returned__ = {\n      store,\n      route,\n      router,\n      canReadTasks,\n      canManageTasks,\n      canTriggerTasks,\n      drawerVisible,\n      executionVisible,\n      submitting,\n      currentTaskForm,\n      currentTask,\n      get refreshTimer() {\n        return refreshTimer;\n      },\n      set refreshTimer(v) {\n        refreshTimer = v;\n      },\n      get stopPermissionWatcher() {\n        return stopPermissionWatcher;\n      },\n      set stopPermissionWatcher(v) {\n        stopPermissionWatcher = v;\n      },\n      filters,\n      ownerOptions,\n      tagOptions,\n      groupOptions,\n      taskList,\n      pagination,\n      executions,\n      executionPagination,\n      loading,\n      executionsLoading,\n      listError,\n      metricsError,\n      listErrorState,\n      metricsErrorState,\n      ensureReadPermission,\n      ensureManagePermission,\n      ensureTriggerPermission,\n      requestTaskData,\n      startAutoRefresh,\n      stopAutoRefresh,\n      applyQueryFilters,\n      handleSearch,\n      changePage,\n      changeSize,\n      handleDrawerVisible,\n      openCreate,\n      editTask,\n      submitTask,\n      toggleTask,\n      removeTask,\n      triggerTask,\n      openExecution,\n      handleExecutionPage,\n      openDetail,\n      viewLog,\n      openCronHelper,\n      exportTasks,\n      formatType,\n      getOwnerInitials,\n      computed,\n      onBeforeUnmount,\n      onMounted,\n      reactive,\n      ref,\n      watch,\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get useStore() {\n        return useStore;\n      },\n      get Search() {\n        return Search;\n      },\n      get Plus() {\n        return Plus;\n      },\n      get Download() {\n        return Download;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      StatusTag,\n      TaskFormDrawer,\n      TaskExecutionDrawer\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","onBeforeUnmount","onMounted","reactive","ref","watch","useRoute","useRouter","useStore","Search","Plus","Download","ElMessage","StatusTag","TaskFormDrawer","TaskExecutionDrawer","store","route","router","canReadTasks","getters","canManageTasks","canTriggerTasks","drawerVisible","executionVisible","submitting","currentTaskForm","currentTask","refreshTimer","stopPermissionWatcher","filters","keyword","status","owner","tags","ownerOptions","label","value","tagOptions","groupOptions","taskList","pagination","executions","executionPagination","loading","executionsLoading","listError","metricsError","listErrorState","buildErrorState","metricsErrorState","ensureReadPermission","toast","warning","ensureManagePermission","ensureTriggerPermission","requestTaskData","dispatch","error","startAutoRefresh","window","setInterval","stopAutoRefresh","clearInterval","applyQueryFilters","query","Array","isArray","split","allowed","handleSearch","immediate","undefined","length","join","replace","changePage","page","changeSize","size","handleDrawerVisible","visible","openCreate","editTask","row","submitTask","payload","toggleTask","taskId","id","enabled","removeTask","triggerTask","success","openExecution","handleExecutionPage","openDetail","push","viewLog","record","path","recordId","openCronHelper","tab","exportTasks","open","formatType","type","map","CRON","ONE_TIME","FIXED_RATE","getOwnerInitials","slice","toUpperCase"],"sources":["D:/桌面/项目/分布式任务调度系统/SkyTask/skytask-frontend/src/views/TaskCenterView.vue"],"sourcesContent":["<template>\n  <div class=\"task-center\">\n    <section class=\"task-center__toolbar card\">\n      <div class=\"toolbar__left\">\n        <el-form :inline=\"true\" :model=\"filters\">\n          <el-form-item>\n            <el-input\n              v-model=\"filters.keyword\"\n              placeholder=\"Search task name / owner / tag\"\n              clearable\n              @keyup.enter=\"handleSearch\"\n            >\n              <template #prefix>\n                <el-icon><Search /></el-icon>\n              </template>\n            </el-input>\n          </el-form-item>\n          <el-form-item>\n            <el-select\n              v-model=\"filters.status\"\n              placeholder=\"Task status\"\n              clearable\n              @change=\"handleSearch\"\n            >\n              <el-option label=\"All\" value=\"ALL\" />\n              <el-option label=\"Enabled\" value=\"ENABLED\" />\n              <el-option label=\"Disabled\" value=\"DISABLED\" />\n              <el-option label=\"Failed Alert\" value=\"FAILED\" />\n            </el-select>\n          </el-form-item>\n          <el-form-item>\n            <el-select\n              v-model=\"filters.owner\"\n              placeholder=\"Owner\"\n              clearable\n              filterable\n              @change=\"handleSearch\"\n            >\n              <el-option\n                v-for=\"owner in ownerOptions\"\n                :key=\"owner.value\"\n                :label=\"owner.label\"\n                :value=\"owner.value\"\n              />\n            </el-select>\n          </el-form-item>\n          <el-form-item>\n            <el-select\n              v-model=\"filters.tags\"\n              multiple\n              collapse-tags\n              placeholder=\"Tags\"\n              @change=\"handleSearch\"\n            >\n              <el-option\n                v-for=\"tag in tagOptions\"\n                :key=\"tag\"\n                :label=\"tag\"\n                :value=\"tag\"\n              />\n            </el-select>\n          </el-form-item>\n        </el-form>\n      </div>\n      <div class=\"toolbar__right\">\n        <el-button v-if=\"canReadTasks\" :icon=\"Download\" @click=\"exportTasks\">Export</el-button>\n        <el-button\n          v-if=\"canManageTasks\"\n          type=\"primary\"\n          :icon=\"Plus\"\n          @click=\"openCreate\"\n        >\n          New Task\n        </el-button>\n      </div>\n    </section>\n    <el-alert\n      v-if=\"metricsErrorState\"\n      class=\"task-center__alert\"\n      :type=\"metricsErrorState.forbidden ? 'warning' : 'error'\"\n      :title=\"metricsErrorState.forbidden ? '无权查看任务统计' : '任务指标加载失败'\"\n      :description=\"metricsErrorState.message\"\n      show-icon\n      :closable=\"false\"\n    />\n\n    <section v-if=\"canReadTasks\" class=\"task-center__content card\">\n      <div v-if=\"listErrorState\" class=\"task-center__error\">\n        <el-result\n          :status=\"listErrorState.forbidden ? 'warning' : 'error'\"\n          :title=\"listErrorState.forbidden ? '无访问权限' : '任务列表加载失败'\"\n          :sub-title=\"listErrorState.message\"\n        >\n          <template #extra>\n            <el-button type=\"primary\" size=\"small\" @click=\"requestTaskData\">重试</el-button>\n          </template>\n        </el-result>\n      </div>\n      <el-table v-else :data=\"taskList\" height=\"500\" v-loading=\"loading\">\n        <el-table-column label=\"Task\" min-width=\"220\">\n          <template #default=\"{ row }\">\n            <div class=\"task-name\">\n              <el-link type=\"primary\" @click=\"openDetail(row)\">{{ row.name }}</el-link>\n              <el-tag v-if=\"row.group\" size=\"small\" class=\"task-name__tag\">{{ row.group }}</el-tag>\n            </div>\n            <div class=\"task-meta\">\n              <span>Last run: {{ row.lastTrigger || '-' }}</span>\n              <span>Last node: {{ row.lastNode || '-' }}</span>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"Type\" width=\"120\">\n          <template #default=\"{ row }\">\n            <el-tag>{{ formatType(row.type) }}</el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"cronExpr\" label=\"Schedule\" width=\"160\" show-overflow-tooltip />\n        <el-table-column label=\"Owner\" width=\"140\">\n          <template #default=\"{ row }\">\n            <el-avatar size=\"small\" class=\"owner-avatar\">{{ getOwnerInitials(row.owner) }}</el-avatar>\n            <span>{{ row.owner }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"Status\" width=\"140\">\n          <template #default=\"{ row }\">\n            <StatusTag :status=\"row.status\" />\n          </template>\n        </el-table-column>\n        <el-table-column label=\"Alert\" width=\"120\">\n          <template #default=\"{ row }\">\n            <el-tag :type=\"row.alertEnabled ? 'success' : 'info'\" size=\"small\">\n              {{ row.alertEnabled ? 'Enabled' : 'Disabled' }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"Actions\" width=\"320\" fixed=\"right\">\n          <template #default=\"{ row }\">\n            <el-button\n              v-if=\"canReadTasks\"\n              link\n              type=\"primary\"\n              size=\"small\"\n              @click=\"openExecution(row)\"\n            >\n              Records\n            </el-button>\n            <el-button\n              v-if=\"canManageTasks\"\n              link\n              type=\"primary\"\n              size=\"small\"\n              @click=\"openEdit(row)\"\n            >\n              Edit\n            </el-button>\n            <el-button\n              v-if=\"canManageTasks\"\n              link\n              type=\"warning\"\n              size=\"small\"\n              @click=\"toggleTask(row)\"\n            >\n              {{ row.status === 'ENABLED' ? 'Disable' : 'Enable' }}\n            </el-button>\n            <el-popconfirm\n              v-if=\"canManageTasks\"\n              title=\"Delete this task?\"\n              @confirm=\"removeTask(row)\"\n            >\n              <template #reference>\n                <el-button link type=\"danger\" size=\"small\">Delete</el-button>\n              </template>\n            </el-popconfirm>\n            <el-button\n              v-if=\"canTriggerTasks\"\n              link\n              type=\"success\"\n              size=\"small\"\n              @click=\"triggerTaskNow(row)\"\n            >\n              Trigger\n            </el-button>\n          </template>\n        </el-table-column>\n        <template #empty>\n          <el-empty description=\"暂无任务\" />\n        </template>\n      </el-table>\n    </section>\n\n    <section v-else class=\"card task-center__empty\">\n      <el-empty description=\"You do not have permission to view tasks\" />\n    </section>\n\n    <TaskFormDrawer\n      v-model:visible=\"drawerVisible\"\n      :model-value=\"currentTaskForm\"\n      :group-options=\"groupOptions\"\n      :owner-options=\"ownerOptions\"\n      :tag-options=\"tagOptions\"\n      :submitting=\"submitting\"\n      @submit=\"submitTask\"\n      @update:visible=\"handleDrawerVisible\"\n      @cron-helper=\"openCronHelper\"\n    />\n\n    <TaskExecutionDrawer\n      v-model:visible=\"executionVisible\"\n      :executions=\"executions\"\n      :pagination=\"executionPagination\"\n      :loading=\"executionsLoading\"\n      @page-change=\"handleExecutionPage\"\n      @view-log=\"viewLog\"\n    />\n  </div>\n</template>\n\n<script setup>\nimport { computed, onBeforeUnmount, onMounted, reactive, ref, watch } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport { Search, Plus, Download } from '@element-plus/icons-vue';\nimport { ElMessage } from 'element-plus';\nimport StatusTag from '@/components/common/StatusTag.vue';\nimport TaskFormDrawer from '@/components/task/TaskFormDrawer.vue';\nimport TaskExecutionDrawer from '@/components/task/TaskExecutionDrawer.vue';\n\nconst store = useStore();\nconst route = useRoute();\nconst router = useRouter();\n\nconst canReadTasks = computed(() => store.getters['auth/hasPermission']('task:read'));\nconst canManageTasks = computed(() => store.getters['auth/hasPermission']('task:write'));\nconst canTriggerTasks = computed(() => store.getters['auth/hasPermission']('task:trigger'));\n\nconst drawerVisible = ref(false);\nconst executionVisible = ref(false);\nconst submitting = ref(false);\nconst currentTaskForm = ref({});\nconst currentTask = ref(null);\nlet refreshTimer = null;\nlet stopPermissionWatcher = null;\n\nconst filters = reactive({\n  keyword: '',\n  status: 'ALL',\n  owner: null,\n  tags: []\n});\n\nconst ownerOptions = [\n  { label: 'Zhang Qiang · Data Platform', value: 'zhangqiang' },\n  { label: 'Li Na · Marketing', value: 'lina' },\n  { label: 'Wang Wei · Settlement', value: 'wangwei' },\n  { label: 'Zhou Kai · Recommendation', value: 'zhoukai' }\n];\n\nconst tagOptions = ['Report', 'Risk', 'Cache', 'Recommend', 'Marketing', 'Settlement'];\n\nconst groupOptions = [\n  { label: 'Data Report', value: 'DATA_REPORT' },\n  { label: 'Realtime Risk', value: 'RISK_CONTROL' },\n  { label: 'Marketing Center', value: 'MARKETING' },\n  { label: 'Recommendation', value: 'RECOMMEND' }\n];\n\nconst taskList = computed(() => store.getters['tasks/taskList']);\nconst pagination = computed(() => store.getters['tasks/taskPagination']);\nconst executions = computed(() => store.getters['tasks/taskExecutions']);\nconst executionPagination = computed(() => store.getters['tasks/taskExecutionPagination']);\nconst loading = computed(() => store.getters['tasks/tasksLoading']);\nconst executionsLoading = computed(() => store.getters['tasks/taskExecutionLoading']);\nconst listError = computed(() => store.getters['tasks/taskListError']);\nconst metricsError = computed(() => store.getters['tasks/taskMetricsError']);\nconst listErrorState = computed(() => buildErrorState(listError.value));\nconst metricsErrorState = computed(() => buildErrorState(metricsError.value));\n\nconst ensureReadPermission = (toast = true) => {\n  if (canReadTasks.value) {\n    return true;\n  }\n  if (toast) {\n    ElMessage.warning('You do not have permission to view tasks');\n  }\n  return false;\n};\n\nconst ensureManagePermission = () => {\n  if (canManageTasks.value) {\n    return true;\n  }\n  ElMessage.warning('You do not have permission to manage tasks');\n  return false;\n};\n\nconst ensureTriggerPermission = () => {\n  if (canTriggerTasks.value) {\n    return true;\n  }\n  ElMessage.warning('You do not have permission to trigger tasks');\n  return false;\n};\n\nconst requestTaskData = async () => {\n  if (!ensureReadPermission(false)) {\n    return;\n  }\n  try {\n    await store.dispatch('tasks/loadTaskList');\n  } catch (error) {\n    // errors handled via store state\n  }\n  try {\n    await store.dispatch('tasks/loadMetrics');\n  } catch (error) {\n    // errors handled via store state\n  }\n};\n\nconst startAutoRefresh = () => {\n  if (refreshTimer) {\n    return;\n  }\n  refreshTimer = window.setInterval(requestTaskData, 10000);\n};\n\nconst stopAutoRefresh = () => {\n  if (refreshTimer) {\n    window.clearInterval(refreshTimer);\n    refreshTimer = null;\n  }\n};\n\nconst applyQueryFilters = () => {\n  if (typeof route.query.keyword === 'string') {\n    filters.keyword = route.query.keyword;\n  }\n  if (typeof route.query.status === 'string') {\n    filters.status = route.query.status;\n  }\n  if (typeof route.query.owner === 'string') {\n    filters.owner = route.query.owner;\n  }\n  if (route.query.tags) {\n    if (Array.isArray(route.query.tags)) {\n      filters.tags = route.query.tags;\n    } else if (typeof route.query.tags === 'string') {\n      filters.tags = route.query.tags.split(',');\n    }\n  }\n};\n\nonMounted(() => {\n  applyQueryFilters();\n  stopPermissionWatcher = watch(\n    canReadTasks,\n    (allowed) => {\n      if (!allowed) {\n        stopAutoRefresh();\n        return;\n      }\n      handleSearch();\n      startAutoRefresh();\n    },\n    { immediate: true }\n  );\n});\n\nonBeforeUnmount(() => {\n  if (stopPermissionWatcher) {\n    stopPermissionWatcher();\n  }\n  stopAutoRefresh();\n});\n\nconst handleSearch = async () => {\n  if (!ensureReadPermission()) {\n    return;\n  }\n  await store.dispatch('tasks/setFilters', { ...filters });\n  try {\n    await store.dispatch('tasks/loadMetrics');\n  } catch (error) {\n    // errors handled via store state\n  }\n\n  const query = {\n    keyword: filters.keyword || undefined,\n    status: filters.status && filters.status !== 'ALL' ? filters.status : undefined,\n    owner: filters.owner || undefined,\n    tags: filters.tags.length ? filters.tags.join(',') : undefined\n  };\n  router.replace({ query: { ...route.query, ...query } });\n};\n\nconst changePage = async (page) => {\n  if (!ensureReadPermission(false)) {\n    return;\n  }\n  await store.dispatch('tasks/setPagination', { page });\n};\n\nconst changeSize = async (size) => {\n  if (!ensureReadPermission(false)) {\n    return;\n  }\n  await store.dispatch('tasks/setPagination', { size, page: 1 });\n};\n\nconst handleDrawerVisible = (visible) => {\n  drawerVisible.value = visible;\n  if (!visible) {\n    currentTaskForm.value = {};\n  }\n};\n\nconst openCreate = () => {\n  if (!ensureManagePermission()) {\n    return;\n  }\n  currentTaskForm.value = {};\n  drawerVisible.value = true;\n};\n\nconst editTask = (row) => {\n  if (!ensureManagePermission()) {\n    return;\n  }\n  currentTaskForm.value = { ...row };\n  drawerVisible.value = true;\n};\n\nconst submitTask = async (payload) => {\n  if (!ensureManagePermission()) {\n    return;\n  }\n  submitting.value = true;\n  try {\n    await store.dispatch('tasks/submitTask', payload);\n    drawerVisible.value = false;\n    currentTaskForm.value = {};\n    handleSearch();\n  } finally {\n    submitting.value = false;\n  }\n};\n\nconst toggleTask = async (row) => {\n  if (!ensureManagePermission()) {\n    return;\n  }\n  await store.dispatch('tasks/changeTaskStatus', { taskId: row.id, enabled: !row.enabled });\n  handleSearch();\n};\n\nconst removeTask = async (row) => {\n  if (!ensureManagePermission()) {\n    return;\n  }\n  await store.dispatch('tasks/removeTask', row.id);\n  handleSearch();\n};\n\nconst triggerTask = async (row) => {\n  if (!ensureTriggerPermission()) {\n    return;\n  }\n  await store.dispatch('tasks/triggerTask', { taskId: row.id, payload: {} });\n  ElMessage.success('Task execution requested');\n};\n\nconst openExecution = async (row) => {\n  if (!ensureReadPermission()) {\n    return;\n  }\n  await store.dispatch('tasks/loadTaskExecutions', { taskId: row.id });\n  currentTask.value = row;\n  executionVisible.value = true;\n};\n\nconst handleExecutionPage = async (page) => {\n  if (!ensureReadPermission(false) || !currentTask.value) {\n    return;\n  }\n  await store.dispatch('tasks/loadTaskExecutions', {\n    taskId: currentTask.value.id,\n    page,\n    size: executionPagination.value.size\n  });\n};\n\nconst openDetail = (row) => {\n  if (!ensureReadPermission()) {\n    return;\n  }\n  router.push(`/tasks/${row.id}`);\n};\n\nconst viewLog = (record) => {\n  if (!ensureReadPermission()) {\n    return;\n  }\n  router.push({\n    path: `/tasks/${currentTask.value?.id}`,\n    query: { recordId: record.id }\n  });\n};\n\nconst openCronHelper = () => {\n  router.push({ path: '/config', query: { tab: 'cron-tool' } });\n};\n\nconst exportTasks = () => {\n  if (!ensureReadPermission()) {\n    return;\n  }\n  window.open('/api/tasks/export');\n};\n\nconst formatType = (type) => {\n  const map = {\n    CRON: 'Cron',\n    ONE_TIME: 'One-time',\n    FIXED_RATE: 'Fixed rate'\n  };\n  return map[type] || type;\n};\n\nconst getOwnerInitials = (owner) => {\n  if (!owner) {\n    return 'NA';\n  }\n  return owner.slice(0, 2).toUpperCase();\n};\n</script>\n\n<style scoped lang=\"scss\">\n.task-center {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  &__alert {\n    margin-bottom: 12px;\n  }\n\n  &__toolbar {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    gap: 20px;\n\n    .toolbar__left {\n      flex: 1;\n    }\n\n    .toolbar__right {\n      display: flex;\n      gap: 12px;\n    }\n  }\n\n  &__error {\n    padding: 32px 0;\n  }\n\n  &__content {\n    .task-name {\n      display: flex;\n      align-items: center;\n      gap: 6px;\n\n      &__tag {\n        background: rgba(34, 211, 238, 0.1);\n        color: #0891b2;\n      }\n    }\n\n    .task-meta {\n      display: flex;\n      gap: 16px;\n      font-size: 12px;\n      color: #64748b;\n      margin-top: 4px;\n    }\n  }\n\n  &__pagination {\n    display: flex;\n    justify-content: flex-end;\n    padding-top: 16px;\n  }\n\n  &__empty {\n    display: flex;\n    justify-content: center;\n    padding: 48px 0;\n  }\n}\n\n.owner-avatar {\n  background-color: #0891b2;\n  color: #fff;\n  margin-right: 8px;\n}\n</style>\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
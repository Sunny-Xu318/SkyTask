{"ast":null,"code":"import { computed, nextTick, reactive, ref, watch } from 'vue';\nexport default {\n  __name: 'TaskFormDrawer',\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    modelValue: {\n      type: Object,\n      default: () => ({})\n    },\n    groupOptions: {\n      type: Array,\n      default: () => []\n    },\n    ownerOptions: {\n      type: Array,\n      default: () => []\n    },\n    tagOptions: {\n      type: Array,\n      default: () => []\n    },\n    submitting: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['update:visible', 'submit', 'cron-helper', 'cron-preview'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n    const formRef = ref(null);\n    const createInitialState = () => ({\n      id: null,\n      name: '',\n      group: '',\n      type: 'CRON',\n      executorType: 'GRPC',\n      cronExpr: '',\n      timeZone: 'Asia/Shanghai',\n      routeStrategy: 'ROUND_ROBIN',\n      retryPolicy: 'EXP_BACKOFF',\n      maxRetry: 3,\n      timeout: 300,\n      owner: '',\n      tags: [],\n      idempotentKey: '',\n      parameters: '',\n      description: ''\n    });\n    const formState = reactive(createInitialState());\n    function applyModelValue(value) {\n      Object.assign(formState, createInitialState(), value || {});\n    }\n    function resetForm() {\n      nextTick(() => {\n        formRef.value?.resetFields();\n        Object.assign(formState, createInitialState());\n      });\n    }\n    watch(() => props.modelValue, val => {\n      if (val && Object.keys(val).length) {\n        applyModelValue(val);\n      } else {\n        resetForm();\n      }\n    }, {\n      immediate: true,\n      deep: true\n    });\n    const formTitle = computed(() => formState.id ? '编辑任务' : '新建任务');\n    const rules = {\n      name: [{\n        required: true,\n        message: '请输入任务名称',\n        trigger: 'blur'\n      }],\n      group: [{\n        required: true,\n        message: '请选择任务分组',\n        trigger: 'change'\n      }],\n      type: [{\n        required: true,\n        message: '请选择任务类型',\n        trigger: 'change'\n      }],\n      executorType: [{\n        required: true,\n        message: '请选择执行方式',\n        trigger: 'change'\n      }],\n      cronExpr: [{\n        validator: (_, value, callback) => {\n          if (formState.type === 'CRON' && !value) {\n            callback(new Error('请输入 Cron 表达式'));\n          } else {\n            callback();\n          }\n        },\n        trigger: 'blur'\n      }],\n      owner: [{\n        required: true,\n        message: '请选择负责人',\n        trigger: 'change'\n      }]\n    };\n    function handleClose() {\n      emit('update:visible', false);\n      resetForm();\n    }\n    function handleSubmit() {\n      formRef.value?.validate(valid => {\n        if (valid) {\n          emit('submit', {\n            ...formState\n          });\n        }\n      });\n    }\n    function handleCronHelper() {\n      emit('cron-helper', formState.cronExpr);\n    }\n    function emitCronPreview() {\n      if (formState.cronExpr) {\n        emit('cron-preview', formState.cronExpr);\n      }\n    }\n    const __returned__ = {\n      props,\n      emit,\n      formRef,\n      createInitialState,\n      formState,\n      applyModelValue,\n      resetForm,\n      formTitle,\n      rules,\n      handleClose,\n      handleSubmit,\n      handleCronHelper,\n      emitCronPreview,\n      computed,\n      nextTick,\n      reactive,\n      ref,\n      watch\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","nextTick","reactive","ref","watch","props","__props","emit","__emit","formRef","createInitialState","id","name","group","type","executorType","cronExpr","timeZone","routeStrategy","retryPolicy","maxRetry","timeout","owner","tags","idempotentKey","parameters","description","formState","applyModelValue","value","Object","assign","resetForm","resetFields","modelValue","val","keys","length","immediate","deep","formTitle","rules","required","message","trigger","validator","_","callback","Error","handleClose","handleSubmit","validate","valid","handleCronHelper","emitCronPreview"],"sources":["D:/桌面/项目/分布式任务调度系统/SkyTask/skytask-frontend/src/components/task/TaskFormDrawer.vue"],"sourcesContent":["<template>\n  <el-drawer\n    :model-value=\"visible\"\n    :title=\"formTitle\"\n    size=\"45%\"\n    @close=\"handleClose\"\n  >\n    <el-form\n      ref=\"formRef\"\n      :model=\"formState\"\n      :rules=\"rules\"\n      label-width=\"110px\"\n      status-icon\n    >\n      <el-row :gutter=\"16\">\n        <el-col :span=\"12\">\n          <el-form-item label=\"任务名称\" prop=\"name\">\n            <el-input v-model=\"formState.name\" placeholder=\"例如 nightly-report-generate\" />\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"12\">\n          <el-form-item label=\"所属分组\" prop=\"group\">\n            <el-select v-model=\"formState.group\" placeholder=\"选择任务分组\">\n              <el-option\n                v-for=\"item in groupOptions\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\"\n              />\n            </el-select>\n          </el-form-item>\n        </el-col>\n      </el-row>\n\n      <el-row :gutter=\"16\">\n        <el-col :span=\"12\">\n          <el-form-item label=\"任务类型\" prop=\"type\">\n            <el-select v-model=\"formState.type\" placeholder=\"选择任务类型\">\n              <el-option label=\"Cron 定时任务\" value=\"CRON\" />\n              <el-option label=\"一次性任务\" value=\"ONE_TIME\" />\n              <el-option label=\"固定间隔任务\" value=\"FIXED_RATE\" />\n            </el-select>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"12\">\n          <el-form-item label=\"执行方式\" prop=\"executorType\">\n            <el-select v-model=\"formState.executorType\" placeholder=\"选择执行方式\">\n              <el-option label=\"HTTP 回调\" value=\"HTTP\" />\n              <el-option label=\"gRPC 执行\" value=\"GRPC\" />\n              <el-option label=\"Spring Bean\" value=\"SPRING_BEAN\" />\n              <el-option label=\"Shell 脚本\" value=\"SHELL\" />\n            </el-select>\n          </el-form-item>\n        </el-col>\n      </el-row>\n\n      <el-row :gutter=\"16\" v-if=\"formState.type === 'CRON'\">\n        <el-col :span=\"16\">\n          <el-form-item label=\"Cron 表达式\" prop=\"cronExpr\">\n            <el-input\n              v-model=\"formState.cronExpr\"\n              placeholder=\"0 0 2 * * ?\"\n              @blur=\"emitCronPreview\"\n            >\n              <template #append>\n                <el-link type=\"primary\" @click.prevent=\"handleCronHelper\">表达式助手</el-link>\n              </template>\n            </el-input>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"8\">\n          <el-form-item label=\"时区\" prop=\"timeZone\">\n            <el-select v-model=\"formState.timeZone\" placeholder=\"选择时区\">\n              <el-option label=\"系统默认\" value=\"SYSTEM\" />\n              <el-option label=\"UTC\" value=\"UTC\" />\n              <el-option label=\"Asia/Shanghai\" value=\"Asia/Shanghai\" />\n            </el-select>\n          </el-form-item>\n        </el-col>\n      </el-row>\n\n      <el-row :gutter=\"16\">\n        <el-col :span=\"12\">\n          <el-form-item label=\"路由策略\" prop=\"routeStrategy\">\n            <el-select v-model=\"formState.routeStrategy\">\n              <el-option label=\"自动均衡\" value=\"ROUND_ROBIN\" />\n              <el-option label=\"一致性哈希\" value=\"CONSISTENT_HASH\" />\n              <el-option label=\"分片广播\" value=\"SHARDING\" />\n              <el-option label=\"指定节点\" value=\"FIXED_NODE\" />\n            </el-select>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"12\">\n          <el-form-item label=\"重试策略\" prop=\"retryPolicy\">\n            <el-select v-model=\"formState.retryPolicy\">\n              <el-option label=\"不重试\" value=\"NONE\" />\n              <el-option label=\"固定间隔\" value=\"FIXED_INTERVAL\" />\n              <el-option label=\"指数退避\" value=\"EXP_BACKOFF\" />\n            </el-select>\n          </el-form-item>\n        </el-col>\n      </el-row>\n\n      <el-row :gutter=\"16\">\n        <el-col :span=\"12\">\n          <el-form-item label=\"最大重试次数\" prop=\"maxRetry\">\n            <el-input-number v-model=\"formState.maxRetry\" :min=\"0\" :max=\"10\" />\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"12\">\n          <el-form-item label=\"超时时间 (s)\" prop=\"timeout\">\n            <el-input-number v-model=\"formState.timeout\" :min=\"10\" :max=\"3600\" />\n          </el-form-item>\n        </el-col>\n      </el-row>\n\n      <el-row :gutter=\"16\">\n        <el-col :span=\"12\">\n          <el-form-item label=\"负责人\" prop=\"owner\">\n            <el-select v-model=\"formState.owner\" placeholder=\"选择负责人\">\n              <el-option\n                v-for=\"user in ownerOptions\"\n                :key=\"user.value\"\n                :label=\"user.label\"\n                :value=\"user.value\"\n              />\n            </el-select>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"12\">\n          <el-form-item label=\"标签\" prop=\"tags\">\n            <el-select v-model=\"formState.tags\" multiple collapse-tags placeholder=\"业务标签\">\n              <el-option v-for=\"tag in tagOptions\" :key=\"tag\" :label=\"tag\" :value=\"tag\" />\n            </el-select>\n          </el-form-item>\n        </el-col>\n      </el-row>\n\n      <el-form-item label=\"幂等 Key 生成器\" prop=\"idempotentKey\">\n        <el-input v-model=\"formState.idempotentKey\" placeholder=\"例如 ${bizId}-${yyyyMMddHHmm}\" />\n      </el-form-item>\n\n      <el-form-item label=\"执行参数\" prop=\"parameters\">\n        <el-input\n          v-model=\"formState.parameters\"\n          type=\"textarea\"\n          :rows=\"4\"\n          placeholder='JSON 参数，例如 {\"reportType\":\"DAILY\"}'\n        />\n      </el-form-item>\n\n      <el-form-item label=\"任务描述\" prop=\"description\">\n        <el-input v-model=\"formState.description\" type=\"textarea\" :rows=\"3\" />\n      </el-form-item>\n    </el-form>\n\n    <template #footer>\n      <div class=\"drawer__footer\">\n        <el-button @click=\"handleClose\">取消</el-button>\n        <el-button type=\"primary\" :loading=\"submitting\" @click=\"handleSubmit\">保存</el-button>\n      </div>\n    </template>\n  </el-drawer>\n</template>\n\n<script setup>\nimport { computed, nextTick, reactive, ref, watch } from 'vue';\n\nconst props = defineProps({\n  visible: {\n    type: Boolean,\n    default: false\n  },\n  modelValue: {\n    type: Object,\n    default: () => ({})\n  },\n  groupOptions: {\n    type: Array,\n    default: () => []\n  },\n  ownerOptions: {\n    type: Array,\n    default: () => []\n  },\n  tagOptions: {\n    type: Array,\n    default: () => []\n  },\n  submitting: {\n    type: Boolean,\n    default: false\n  }\n});\n\nconst emit = defineEmits(['update:visible', 'submit', 'cron-helper', 'cron-preview']);\n\nconst formRef = ref(null);\n\nconst createInitialState = () => ({\n  id: null,\n  name: '',\n  group: '',\n  type: 'CRON',\n  executorType: 'GRPC',\n  cronExpr: '',\n  timeZone: 'Asia/Shanghai',\n  routeStrategy: 'ROUND_ROBIN',\n  retryPolicy: 'EXP_BACKOFF',\n  maxRetry: 3,\n  timeout: 300,\n  owner: '',\n  tags: [],\n  idempotentKey: '',\n  parameters: '',\n  description: ''\n});\n\nconst formState = reactive(createInitialState());\n\nfunction applyModelValue(value) {\n  Object.assign(formState, createInitialState(), value || {});\n}\n\nfunction resetForm() {\n  nextTick(() => {\n    formRef.value?.resetFields();\n    Object.assign(formState, createInitialState());\n  });\n}\n\nwatch(\n  () => props.modelValue,\n  (val) => {\n    if (val && Object.keys(val).length) {\n      applyModelValue(val);\n    } else {\n      resetForm();\n    }\n  },\n  { immediate: true, deep: true }\n);\n\nconst formTitle = computed(() => (formState.id ? '编辑任务' : '新建任务'));\n\nconst rules = {\n  name: [{ required: true, message: '请输入任务名称', trigger: 'blur' }],\n  group: [{ required: true, message: '请选择任务分组', trigger: 'change' }],\n  type: [{ required: true, message: '请选择任务类型', trigger: 'change' }],\n  executorType: [{ required: true, message: '请选择执行方式', trigger: 'change' }],\n  cronExpr: [\n    {\n      validator: (_, value, callback) => {\n        if (formState.type === 'CRON' && !value) {\n          callback(new Error('请输入 Cron 表达式'));\n        } else {\n          callback();\n        }\n      },\n      trigger: 'blur'\n    }\n  ],\n  owner: [{ required: true, message: '请选择负责人', trigger: 'change' }]\n};\n\nfunction handleClose() {\n  emit('update:visible', false);\n  resetForm();\n}\n\nfunction handleSubmit() {\n  formRef.value?.validate((valid) => {\n    if (valid) {\n      emit('submit', { ...formState });\n    }\n  });\n}\n\nfunction handleCronHelper() {\n  emit('cron-helper', formState.cronExpr);\n}\n\nfunction emitCronPreview() {\n  if (formState.cronExpr) {\n    emit('cron-preview', formState.cronExpr);\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n.drawer__footer {\n  display: flex;\n  justify-content: flex-end;\n  gap: 12px;\n  padding-top: 12px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
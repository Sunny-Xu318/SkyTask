{"ast":null,"code":"import { computed, onMounted, reactive, ref, watch } from 'vue';\nimport { useStore } from 'vuex';\nimport { ElMessage } from 'element-plus';\nimport { fetchAlertRules, updateAlertRule, deleteAlertRule, createAlertRule, testAlertChannel } from '@/api/alerts';\nexport default {\n  __name: 'ConfigCenterView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const store = useStore();\n    const alertRules = ref([]);\n    const loading = ref(false);\n    const saving = ref(false);\n    const savingRule = ref(false);\n    const ruleDrawerVisible = ref(false);\n    const canManageConfig = computed(() => store.getters['auth/hasPermission']('config:write'));\n    const globalConfig = reactive({\n      defaultRetry: 3,\n      retryInterval: 60,\n      schedulerMode: 'LEADER_ELECTION',\n      maxConcurrentTasks: 2000,\n      idempotentGuards: ['数据库状态机', 'Redis 幂等锁'],\n      autoRecover: true\n    });\n    const currentRule = reactive({\n      id: null,\n      name: '',\n      metric: 'FAILURE_RATE',\n      threshold: 3,\n      channels: ['EMAIL'],\n      subscribers: [],\n      enabled: true\n    });\n    const loadRules = async () => {\n      if (!canManageConfig.value) {\n        alertRules.value = [];\n        return;\n      }\n      loading.value = true;\n      try {\n        alertRules.value = await fetchAlertRules();\n      } finally {\n        loading.value = false;\n      }\n    };\n    onMounted(() => {\n      loadRules();\n    });\n    watch(canManageConfig, allowed => {\n      if (allowed) {\n        loadRules();\n      } else {\n        alertRules.value = [];\n      }\n    });\n    const saveGlobalConfig = async () => {\n      if (!canManageConfig.value) {\n        ElMessage.warning('没有权限执行此操作');\n        return;\n      }\n      saving.value = true;\n      try {\n        await testAlertChannel({\n          ping: true\n        });\n        ElMessage.success('配置保存成功（示例）');\n      } finally {\n        saving.value = false;\n      }\n    };\n    const openRuleDrawer = () => {\n      if (!canManageConfig.value) {\n        ElMessage.warning('没有权限执行此操作');\n        return;\n      }\n      Object.assign(currentRule, {\n        id: null,\n        name: '',\n        metric: 'FAILURE_RATE',\n        threshold: 3,\n        channels: ['EMAIL'],\n        subscribers: [],\n        enabled: true\n      });\n      ruleDrawerVisible.value = true;\n    };\n    const editRule = rule => {\n      if (!canManageConfig.value) {\n        ElMessage.warning('没有权限执行此操作');\n        return;\n      }\n      Object.assign(currentRule, rule);\n      ruleDrawerVisible.value = true;\n    };\n    const toggleRule = async rule => {\n      if (!canManageConfig.value) {\n        ElMessage.warning('没有权限执行此操作');\n        return;\n      }\n      await updateAlertRule(rule.id, {\n        enabled: rule.enabled\n      });\n      ElMessage.success('规则已更新');\n    };\n    const removeRule = async rule => {\n      if (!canManageConfig.value) {\n        ElMessage.warning('没有权限执行此操作');\n        return;\n      }\n      await deleteAlertRule(rule.id);\n      await loadRules();\n      ElMessage.success('规则已删除');\n    };\n    const saveRule = async () => {\n      if (!canManageConfig.value) {\n        ElMessage.warning('没有权限执行此操作');\n        return;\n      }\n      savingRule.value = true;\n      try {\n        if (currentRule.id) {\n          await updateAlertRule(currentRule.id, currentRule);\n        } else {\n          await createAlertRule(currentRule);\n        }\n        await loadRules();\n        ruleDrawerVisible.value = false;\n        ElMessage.success('规则保存成功');\n      } finally {\n        savingRule.value = false;\n      }\n    };\n    const channelLabel = channel => {\n      const map = {\n        EMAIL: '邮件',\n        DINGTALK: '钉钉',\n        SMS: '短信'\n      };\n      return map[channel] || channel;\n    };\n    const __returned__ = {\n      store,\n      alertRules,\n      loading,\n      saving,\n      savingRule,\n      ruleDrawerVisible,\n      canManageConfig,\n      globalConfig,\n      currentRule,\n      loadRules,\n      saveGlobalConfig,\n      openRuleDrawer,\n      editRule,\n      toggleRule,\n      removeRule,\n      saveRule,\n      channelLabel,\n      computed,\n      onMounted,\n      reactive,\n      ref,\n      watch,\n      get useStore() {\n        return useStore;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get fetchAlertRules() {\n        return fetchAlertRules;\n      },\n      get updateAlertRule() {\n        return updateAlertRule;\n      },\n      get deleteAlertRule() {\n        return deleteAlertRule;\n      },\n      get createAlertRule() {\n        return createAlertRule;\n      },\n      get testAlertChannel() {\n        return testAlertChannel;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","onMounted","reactive","ref","watch","useStore","ElMessage","fetchAlertRules","updateAlertRule","deleteAlertRule","createAlertRule","testAlertChannel","store","alertRules","loading","saving","savingRule","ruleDrawerVisible","canManageConfig","getters","globalConfig","defaultRetry","retryInterval","schedulerMode","maxConcurrentTasks","idempotentGuards","autoRecover","currentRule","id","name","metric","threshold","channels","subscribers","enabled","loadRules","value","allowed","saveGlobalConfig","warning","ping","success","openRuleDrawer","Object","assign","editRule","rule","toggleRule","removeRule","saveRule","channelLabel","channel","map","EMAIL","DINGTALK","SMS"],"sources":["D:/桌面/项目/分布式任务调度系统/SkyTask/skytask-frontend/src/views/ConfigCenterView.vue"],"sourcesContent":["<template>\n  <div class=\"config-center-wrapper\">\n    <div v-if=\"canManageConfig\" class=\"config-center\">\n      <section class=\"card config-center__section\">\n        <div class=\"section__header\">\n          <h3>全局调度配置</h3>\n          <el-button type=\"primary\" size=\"small\" :loading=\"saving\" @click=\"saveGlobalConfig\">\n            保存\n          </el-button>\n        </div>\n        <el-form :model=\"globalConfig\" label-width=\"140px\">\n          <el-row :gutter=\"24\">\n            <el-col :span=\"12\">\n              <el-form-item label=\"默认重试次数\">\n                <el-input-number v-model=\"globalConfig.defaultRetry\" :min=\"0\" :max=\"10\" />\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"12\">\n              <el-form-item label=\"重试间隔（秒）\">\n                <el-input-number v-model=\"globalConfig.retryInterval\" :min=\"5\" :max=\"600\" />\n              </el-form-item>\n            </el-col>\n          </el-row>\n          <el-row :gutter=\"24\">\n            <el-col :span=\"12\">\n              <el-form-item label=\"调度集群模式\">\n                <el-select v-model=\"globalConfig.schedulerMode\">\n                  <el-option label=\"自动主备（Leader 选举）\" value=\"LEADER_ELECTION\" />\n                  <el-option label=\"多主（分布式锁）\" value=\"MULTI_MASTER\" />\n                </el-select>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"12\">\n              <el-form-item label=\"最大并发任务数\">\n                <el-input-number v-model=\"globalConfig.maxConcurrentTasks\" :min=\"10\" :max=\"5000\" />\n              </el-form-item>\n            </el-col>\n          </el-row>\n          <el-form-item label=\"任务幂等保障\">\n            <el-checkbox-group v-model=\"globalConfig.idempotentGuards\">\n              <el-checkbox label=\"数据库状态机\" />\n              <el-checkbox label=\"Redis 幂等锁\" />\n              <el-checkbox label=\"执行日志校验\" />\n            </el-checkbox-group>\n          </el-form-item>\n          <el-form-item label=\"执行超时自愈\">\n            <el-switch v-model=\"globalConfig.autoRecover\" />\n            <span class=\"form-tip\">启用后，超时任务会自动中断并重新调度。</span>\n          </el-form-item>\n        </el-form>\n      </section>\n\n      <section class=\"card config-center__section\">\n        <div class=\"section__header\">\n          <h3>告警策略</h3>\n          <el-button type=\"primary\" size=\"small\" @click=\"openRuleDrawer\">新增规则</el-button>\n        </div>\n        <el-table :data=\"alertRules\" size=\"small\" v-loading=\"loading\">\n          <el-table-column prop=\"name\" label=\"规则名称\" min-width=\"160\" />\n          <el-table-column prop=\"metric\" label=\"监控指标\" width=\"140\" />\n          <el-table-column prop=\"threshold\" label=\"阈值\" width=\"120\" />\n          <el-table-column label=\"告警渠道\" width=\"160\">\n            <template #default=\"{ row }\">\n              <el-tag v-for=\"channel in row.channels\" :key=\"channel\" size=\"small\" effect=\"plain\">\n                {{ channelLabel(channel) }}\n              </el-tag>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"启用状态\" width=\"120\">\n            <template #default=\"{ row }\">\n              <el-switch v-model=\"row.enabled\" @change=\"toggleRule(row)\" />\n            </template>\n          </el-table-column>\n          <el-table-column label=\"操作\" width=\"160\" fixed=\"right\">\n            <template #default=\"{ row }\">\n              <el-button link size=\"small\" type=\"primary\" @click=\"editRule(row)\">编辑</el-button>\n              <el-popconfirm title=\"确认删除该规则？\" @confirm=\"removeRule(row)\">\n                <template #reference>\n                  <el-button link size=\"small\" type=\"danger\">删除</el-button>\n                </template>\n              </el-popconfirm>\n            </template>\n          </el-table-column>\n        </el-table>\n      </section>\n\n      <section class=\"card config-center__section\">\n        <div class=\"section__header\">\n          <h3>环境与租户说明</h3>\n        </div>\n        <el-row :gutter=\"20\">\n          <el-col :span=\"12\">\n            <el-card shadow=\"hover\">\n              <template #header>\n                <span>环境隔离</span>\n              </template>\n              <el-timeline>\n                <el-timeline-item timestamp=\"dev\" type=\"primary\">\n                  使用 dev 数据源，允许调试与 Mock。\n                </el-timeline-item>\n                <el-timeline-item timestamp=\"test\" type=\"warning\">\n                  使用 test 数据源，开启审计与回放。\n                </el-timeline-item>\n                <el-timeline-item timestamp=\"prod\" type=\"success\">\n                  使用 prod 数据源，开启幂等锁、告警。\n                </el-timeline-item>\n              </el-timeline>\n            </el-card>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-card shadow=\"hover\">\n              <template #header>\n                <span>租户配置示例</span>\n              </template>\n              <ul class=\"tenant-list\">\n                <li><strong>默认租户：</strong>共享任务模板，限流 500 QPS。</li>\n                <li><strong>营销团队：</strong>Kafka Topic 独立，执行节点 10 台。</li>\n                <li><strong>风控团队：</strong>开启策略隔离，消息加密。</li>\n              </ul>\n            </el-card>\n          </el-col>\n        </el-row>\n      </section>\n    </div>\n\n    <section v-else class=\"card config-center__empty\">\n      <el-empty description=\"当前账号没有查看或管理配置的权限\" />\n    </section>\n\n    <el-drawer v-model=\"ruleDrawerVisible\" title=\"告警规则\" size=\"30%\">\n      <el-form :model=\"currentRule\" label-width=\"110px\">\n        <el-form-item label=\"规则名称\">\n          <el-input v-model=\"currentRule.name\" />\n        </el-form-item>\n        <el-form-item label=\"监控指标\">\n          <el-select v-model=\"currentRule.metric\">\n            <el-option label=\"失败率\" value=\"FAILURE_RATE\" />\n            <el-option label=\"延迟\" value=\"LATENCY\" />\n            <el-option label=\"积压任务\" value=\"BACKLOG\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"触发阈值\">\n          <el-input-number v-model=\"currentRule.threshold\" :min=\"1\" :max=\"10000\" />\n        </el-form-item>\n        <el-form-item label=\"告警渠道\">\n          <el-checkbox-group v-model=\"currentRule.channels\">\n            <el-checkbox label=\"EMAIL\" />\n            <el-checkbox label=\"DINGTALK\" />\n            <el-checkbox label=\"SMS\" />\n          </el-checkbox-group>\n        </el-form-item>\n        <el-form-item label=\"通知人\">\n          <el-select v-model=\"currentRule.subscribers\" multiple filterable>\n            <el-option label=\"张强\" value=\"zhangqiang@corp.com\" />\n            <el-option label=\"李娜\" value=\"lina@corp.com\" />\n            <el-option label=\"王伟\" value=\"wangwei@corp.com\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"启用状态\">\n          <el-switch v-model=\"currentRule.enabled\" />\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <div class=\"drawer-footer\">\n          <el-button @click=\"ruleDrawerVisible = false\">取消</el-button>\n          <el-button type=\"primary\" :loading=\"savingRule\" @click=\"saveRule\">保存</el-button>\n        </div>\n      </template>\n    </el-drawer>\n  </div>\n</template>\n\n<script setup>\nimport { computed, onMounted, reactive, ref, watch } from 'vue';\nimport { useStore } from 'vuex';\nimport { ElMessage } from 'element-plus';\nimport {\n  fetchAlertRules,\n  updateAlertRule,\n  deleteAlertRule,\n  createAlertRule,\n  testAlertChannel\n} from '@/api/alerts';\n\nconst store = useStore();\n\nconst alertRules = ref([]);\nconst loading = ref(false);\nconst saving = ref(false);\nconst savingRule = ref(false);\nconst ruleDrawerVisible = ref(false);\n\nconst canManageConfig = computed(() => store.getters['auth/hasPermission']('config:write'));\n\nconst globalConfig = reactive({\n  defaultRetry: 3,\n  retryInterval: 60,\n  schedulerMode: 'LEADER_ELECTION',\n  maxConcurrentTasks: 2000,\n  idempotentGuards: ['数据库状态机', 'Redis 幂等锁'],\n  autoRecover: true\n});\n\nconst currentRule = reactive({\n  id: null,\n  name: '',\n  metric: 'FAILURE_RATE',\n  threshold: 3,\n  channels: ['EMAIL'],\n  subscribers: [],\n  enabled: true\n});\n\nconst loadRules = async () => {\n  if (!canManageConfig.value) {\n    alertRules.value = [];\n    return;\n  }\n  loading.value = true;\n  try {\n    alertRules.value = await fetchAlertRules();\n  } finally {\n    loading.value = false;\n  }\n};\n\nonMounted(() => {\n  loadRules();\n});\n\nwatch(\n  canManageConfig,\n  (allowed) => {\n    if (allowed) {\n      loadRules();\n    } else {\n      alertRules.value = [];\n    }\n  }\n);\n\nconst saveGlobalConfig = async () => {\n  if (!canManageConfig.value) {\n    ElMessage.warning('没有权限执行此操作');\n    return;\n  }\n  saving.value = true;\n  try {\n    await testAlertChannel({ ping: true });\n    ElMessage.success('配置保存成功（示例）');\n  } finally {\n    saving.value = false;\n  }\n};\n\nconst openRuleDrawer = () => {\n  if (!canManageConfig.value) {\n    ElMessage.warning('没有权限执行此操作');\n    return;\n  }\n  Object.assign(currentRule, {\n    id: null,\n    name: '',\n    metric: 'FAILURE_RATE',\n    threshold: 3,\n    channels: ['EMAIL'],\n    subscribers: [],\n    enabled: true\n  });\n  ruleDrawerVisible.value = true;\n};\n\nconst editRule = (rule) => {\n  if (!canManageConfig.value) {\n    ElMessage.warning('没有权限执行此操作');\n    return;\n  }\n  Object.assign(currentRule, rule);\n  ruleDrawerVisible.value = true;\n};\n\nconst toggleRule = async (rule) => {\n  if (!canManageConfig.value) {\n    ElMessage.warning('没有权限执行此操作');\n    return;\n  }\n  await updateAlertRule(rule.id, { enabled: rule.enabled });\n  ElMessage.success('规则已更新');\n};\n\nconst removeRule = async (rule) => {\n  if (!canManageConfig.value) {\n    ElMessage.warning('没有权限执行此操作');\n    return;\n  }\n  await deleteAlertRule(rule.id);\n  await loadRules();\n  ElMessage.success('规则已删除');\n};\n\nconst saveRule = async () => {\n  if (!canManageConfig.value) {\n    ElMessage.warning('没有权限执行此操作');\n    return;\n  }\n  savingRule.value = true;\n  try {\n    if (currentRule.id) {\n      await updateAlertRule(currentRule.id, currentRule);\n    } else {\n      await createAlertRule(currentRule);\n    }\n    await loadRules();\n    ruleDrawerVisible.value = false;\n    ElMessage.success('规则保存成功');\n  } finally {\n    savingRule.value = false;\n  }\n};\n\nconst channelLabel = (channel) => {\n  const map = {\n    EMAIL: '邮件',\n    DINGTALK: '钉钉',\n    SMS: '短信'\n  };\n  return map[channel] || channel;\n};\n</script>\n\n<style scoped lang=\"scss\">\n.config-center-wrapper {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.config-center {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.config-center__section {\n  padding: 20px 24px;\n\n  .section__header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 20px;\n\n    h3 {\n      margin: 0;\n      font-size: 18px;\n      font-weight: 600;\n    }\n  }\n}\n\n.form-tip {\n  margin-left: 12px;\n  font-size: 12px;\n  color: #64748b;\n}\n\n.tenant-list {\n  margin: 0;\n  padding-left: 18px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  font-size: 13px;\n  color: #475569;\n\n  strong {\n    color: #0f172a;\n  }\n}\n\n.drawer-footer {\n  display: flex;\n  justify-content: flex-end;\n  gap: 12px;\n}\n\n.config-center__empty {\n  display: flex;\n  justify-content: center;\n  padding: 48px 0;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
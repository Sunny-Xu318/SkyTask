{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createVNode as _createVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, resolveDirective as _resolveDirective, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"task-detail\"\n};\nconst _hoisted_2 = {\n  class: \"header\"\n};\nconst _hoisted_3 = {\n  class: \"header__title\"\n};\nconst _hoisted_4 = {\n  class: \"content\"\n};\nconst _hoisted_5 = {\n  class: \"card detail-card\"\n};\nconst _hoisted_6 = {\n  class: \"detail-card__section\"\n};\nconst _hoisted_7 = {\n  key: 1\n};\nconst _hoisted_8 = {\n  class: \"detail-card__section\"\n};\nconst _hoisted_9 = {\n  class: \"detail-card__section\"\n};\nconst _hoisted_10 = {\n  class: \"card chart-card\"\n};\nconst _hoisted_11 = {\n  class: \"chart-card__header\"\n};\nconst _hoisted_12 = {\n  class: \"chart-content\"\n};\nconst _hoisted_13 = {\n  class: \"card chart-card\"\n};\nconst _hoisted_14 = {\n  class: \"chart-card__header\"\n};\nconst _hoisted_15 = {\n  class: \"chart-content\"\n};\nconst _hoisted_16 = {\n  class: \"card execution-card\"\n};\nconst _hoisted_17 = {\n  class: \"execution-card__header\"\n};\nconst _hoisted_18 = {\n  class: \"card dependency-card\"\n};\nconst _hoisted_19 = {\n  class: \"dependency-card__header\"\n};\nconst _hoisted_20 = {\n  class: \"dependency-item\"\n};\nconst _hoisted_21 = {\n  class: \"log\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_popconfirm = _resolveComponent(\"el-popconfirm\");\n  const _component_el_space = _resolveComponent(\"el-space\");\n  const _component_el_page_header = _resolveComponent(\"el-page-header\");\n  const _component_el_descriptions_item = _resolveComponent(\"el-descriptions-item\");\n  const _component_el_descriptions = _resolveComponent(\"el-descriptions\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_radio_button = _resolveComponent(\"el-radio-button\");\n  const _component_el_radio_group = _resolveComponent(\"el-radio-group\");\n  const _component_el_empty = _resolveComponent(\"el-empty\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_timeline_item = _resolveComponent(\"el-timeline-item\");\n  const _component_el_timeline = _resolveComponent(\"el-timeline\");\n  const _component_el_scrollbar = _resolveComponent(\"el-scrollbar\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_page_header, {\n    onBack: $setup.goBack\n  }, {\n    content: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"span\", _hoisted_3, _toDisplayString($setup.detail?.name || '任务详情'), 1 /* TEXT */), _createVNode($setup[\"StatusTag\"], {\n      status: $setup.detail?.enabled ? 'SUCCESS' : 'DISABLED'\n    }, null, 8 /* PROPS */, [\"status\"]), $setup.detail?.group ? (_openBlock(), _createBlock(_component_el_tag, {\n      key: 0,\n      type: \"info\",\n      effect: \"plain\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.detail.group), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true)])]),\n    extra: _withCtx(() => [_createVNode(_component_el_space, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $setup.triggerTask,\n        loading: $setup.triggering\n      }, {\n        default: _withCtx(() => [...(_cache[5] || (_cache[5] = [_createTextVNode(\" 立即执行 \", -1 /* CACHED */)]))]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"loading\"]), _createVNode(_component_el_button, {\n        onClick: $setup.openEdit\n      }, {\n        default: _withCtx(() => [...(_cache[6] || (_cache[6] = [_createTextVNode(\"编辑任务\", -1 /* CACHED */)]))]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_popconfirm, {\n        title: \"确认删除该任务？\",\n        \"confirm-button-text\": \"确认\",\n        \"cancel-button-text\": \"取消\",\n        onConfirm: $setup.confirmDelete\n      }, {\n        reference: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"danger\"\n        }, {\n          default: _withCtx(() => [...(_cache[7] || (_cache[7] = [_createTextVNode(\"删除\", -1 /* CACHED */)]))]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }), _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createCommentVNode(\" 基础信息 \"), _createElementVNode(\"section\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_cache[8] || (_cache[8] = _createElementVNode(\"h3\", null, \"基础信息\", -1 /* CACHED */)), _createVNode(_component_el_descriptions, {\n    column: 2,\n    size: \"small\",\n    border: \"\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_descriptions_item, {\n      label: \"任务 ID\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.detail?.id || '-'), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_descriptions_item, {\n      label: \"任务类型\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.typeLabel($setup.detail?.type)), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_descriptions_item, {\n      label: \"执行方式\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.executorLabel($setup.detail?.executorType)), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_descriptions_item, {\n      label: \"Cron 表达式\"\n    }, {\n      default: _withCtx(() => [$setup.detail?.cronExpr ? (_openBlock(), _createBlock(_component_el_tag, {\n        key: 0,\n        type: \"success\",\n        effect: \"plain\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.detail.cronExpr), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      })) : (_openBlock(), _createElementBlock(\"span\", _hoisted_7, \"-\"))]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_descriptions_item, {\n      label: \"负责人\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.detail?.owner || '-'), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_descriptions_item, {\n      label: \"超时时间\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.detail?.timeout || 300) + \" 秒\", 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_descriptions_item, {\n      label: \"创建时间\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.detail?.createdAt || '-'), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_descriptions_item, {\n      label: \"更新时间\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.detail?.updatedAt || '-'), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  })]), _createElementVNode(\"div\", _hoisted_8, [_cache[9] || (_cache[9] = _createElementVNode(\"h3\", null, \"调度策略\", -1 /* CACHED */)), _createVNode(_component_el_descriptions, {\n    column: 2,\n    size: \"small\",\n    border: \"\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_descriptions_item, {\n      label: \"路由策略\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.routeLabel($setup.detail?.routeStrategy)), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_descriptions_item, {\n      label: \"最大重试\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.detail?.maxRetry || 3) + \" 次\", 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_descriptions_item, {\n      label: \"重试策略\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.retryLabel($setup.detail?.retryPolicy)), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_descriptions_item, {\n      label: \"分片数量\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.detail?.shardCount || 1), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_descriptions_item, {\n      label: \"幂等 Key\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.detail?.idempotentKey || '无'), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_descriptions_item, {\n      label: \"并发策略\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.concurrencyLabel($setup.detail?.concurrencyPolicy)), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  })]), _createElementVNode(\"div\", _hoisted_9, [_cache[10] || (_cache[10] = _createElementVNode(\"h3\", null, \"任务参数\", -1 /* CACHED */)), _createVNode(_component_el_input, {\n    modelValue: $setup.parameterText,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.parameterText = $event),\n    type: \"textarea\",\n    rows: 5,\n    readonly: \"\",\n    placeholder: \"无参数配置\"\n  }, null, 8 /* PROPS */, [\"modelValue\"])])]), _createCommentVNode(\" 执行成功率趋势图 \"), _createElementVNode(\"section\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_cache[14] || (_cache[14] = _createElementVNode(\"h3\", null, \"执行成功率趋势\", -1 /* CACHED */)), _createVNode(_component_el_radio_group, {\n    modelValue: $setup.chartRange,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.chartRange = $event),\n    size: \"small\",\n    onChange: $setup.loadExecutions\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_radio_button, {\n      label: \"24h\"\n    }, {\n      default: _withCtx(() => [...(_cache[11] || (_cache[11] = [_createTextVNode(\"24小时\", -1 /* CACHED */)]))]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_radio_button, {\n      label: \"7d\"\n    }, {\n      default: _withCtx(() => [...(_cache[12] || (_cache[12] = [_createTextVNode(\"7天\", -1 /* CACHED */)]))]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_radio_button, {\n      label: \"30d\"\n    }, {\n      default: _withCtx(() => [...(_cache[13] || (_cache[13] = [_createTextVNode(\"30天\", -1 /* CACHED */)]))]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])]), _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_12, [$setup.hasExecutionData ? (_openBlock(), _createBlock($setup[\"BaseChart\"], {\n    key: 0,\n    options: $setup.successTrendOptions,\n    class: \"chart\"\n  }, null, 8 /* PROPS */, [\"options\"])) : (_openBlock(), _createBlock(_component_el_empty, {\n    key: 1,\n    description: \"暂无执行数据\"\n  }))])), [[_directive_loading, $setup.executionLoading]])]), _createCommentVNode(\" 执行耗时分布图 \"), _createElementVNode(\"section\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [_cache[16] || (_cache[16] = _createElementVNode(\"h3\", null, \"执行耗时分布\", -1 /* CACHED */)), _createVNode(_component_el_tag, {\n    size: \"small\",\n    type: \"info\"\n  }, {\n    default: _withCtx(() => [...(_cache[15] || (_cache[15] = [_createTextVNode(\"最近20次执行\", -1 /* CACHED */)]))]),\n    _: 1 /* STABLE */\n  })]), _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_15, [$setup.hasExecutionData ? (_openBlock(), _createBlock($setup[\"BaseChart\"], {\n    key: 0,\n    options: $setup.durationChartOptions,\n    class: \"chart\"\n  }, null, 8 /* PROPS */, [\"options\"])) : (_openBlock(), _createBlock(_component_el_empty, {\n    key: 1,\n    description: \"暂无执行数据\"\n  }))])), [[_directive_loading, $setup.executionLoading]])]), _createCommentVNode(\" 执行记录表格 \"), _createElementVNode(\"section\", _hoisted_16, [_createElementVNode(\"div\", _hoisted_17, [_cache[18] || (_cache[18] = _createElementVNode(\"h3\", null, \"最近执行记录\", -1 /* CACHED */)), _createVNode(_component_el_space, null, {\n    default: _withCtx(() => [_createVNode(_component_el_tag, {\n      size: \"small\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\" 成功: \" + _toDisplayString($setup.executionStats.success) + \" | 失败: \" + _toDisplayString($setup.executionStats.failed), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_button, {\n      size: \"small\",\n      onClick: $setup.loadExecutions\n    }, {\n      default: _withCtx(() => [...(_cache[17] || (_cache[17] = [_createTextVNode(\"刷新\", -1 /* CACHED */)]))]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  })]), _withDirectives((_openBlock(), _createBlock(_component_el_table, {\n    data: $setup.executions,\n    height: \"320\"\n  }, {\n    empty: _withCtx(() => [_createVNode(_component_el_empty, {\n      description: \"暂无执行记录\"\n    })]),\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      prop: \"triggerTime\",\n      label: \"调度时间\",\n      width: \"160\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"node\",\n      label: \"执行节点\",\n      width: \"140\",\n      \"show-overflow-tooltip\": \"\"\n    }), _createVNode(_component_el_table_column, {\n      label: \"状态\",\n      width: \"100\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createVNode($setup[\"StatusTag\"], {\n        status: row.status || 'UNKNOWN'\n      }, null, 8 /* PROPS */, [\"status\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      prop: \"duration\",\n      label: \"耗时\",\n      width: \"100\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createVNode(_component_el_tag, {\n        type: $setup.getDurationTagType(row.duration),\n        size: \"small\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(row.duration || 0) + \"ms \", 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      prop: \"attempts\",\n      label: \"重试次数\",\n      width: \"100\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"traceId\",\n      label: \"TraceId\",\n      \"min-width\": \"140\",\n      \"show-overflow-tooltip\": \"\"\n    }), _createVNode(_component_el_table_column, {\n      label: \"操作\",\n      width: \"120\",\n      fixed: \"right\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createVNode(_component_el_button, {\n        link: \"\",\n        type: \"primary\",\n        size: \"small\",\n        onClick: $event => $setup.openLog(row)\n      }, {\n        default: _withCtx(() => [...(_cache[19] || (_cache[19] = [_createTextVNode(\" 查看日志 \", -1 /* CACHED */)]))]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\"])), [[_directive_loading, $setup.executionLoading]])]), _createCommentVNode(\" 任务依赖拓扑 \"), _createElementVNode(\"section\", _hoisted_18, [_createElementVNode(\"div\", _hoisted_19, [_cache[20] || (_cache[20] = _createElementVNode(\"h3\", null, \"任务依赖拓扑\", -1 /* CACHED */)), $setup.detail?.dependencies?.length ? (_openBlock(), _createBlock(_component_el_tag, {\n    key: 0,\n    size: \"small\",\n    type: \"info\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" 共 \" + _toDisplayString($setup.detail.dependencies.length) + \" 个依赖 \", 1 /* TEXT */)]),\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true)]), _createVNode($setup[\"TaskDependencyGraph\"], {\n    \"task-name\": $setup.detail?.name,\n    dependencies: $setup.detail?.dependencies || []\n  }, null, 8 /* PROPS */, [\"task-name\", \"dependencies\"]), $setup.detail?.dependencies?.length ? (_openBlock(), _createBlock(_component_el_timeline, {\n    key: 0,\n    class: \"dependency-timeline\"\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.detail?.dependencies, dep => {\n      return _openBlock(), _createBlock(_component_el_timeline_item, {\n        key: dep.id,\n        timestamp: dep.triggerType || '前置任务',\n        type: dep.status === 'SUCCESS' ? 'success' : dep.status === 'FAILED' ? 'danger' : 'info'\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"strong\", null, _toDisplayString(dep.name), 1 /* TEXT */), _createElementVNode(\"span\", null, \"执行节点：\" + _toDisplayString(dep.node || '-'), 1 /* TEXT */), _createElementVNode(\"span\", null, [_cache[21] || (_cache[21] = _createTextVNode(\"任务状态：\", -1 /* CACHED */)), _createVNode($setup[\"StatusTag\"], {\n          status: dep.status || 'UNKNOWN'\n        }, null, 8 /* PROPS */, [\"status\"])]), dep.cronExpr ? (_openBlock(), _createBlock(_component_el_tag, {\n          key: 0,\n          size: \"small\",\n          effect: \"plain\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(dep.cronExpr), 1 /* TEXT */)]),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true)])]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"timestamp\", \"type\"]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true)])])), [[_directive_loading, $setup.detailLoading]]), _createCommentVNode(\" 编辑抽屉 \"), _createVNode($setup[\"TaskFormDrawer\"], {\n    visible: $setup.drawerVisible,\n    \"onUpdate:visible\": _cache[2] || (_cache[2] = $event => $setup.drawerVisible = $event),\n    \"model-value\": $setup.detail,\n    \"group-options\": $setup.groupOptions,\n    \"owner-options\": $setup.ownerOptions,\n    \"tag-options\": $setup.tagOptions,\n    submitting: $setup.submitting,\n    onSubmit: $setup.submitTask\n  }, null, 8 /* PROPS */, [\"visible\", \"model-value\", \"submitting\"]), _createCommentVNode(\" 日志对话框 \"), _createVNode(_component_el_dialog, {\n    modelValue: $setup.logVisible,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.logVisible = $event),\n    title: \"执行日志\",\n    width: \"70%\",\n    \"close-on-click-modal\": false\n  }, {\n    footer: _withCtx(() => [_createVNode(_component_el_button, {\n      onClick: _cache[3] || (_cache[3] = $event => $setup.logVisible = false)\n    }, {\n      default: _withCtx(() => [...(_cache[22] || (_cache[22] = [_createTextVNode(\"关闭\", -1 /* CACHED */)]))]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $setup.copyLog\n    }, {\n      default: _withCtx(() => [...(_cache[23] || (_cache[23] = [_createTextVNode(\"复制日志\", -1 /* CACHED */)]))]),\n      _: 1 /* STABLE */\n    })]),\n    default: _withCtx(() => [_createVNode(_component_el_scrollbar, {\n      height: \"500px\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"pre\", _hoisted_21, _toDisplayString($setup.activeLog), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_el_page_header","onBack","$setup","goBack","content","_withCtx","_createElementVNode","_hoisted_2","_hoisted_3","_toDisplayString","detail","name","status","enabled","group","_createBlock","_component_el_tag","type","effect","extra","_component_el_space","_component_el_button","onClick","triggerTask","loading","triggering","_cache","openEdit","_component_el_popconfirm","title","onConfirm","confirmDelete","reference","_hoisted_4","_createCommentVNode","_hoisted_5","_hoisted_6","_component_el_descriptions","column","size","border","_component_el_descriptions_item","label","id","typeLabel","executorLabel","executorType","cronExpr","_hoisted_7","owner","timeout","createdAt","updatedAt","_hoisted_8","routeLabel","routeStrategy","maxRetry","retryLabel","retryPolicy","shardCount","idempotentKey","concurrencyLabel","concurrencyPolicy","_hoisted_9","_component_el_input","parameterText","$event","rows","readonly","placeholder","_hoisted_10","_hoisted_11","_component_el_radio_group","chartRange","onChange","loadExecutions","_component_el_radio_button","_hoisted_12","hasExecutionData","options","successTrendOptions","_component_el_empty","description","executionLoading","_hoisted_13","_hoisted_14","_hoisted_15","durationChartOptions","_hoisted_16","_hoisted_17","executionStats","success","failed","_component_el_table","data","executions","height","empty","_component_el_table_column","prop","width","default","row","getDurationTagType","duration","fixed","link","openLog","_hoisted_18","_hoisted_19","dependencies","length","_component_el_timeline","_Fragment","_renderList","dep","_component_el_timeline_item","key","timestamp","triggerType","_hoisted_20","node","detailLoading","visible","drawerVisible","groupOptions","ownerOptions","tagOptions","submitting","onSubmit","submitTask","_component_el_dialog","logVisible","footer","copyLog","_component_el_scrollbar","_hoisted_21","activeLog"],"sources":["D:\\桌面\\项目\\分布式任务调度系统\\SkyTask\\skytask-frontend\\src\\views\\TaskDetailView.vue"],"sourcesContent":["<template>\r\n  <div class=\"task-detail\">\r\n    <el-page-header @back=\"goBack\">\r\n      <template #content>\r\n        <div class=\"header\">\r\n          <span class=\"header__title\">{{ detail?.name || '任务详情' }}</span>\r\n          <StatusTag :status=\"detail?.enabled ? 'SUCCESS' : 'DISABLED'\" />\r\n          <el-tag v-if=\"detail?.group\" type=\"info\" effect=\"plain\">{{ detail.group }}</el-tag>\r\n        </div>\r\n      </template>\r\n      <template #extra>\r\n        <el-space>\r\n          <el-button type=\"primary\" @click=\"triggerTask\" :loading=\"triggering\">\r\n            立即执行\r\n          </el-button>\r\n          <el-button @click=\"openEdit\">编辑任务</el-button>\r\n          <el-popconfirm\r\n            title=\"确认删除该任务？\"\r\n            confirm-button-text=\"确认\"\r\n            cancel-button-text=\"取消\"\r\n            @confirm=\"confirmDelete\"\r\n          >\r\n            <template #reference>\r\n              <el-button type=\"danger\">删除</el-button>\r\n            </template>\r\n          </el-popconfirm>\r\n        </el-space>\r\n      </template>\r\n    </el-page-header>\r\n\r\n    <div v-loading=\"detailLoading\" class=\"content\">\r\n      <!-- 基础信息 -->\r\n      <section class=\"card detail-card\">\r\n        <div class=\"detail-card__section\">\r\n          <h3>基础信息</h3>\r\n          <el-descriptions :column=\"2\" size=\"small\" border>\r\n            <el-descriptions-item label=\"任务 ID\">{{ detail?.id || '-' }}</el-descriptions-item>\r\n            <el-descriptions-item label=\"任务类型\">{{ typeLabel(detail?.type) }}</el-descriptions-item>\r\n            <el-descriptions-item label=\"执行方式\">{{ executorLabel(detail?.executorType) }}</el-descriptions-item>\r\n            <el-descriptions-item label=\"Cron 表达式\">\r\n              <el-tag v-if=\"detail?.cronExpr\" type=\"success\" effect=\"plain\">{{ detail.cronExpr }}</el-tag>\r\n              <span v-else>-</span>\r\n            </el-descriptions-item>\r\n            <el-descriptions-item label=\"负责人\">{{ detail?.owner || '-' }}</el-descriptions-item>\r\n            <el-descriptions-item label=\"超时时间\">{{ detail?.timeout || 300 }} 秒</el-descriptions-item>\r\n            <el-descriptions-item label=\"创建时间\">{{ detail?.createdAt || '-' }}</el-descriptions-item>\r\n            <el-descriptions-item label=\"更新时间\">{{ detail?.updatedAt || '-' }}</el-descriptions-item>\r\n          </el-descriptions>\r\n        </div>\r\n\r\n        <div class=\"detail-card__section\">\r\n          <h3>调度策略</h3>\r\n          <el-descriptions :column=\"2\" size=\"small\" border>\r\n            <el-descriptions-item label=\"路由策略\">{{ routeLabel(detail?.routeStrategy) }}</el-descriptions-item>\r\n            <el-descriptions-item label=\"最大重试\">{{ detail?.maxRetry || 3 }} 次</el-descriptions-item>\r\n            <el-descriptions-item label=\"重试策略\">{{ retryLabel(detail?.retryPolicy) }}</el-descriptions-item>\r\n            <el-descriptions-item label=\"分片数量\">{{ detail?.shardCount || 1 }}</el-descriptions-item>\r\n            <el-descriptions-item label=\"幂等 Key\">{{ detail?.idempotentKey || '无' }}</el-descriptions-item>\r\n            <el-descriptions-item label=\"并发策略\">{{ concurrencyLabel(detail?.concurrencyPolicy) }}</el-descriptions-item>\r\n          </el-descriptions>\r\n        </div>\r\n\r\n        <div class=\"detail-card__section\">\r\n          <h3>任务参数</h3>\r\n          <el-input\r\n            v-model=\"parameterText\"\r\n            type=\"textarea\"\r\n            :rows=\"5\"\r\n            readonly\r\n            placeholder=\"无参数配置\"\r\n          />\r\n        </div>\r\n      </section>\r\n\r\n      <!-- 执行成功率趋势图 -->\r\n      <section class=\"card chart-card\">\r\n        <div class=\"chart-card__header\">\r\n          <h3>执行成功率趋势</h3>\r\n          <el-radio-group v-model=\"chartRange\" size=\"small\" @change=\"loadExecutions\">\r\n            <el-radio-button label=\"24h\">24小时</el-radio-button>\r\n            <el-radio-button label=\"7d\">7天</el-radio-button>\r\n            <el-radio-button label=\"30d\">30天</el-radio-button>\r\n          </el-radio-group>\r\n        </div>\r\n        <div v-loading=\"executionLoading\" class=\"chart-content\">\r\n          <BaseChart v-if=\"hasExecutionData\" :options=\"successTrendOptions\" class=\"chart\" />\r\n          <el-empty v-else description=\"暂无执行数据\" />\r\n        </div>\r\n      </section>\r\n\r\n      <!-- 执行耗时分布图 -->\r\n      <section class=\"card chart-card\">\r\n        <div class=\"chart-card__header\">\r\n          <h3>执行耗时分布</h3>\r\n          <el-tag size=\"small\" type=\"info\">最近20次执行</el-tag>\r\n        </div>\r\n        <div v-loading=\"executionLoading\" class=\"chart-content\">\r\n          <BaseChart v-if=\"hasExecutionData\" :options=\"durationChartOptions\" class=\"chart\" />\r\n          <el-empty v-else description=\"暂无执行数据\" />\r\n        </div>\r\n      </section>\r\n\r\n      <!-- 执行记录表格 -->\r\n      <section class=\"card execution-card\">\r\n        <div class=\"execution-card__header\">\r\n          <h3>最近执行记录</h3>\r\n          <el-space>\r\n            <el-tag size=\"small\">\r\n              成功: {{ executionStats.success }} | 失败: {{ executionStats.failed }}\r\n            </el-tag>\r\n            <el-button size=\"small\" @click=\"loadExecutions\">刷新</el-button>\r\n          </el-space>\r\n        </div>\r\n        <el-table :data=\"executions\" height=\"320\" v-loading=\"executionLoading\">\r\n          <el-table-column prop=\"triggerTime\" label=\"调度时间\" width=\"160\" />\r\n          <el-table-column prop=\"node\" label=\"执行节点\" width=\"140\" show-overflow-tooltip />\r\n          <el-table-column label=\"状态\" width=\"100\">\r\n            <template #default=\"{ row }\">\r\n              <StatusTag :status=\"row.status || 'UNKNOWN'\" />\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"duration\" label=\"耗时\" width=\"100\">\r\n            <template #default=\"{ row }\">\r\n              <el-tag \r\n                :type=\"getDurationTagType(row.duration)\" \r\n                size=\"small\"\r\n              >\r\n                {{ row.duration || 0 }}ms\r\n              </el-tag>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"attempts\" label=\"重试次数\" width=\"100\" />\r\n          <el-table-column prop=\"traceId\" label=\"TraceId\" min-width=\"140\" show-overflow-tooltip />\r\n          <el-table-column label=\"操作\" width=\"120\" fixed=\"right\">\r\n            <template #default=\"{ row }\">\r\n              <el-button link type=\"primary\" size=\"small\" @click=\"openLog(row)\">\r\n                查看日志\r\n              </el-button>\r\n            </template>\r\n          </el-table-column>\r\n          <template #empty>\r\n            <el-empty description=\"暂无执行记录\" />\r\n          </template>\r\n        </el-table>\r\n      </section>\r\n\r\n      <!-- 任务依赖拓扑 -->\r\n      <section class=\"card dependency-card\">\r\n        <div class=\"dependency-card__header\">\r\n          <h3>任务依赖拓扑</h3>\r\n          <el-tag v-if=\"detail?.dependencies?.length\" size=\"small\" type=\"info\">\r\n            共 {{ detail.dependencies.length }} 个依赖\r\n          </el-tag>\r\n        </div>\r\n        <TaskDependencyGraph\r\n          :task-name=\"detail?.name\"\r\n          :dependencies=\"detail?.dependencies || []\"\r\n        />\r\n        <el-timeline v-if=\"detail?.dependencies?.length\" class=\"dependency-timeline\">\r\n          <el-timeline-item\r\n            v-for=\"dep in detail?.dependencies\"\r\n            :key=\"dep.id\"\r\n            :timestamp=\"dep.triggerType || '前置任务'\"\r\n            :type=\"dep.status === 'SUCCESS' ? 'success' : dep.status === 'FAILED' ? 'danger' : 'info'\"\r\n          >\r\n            <div class=\"dependency-item\">\r\n              <strong>{{ dep.name }}</strong>\r\n              <span>执行节点：{{ dep.node || '-' }}</span>\r\n              <span>任务状态：<StatusTag :status=\"dep.status || 'UNKNOWN'\" /></span>\r\n              <el-tag size=\"small\" v-if=\"dep.cronExpr\" effect=\"plain\">{{ dep.cronExpr }}</el-tag>\r\n            </div>\r\n          </el-timeline-item>\r\n        </el-timeline>\r\n      </section>\r\n    </div>\r\n\r\n    <!-- 编辑抽屉 -->\r\n    <TaskFormDrawer\r\n      v-model:visible=\"drawerVisible\"\r\n      :model-value=\"detail\"\r\n      :group-options=\"groupOptions\"\r\n      :owner-options=\"ownerOptions\"\r\n      :tag-options=\"tagOptions\"\r\n      :submitting=\"submitting\"\r\n      @submit=\"submitTask\"\r\n    />\r\n\r\n    <!-- 日志对话框 -->\r\n    <el-dialog v-model=\"logVisible\" title=\"执行日志\" width=\"70%\" :close-on-click-modal=\"false\">\r\n      <el-scrollbar height=\"500px\">\r\n        <pre class=\"log\">{{ activeLog }}</pre>\r\n      </el-scrollbar>\r\n      <template #footer>\r\n        <el-button @click=\"logVisible = false\">关闭</el-button>\r\n        <el-button type=\"primary\" @click=\"copyLog\">复制日志</el-button>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed, onMounted, ref } from 'vue';\r\nimport { useRoute, useRouter } from 'vue-router';\r\nimport { useStore } from 'vuex';\r\nimport { ElMessage } from 'element-plus';\r\nimport StatusTag from '@/components/common/StatusTag.vue';\r\nimport TaskFormDrawer from '@/components/task/TaskFormDrawer.vue';\r\nimport TaskDependencyGraph from '@/components/task/TaskDependencyGraph.vue';\r\nimport BaseChart from '@/components/charts/BaseChart.vue';\r\n\r\nconst store = useStore();\r\nconst route = useRoute();\r\nconst router = useRouter();\r\n\r\nconst taskId = route.params.taskId;\r\nconst drawerVisible = ref(false);\r\nconst submitting = ref(false);\r\nconst logVisible = ref(false);\r\nconst activeLog = ref('');\r\nconst triggering = ref(false);\r\nconst detailLoading = ref(false);\r\nconst chartRange = ref('24h');\r\n\r\nconst groupOptions = [\r\n  { label: '数据报表', value: 'DATA_REPORT' },\r\n  { label: '实时风控', value: 'RISK_CONTROL' },\r\n  { label: '营销中心', value: 'MARKETING' },\r\n  { label: '推荐引擎', value: 'RECOMMEND' }\r\n];\r\n\r\nconst ownerOptions = [\r\n  { label: '张强 - 数据平台', value: 'zhangqiang' },\r\n  { label: '李娜 - 营销中台', value: 'lina' },\r\n  { label: '王伟 - 结算系统', value: 'wangwei' },\r\n  { label: '周凯 - 推荐系统', value: 'zhoukai' }\r\n];\r\n\r\nconst tagOptions = ['报表', '风控', '缓存', '推荐', '营销', '结算'];\r\n\r\nonMounted(async () => {\r\n  detailLoading.value = true;\r\n  try {\r\n    await store.dispatch('tasks/loadTaskDetail', taskId);\r\n    await loadExecutions();\r\n  } catch (error) {\r\n    ElMessage.error('加载任务详情失败');\r\n  } finally {\r\n    detailLoading.value = false;\r\n  }\r\n});\r\n\r\nconst detail = computed(() => store.getters['tasks/currentTask'] || {});\r\nconst executions = computed(() => store.getters['tasks/taskExecutions'] || []);\r\nconst executionLoading = computed(() => store.getters['tasks/taskExecutionLoading']);\r\n\r\nconst parameterText = computed(() => {\r\n  const params = detail.value?.parameters;\r\n  if (!params) return '无参数配置';\r\n  if (typeof params === 'string') return params;\r\n  try {\r\n    return JSON.stringify(params, null, 2);\r\n  } catch (error) {\r\n    return String(params);\r\n  }\r\n});\r\n\r\nconst hasExecutionData = computed(() => \r\n  Array.isArray(executions.value) && executions.value.length > 0\r\n);\r\n\r\nconst executionStats = computed(() => {\r\n  if (!hasExecutionData.value) return { success: 0, failed: 0 };\r\n  const success = executions.value.filter(e => e.status === 'SUCCESS').length;\r\n  const failed = executions.value.filter(e => e.status === 'FAILED').length;\r\n  return { success, failed };\r\n});\r\n\r\n// ECharts配置 - 执行成功率趋势\r\nconst successTrendOptions = computed(() => {\r\n  if (!hasExecutionData.value) return {};\r\n  \r\n  const sortedExecs = [...executions.value].sort((a, b) => \r\n    new Date(a.triggerTime) - new Date(b.triggerTime)\r\n  );\r\n  \r\n  const categories = sortedExecs.map(e => e.triggerTime?.substring(5, 16) || '');\r\n  const successData = sortedExecs.map(e => e.status === 'SUCCESS' ? 100 : 0);\r\n  const failedData = sortedExecs.map(e => e.status === 'FAILED' ? 100 : 0);\r\n  \r\n  return {\r\n    color: ['#22c55e', '#ef4444'],\r\n    tooltip: {\r\n      trigger: 'axis',\r\n      formatter: (params) => {\r\n        let result = `${params[0].axisValue}<br/>`;\r\n        params.forEach(p => {\r\n          result += `${p.marker}${p.seriesName}: ${p.value}%<br/>`;\r\n        });\r\n        return result;\r\n      }\r\n    },\r\n    legend: {\r\n      data: ['成功', '失败']\r\n    },\r\n    grid: { left: 50, right: 24, top: 40, bottom: 50 },\r\n    xAxis: {\r\n      type: 'category',\r\n      data: categories,\r\n      axisLabel: { rotate: 45, fontSize: 11 }\r\n    },\r\n    yAxis: {\r\n      type: 'value',\r\n      min: 0,\r\n      max: 100,\r\n      axisLabel: { formatter: '{value}%' }\r\n    },\r\n    series: [\r\n      {\r\n        name: '成功',\r\n        type: 'line',\r\n        smooth: true,\r\n        areaStyle: { opacity: 0.3 },\r\n        data: successData\r\n      },\r\n      {\r\n        name: '失败',\r\n        type: 'line',\r\n        smooth: true,\r\n        areaStyle: { opacity: 0.3 },\r\n        data: failedData\r\n      }\r\n    ]\r\n  };\r\n});\r\n\r\n// ECharts配置 - 执行耗时分布\r\nconst durationChartOptions = computed(() => {\r\n  if (!hasExecutionData.value) return {};\r\n  \r\n  const sortedExecs = [...executions.value]\r\n    .sort((a, b) => new Date(a.triggerTime) - new Date(b.triggerTime))\r\n    .slice(-20);  // 最近20条\r\n  \r\n  const categories = sortedExecs.map(e => e.triggerTime?.substring(11, 16) || '');\r\n  const durations = sortedExecs.map(e => Number(e.duration || 0));\r\n  \r\n  return {\r\n    color: ['#f97316'],\r\n    tooltip: {\r\n      trigger: 'axis',\r\n      formatter: (params) => {\r\n        const p = params[0];\r\n        return `${p.axisValue}<br/>${p.marker}耗时: ${p.value}ms`;\r\n      }\r\n    },\r\n    grid: { left: 60, right: 24, top: 30, bottom: 60 },\r\n    xAxis: {\r\n      type: 'category',\r\n      data: categories,\r\n      axisLabel: { rotate: 45, fontSize: 11 }\r\n    },\r\n    yAxis: {\r\n      type: 'value',\r\n      axisLabel: { formatter: '{value}ms' }\r\n    },\r\n    series: [{\r\n      name: '执行耗时',\r\n      type: 'bar',\r\n      barMaxWidth: 30,\r\n      data: durations,\r\n      itemStyle: {\r\n        color: (params) => {\r\n          const val = params.value;\r\n          if (val < 1000) return '#22c55e';\r\n          if (val < 5000) return '#f59e0b';\r\n          return '#ef4444';\r\n        }\r\n      }\r\n    }]\r\n  };\r\n});\r\n\r\nconst loadExecutions = async () => {\r\n  await store.dispatch('tasks/loadTaskExecutions', { taskId, page: 1, range: chartRange.value });\r\n};\r\n\r\nconst goBack = () => {\r\n  router.back();\r\n};\r\n\r\nconst openEdit = () => {\r\n  drawerVisible.value = true;\r\n};\r\n\r\nconst submitTask = async (payload) => {\r\n  submitting.value = true;\r\n  try {\r\n    await store.dispatch('tasks/submitTask', payload);\r\n    await store.dispatch('tasks/loadTaskDetail', taskId);\r\n    drawerVisible.value = false;\r\n    ElMessage.success('任务更新成功');\r\n  } catch (error) {\r\n    ElMessage.error(error?.response?.data?.message || '更新任务失败');\r\n  } finally {\r\n    submitting.value = false;\r\n  }\r\n};\r\n\r\nconst triggerTask = async () => {\r\n  if (!detail.value?.id) return;\r\n  \r\n  triggering.value = true;\r\n  try {\r\n    await store.dispatch('tasks/triggerTask', {\r\n      taskId,\r\n      payload: { manual: true, operator: store.getters['auth/profile']?.username || 'anonymous' }\r\n    });\r\n    ElMessage.success('已提交立即执行请求');\r\n    setTimeout(() => loadExecutions(), 2000);\r\n  } catch (error) {\r\n    ElMessage.error(error?.response?.data?.message || '触发任务失败');\r\n  } finally {\r\n    triggering.value = false;\r\n  }\r\n};\r\n\r\nconst confirmDelete = async () => {\r\n  try {\r\n    await store.dispatch('tasks/removeTask', taskId);\r\n    ElMessage.success('任务已删除');\r\n    router.push('/tasks');\r\n  } catch (error) {\r\n    ElMessage.error(error?.response?.data?.message || '删除任务失败');\r\n  }\r\n};\r\n\r\nconst openLog = (record) => {\r\n  logVisible.value = true;\r\n  activeLog.value = record.log || '暂无日志内容';\r\n};\r\n\r\nconst copyLog = () => {\r\n  navigator.clipboard.writeText(activeLog.value).then(() => {\r\n    ElMessage.success('日志已复制到剪贴板');\r\n  }).catch(() => {\r\n    ElMessage.error('复制失败');\r\n  });\r\n};\r\n\r\nconst getDurationTagType = (duration) => {\r\n  const d = Number(duration || 0);\r\n  if (d < 1000) return 'success';\r\n  if (d < 5000) return 'warning';\r\n  return 'danger';\r\n};\r\n\r\nconst typeLabel = (type) => {\r\n  const map = {\r\n    CRON: 'Cron 定时任务',\r\n    ONE_TIME: '一次性任务',\r\n    FIXED_RATE: '固定间隔任务'\r\n  };\r\n  return map[type] || type || '-';\r\n};\r\n\r\nconst executorLabel = (executor) => {\r\n  const map = {\r\n    GRPC: 'gRPC 执行',\r\n    HTTP: 'HTTP 回调',\r\n    SPRING_BEAN: 'Spring Bean',\r\n    SHELL: 'Shell 脚本'\r\n  };\r\n  return map[executor] || executor || '-';\r\n};\r\n\r\nconst routeLabel = (route) => {\r\n  const map = {\r\n    ROUND_ROBIN: '轮询',\r\n    CONSISTENT_HASH: '一致性哈希',\r\n    SHARDING: '分片广播',\r\n    FIXED_NODE: '指定节点'\r\n  };\r\n  return map[route] || route || '轮询';\r\n};\r\n\r\nconst retryLabel = (retry) => {\r\n  const map = {\r\n    NONE: '不重试',\r\n    FIXED_INTERVAL: '固定间隔',\r\n    EXP_BACKOFF: '指数退避'\r\n  };\r\n  return map[retry] || retry || '固定间隔';\r\n};\r\n\r\nconst concurrencyLabel = (policy) => {\r\n  const map = {\r\n    PARALLEL: '并行执行',\r\n    SERIAL: '串行执行',\r\n    DISCARD: '丢弃后续'\r\n  };\r\n  return map[policy] || policy || '并行执行';\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.task-detail {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n\r\n  &__title {\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n  }\r\n}\r\n\r\n.content {\r\n  display: grid;\r\n  grid-template-columns: repeat(2, minmax(0, 1fr));\r\n  gap: 20px;\r\n}\r\n\r\n.detail-card {\r\n  grid-column: span 2;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 24px;\r\n\r\n  &__section {\r\n    h3 {\r\n      margin: 0 0 16px;\r\n      font-size: 16px;\r\n      font-weight: 600;\r\n      color: #0f172a;\r\n    }\r\n  }\r\n}\r\n\r\n.chart-card,\r\n.execution-card,\r\n.dependency-card {\r\n  h3 {\r\n    margin: 0;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #0f172a;\r\n  }\r\n}\r\n\r\n.chart-card__header,\r\n.execution-card__header,\r\n.dependency-card__header {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.chart-content {\r\n  min-height: 280px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.chart {\r\n  width: 100%;\r\n  height: 280px;\r\n}\r\n\r\n.execution-card {\r\n  grid-column: span 2;\r\n}\r\n\r\n.dependency-card {\r\n  grid-column: span 2;\r\n}\r\n\r\n.dependency-timeline {\r\n  margin-top: 16px;\r\n}\r\n\r\n.dependency-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n  font-size: 13px;\r\n  color: #475569;\r\n  flex-wrap: wrap;\r\n\r\n  strong {\r\n    font-weight: 600;\r\n    color: #1e293b;\r\n  }\r\n}\r\n\r\n.log {\r\n  margin: 0;\r\n  font-family: 'Fira Code', 'Consolas', 'Monaco', monospace;\r\n  font-size: 13px;\r\n  line-height: 1.6;\r\n  white-space: pre-wrap;\r\n  word-wrap: break-word;\r\n  background: #0f172a;\r\n  color: #e2e8f0;\r\n  padding: 16px;\r\n  border-radius: 8px;\r\n}\r\n</style>\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
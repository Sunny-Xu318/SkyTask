{"ast":null,"code":"import { computed, onMounted, ref } from 'vue';\nimport { useStore } from 'vuex';\nimport StatusTag from '@/components/common/StatusTag.vue';\nimport { fetchNodeHeartbeat } from '@/api/nodes';\nexport default {\n  __name: 'NodeMonitorView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const store = useStore();\n    const heartbeatVisible = ref(false);\n    const heartbeatDetail = ref({\n      name: '',\n      latest: '',\n      avgLatency: 0,\n      lastAlert: '',\n      logs: []\n    });\n    onMounted(() => {\n      refresh();\n    });\n    const metrics = computed(() => store.getters['nodes/nodeMetrics']);\n    const nodes = computed(() => store.getters['nodes/nodeList']);\n    const loading = computed(() => store.getters['nodes/nodesLoading']);\n    const refresh = () => {\n      store.dispatch('nodes/loadNodeMetrics');\n      store.dispatch('nodes/loadNodes');\n    };\n    const offline = async node => {\n      await store.dispatch('nodes/decommissionNode', node.id);\n    };\n    const rebalance = async node => {\n      await store.dispatch('nodes/rebalance', node.id);\n    };\n    const openHeartbeat = async node => {\n      const detail = await fetchNodeHeartbeat(node.id);\n      heartbeatDetail.value = detail;\n      heartbeatVisible.value = true;\n    };\n    const __returned__ = {\n      store,\n      heartbeatVisible,\n      heartbeatDetail,\n      metrics,\n      nodes,\n      loading,\n      refresh,\n      offline,\n      rebalance,\n      openHeartbeat,\n      computed,\n      onMounted,\n      ref,\n      get useStore() {\n        return useStore;\n      },\n      StatusTag,\n      get fetchNodeHeartbeat() {\n        return fetchNodeHeartbeat;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","onMounted","ref","useStore","StatusTag","fetchNodeHeartbeat","store","heartbeatVisible","heartbeatDetail","name","latest","avgLatency","lastAlert","logs","refresh","metrics","getters","nodes","loading","dispatch","offline","node","id","rebalance","openHeartbeat","detail","value"],"sources":["D:/桌面/项目/分布式任务调度系统/SkyTask/skytask-frontend/src/views/NodeMonitorView.vue"],"sourcesContent":["<template>\n  <div class=\"node-monitor\">\n    <section class=\"card node-monitor__summary\">\n      <div class=\"summary__item\">\n        <span class=\"summary__label\">节点总数</span>\n        <span class=\"summary__value\">{{ metrics.totalNodes }}</span>\n      </div>\n      <div class=\"summary__item\">\n        <span class=\"summary__label\">在线节点</span>\n        <span class=\"summary__value summary__value--success\">{{ metrics.onlineNodes }}</span>\n      </div>\n      <div class=\"summary__item\">\n        <span class=\"summary__label\">离线节点</span>\n        <span class=\"summary__value summary__value--danger\">{{ metrics.offlineNodes }}</span>\n      </div>\n      <div class=\"summary__item\">\n        <span class=\"summary__label\">平均 CPU 使用率</span>\n        <span class=\"summary__value\">{{ metrics.avgCpu }}%</span>\n      </div>\n      <div class=\"summary__item\">\n        <span class=\"summary__label\">平均内存使用率</span>\n        <span class=\"summary__value\">{{ metrics.avgMemory }}%</span>\n      </div>\n    </section>\n\n    <section class=\"card node-monitor__table\">\n      <div class=\"table__header\">\n        <h3>执行器节点列表</h3>\n        <el-button type=\"primary\" size=\"small\" @click=\"refresh\">刷新</el-button>\n      </div>\n      <el-table :data=\"nodes\" v-loading=\"loading\" height=\"520\">\n        <el-table-column label=\"节点名称\" min-width=\"180\">\n          <template #default=\"{ row }\">\n            <div class=\"node-name\">\n              <el-tag size=\"small\" effect=\"plain\">{{ row.cluster }}</el-tag>\n              <strong>{{ row.name }}</strong>\n            </div>\n            <div class=\"node-meta\">\n              <span>Host: {{ row.host }}</span>\n              <span>注册时间: {{ row.registerTime }}</span>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"状态\" width=\"120\">\n          <template #default=\"{ row }\">\n            <StatusTag :status=\"row.status === 'ONLINE' ? 'SUCCESS' : 'FAILED'\">\n              {{ row.status === 'ONLINE' ? '在线' : '离线' }}\n            </StatusTag>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"资源使用\" width=\"240\">\n          <template #default=\"{ row }\">\n            <div class=\"resource\">\n              <span>CPU</span>\n              <el-progress :percentage=\"row.cpu\" :status=\"row.cpu > 80 ? 'exception' : 'success'\" />\n            </div>\n            <div class=\"resource\">\n              <span>内存</span>\n              <el-progress :percentage=\"row.memory\" :status=\"row.memory > 80 ? 'exception' : 'warning'\" />\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"运行指标\" width=\"220\">\n          <template #default=\"{ row }\">\n            <div class=\"metrics\">\n              <span>处理任务：{{ row.runningTasks }}</span>\n              <span>积压：{{ row.backlog }}</span>\n              <span>调度延迟：{{ row.delay }} ms</span>\n              <span>阈值告警：{{ row.alertLevel }}</span>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"200\" fixed=\"right\">\n          <template #default=\"{ row }\">\n            <el-button link type=\"primary\" size=\"small\" @click=\"rebalance(row)\">分片重分配</el-button>\n            <el-button\n              link\n              type=\"warning\"\n              size=\"small\"\n              @click=\"openHeartbeat(row)\"\n            >\n              心跳详情\n            </el-button>\n            <el-popconfirm title=\"确认下线该节点？\" @confirm=\"offline(row)\">\n              <template #reference>\n                <el-button link type=\"danger\" size=\"small\">手动下线</el-button>\n              </template>\n            </el-popconfirm>\n          </template>\n        </el-table-column>\n      </el-table>\n    </section>\n\n    <el-drawer v-model=\"heartbeatVisible\" title=\"节点心跳\" size=\"30%\">\n      <el-descriptions :column=\"1\" border>\n        <el-descriptions-item label=\"节点\">{{ heartbeatDetail.name }}</el-descriptions-item>\n        <el-descriptions-item label=\"最近心跳\">{{ heartbeatDetail.latest }}</el-descriptions-item>\n        <el-descriptions-item label=\"平均延迟\">{{ heartbeatDetail.avgLatency }} ms</el-descriptions-item>\n        <el-descriptions-item label=\"最后一次告警\">{{ heartbeatDetail.lastAlert || '-' }}</el-descriptions-item>\n      </el-descriptions>\n      <el-timeline class=\"heartbeat-timeline\">\n        <el-timeline-item\n          v-for=\"item in heartbeatDetail.logs\"\n          :key=\"item.time\"\n          :timestamp=\"item.time\"\n          :type=\"item.status\"\n        >\n          {{ item.message }}\n        </el-timeline-item>\n      </el-timeline>\n    </el-drawer>\n  </div>\n</template>\n\n<script setup>\nimport { computed, onMounted, ref } from 'vue';\nimport { useStore } from 'vuex';\nimport StatusTag from '@/components/common/StatusTag.vue';\nimport { fetchNodeHeartbeat } from '@/api/nodes';\n\nconst store = useStore();\n\nconst heartbeatVisible = ref(false);\nconst heartbeatDetail = ref({\n  name: '',\n  latest: '',\n  avgLatency: 0,\n  lastAlert: '',\n  logs: []\n});\n\nonMounted(() => {\n  refresh();\n});\n\nconst metrics = computed(() => store.getters['nodes/nodeMetrics']);\nconst nodes = computed(() => store.getters['nodes/nodeList']);\nconst loading = computed(() => store.getters['nodes/nodesLoading']);\n\nconst refresh = () => {\n  store.dispatch('nodes/loadNodeMetrics');\n  store.dispatch('nodes/loadNodes');\n};\n\nconst offline = async (node) => {\n  await store.dispatch('nodes/decommissionNode', node.id);\n};\n\nconst rebalance = async (node) => {\n  await store.dispatch('nodes/rebalance', node.id);\n};\n\nconst openHeartbeat = async (node) => {\n  const detail = await fetchNodeHeartbeat(node.id);\n  heartbeatDetail.value = detail;\n  heartbeatVisible.value = true;\n};\n</script>\n\n<style scoped lang=\"scss\">\n.node-monitor {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  &__summary {\n    display: grid;\n    grid-template-columns: repeat(5, minmax(0, 1fr));\n    gap: 16px;\n    padding: 20px 24px;\n  }\n\n  &__table {\n    padding: 20px;\n\n    .table__header {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      margin-bottom: 16px;\n\n      h3 {\n        margin: 0;\n      }\n    }\n  }\n}\n\n.summary__item {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  color: #475569;\n\n  .summary__label {\n    font-size: 12px;\n    text-transform: uppercase;\n    letter-spacing: 0.5px;\n  }\n\n  .summary__value {\n    font-size: 24px;\n    font-weight: 700;\n    color: #0f172a;\n\n    &--success {\n      color: #10b981;\n    }\n\n    &--danger {\n      color: #ef4444;\n    }\n  }\n}\n\n.node-name {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  strong {\n    color: #0f172a;\n  }\n}\n\n.node-meta {\n  display: flex;\n  gap: 16px;\n  font-size: 12px;\n  color: #64748b;\n  margin-top: 6px;\n}\n\n.resource {\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n  font-size: 13px;\n  color: #475569;\n  margin-bottom: 8px;\n}\n\n.metrics {\n  display: grid;\n  gap: 4px;\n  font-size: 12px;\n  color: #475569;\n}\n\n.heartbeat-timeline {\n  margin-top: 16px;\n}\n</style>\n"],"mappings":"AAmHA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,GAAG,QAAQ,KAAK;AAC9C,SAASC,QAAQ,QAAQ,MAAM;AAC/B,OAAOC,SAAS,MAAM,mCAAmC;AACzD,SAASC,kBAAkB,QAAQ,aAAa;;;;;;;IAEhD,MAAMC,KAAK,GAAGH,QAAQ,CAAC,CAAC;IAExB,MAAMI,gBAAgB,GAAGL,GAAG,CAAC,KAAK,CAAC;IACnC,MAAMM,eAAe,GAAGN,GAAG,CAAC;MAC1BO,IAAI,EAAE,EAAE;MACRC,MAAM,EAAE,EAAE;MACVC,UAAU,EAAE,CAAC;MACbC,SAAS,EAAE,EAAE;MACbC,IAAI,EAAE;IACR,CAAC,CAAC;IAEFZ,SAAS,CAAC,MAAM;MACda,OAAO,CAAC,CAAC;IACX,CAAC,CAAC;IAEF,MAAMC,OAAO,GAAGf,QAAQ,CAAC,MAAMM,KAAK,CAACU,OAAO,CAAC,mBAAmB,CAAC,CAAC;IAClE,MAAMC,KAAK,GAAGjB,QAAQ,CAAC,MAAMM,KAAK,CAACU,OAAO,CAAC,gBAAgB,CAAC,CAAC;IAC7D,MAAME,OAAO,GAAGlB,QAAQ,CAAC,MAAMM,KAAK,CAACU,OAAO,CAAC,oBAAoB,CAAC,CAAC;IAEnE,MAAMF,OAAO,GAAGA,CAAA,KAAM;MACpBR,KAAK,CAACa,QAAQ,CAAC,uBAAuB,CAAC;MACvCb,KAAK,CAACa,QAAQ,CAAC,iBAAiB,CAAC;IACnC,CAAC;IAED,MAAMC,OAAO,GAAG,MAAOC,IAAI,IAAK;MAC9B,MAAMf,KAAK,CAACa,QAAQ,CAAC,wBAAwB,EAAEE,IAAI,CAACC,EAAE,CAAC;IACzD,CAAC;IAED,MAAMC,SAAS,GAAG,MAAOF,IAAI,IAAK;MAChC,MAAMf,KAAK,CAACa,QAAQ,CAAC,iBAAiB,EAAEE,IAAI,CAACC,EAAE,CAAC;IAClD,CAAC;IAED,MAAME,aAAa,GAAG,MAAOH,IAAI,IAAK;MACpC,MAAMI,MAAM,GAAG,MAAMpB,kBAAkB,CAACgB,IAAI,CAACC,EAAE,CAAC;MAChDd,eAAe,CAACkB,KAAK,GAAGD,MAAM;MAC9BlB,gBAAgB,CAACmB,KAAK,GAAG,IAAI;IAC/B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createVNode as _createVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, withKeys as _withKeys, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, createBlock as _createBlock, createCommentVNode as _createCommentVNode, resolveDirective as _resolveDirective, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"task-center\"\n};\nconst _hoisted_2 = {\n  class: \"task-center__toolbar card\"\n};\nconst _hoisted_3 = {\n  class: \"toolbar__left\"\n};\nconst _hoisted_4 = {\n  class: \"toolbar__right\"\n};\nconst _hoisted_5 = {\n  class: \"task-center__content card\"\n};\nconst _hoisted_6 = {\n  class: \"task-name\"\n};\nconst _hoisted_7 = {\n  class: \"task-meta\"\n};\nconst _hoisted_8 = {\n  class: \"task-center__pagination\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_link = _resolveComponent(\"el-link\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_avatar = _resolveComponent(\"el-avatar\");\n  const _component_el_popconfirm = _resolveComponent(\"el-popconfirm\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_pagination = _resolveComponent(\"el-pagination\");\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"section\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_form, {\n    inline: true,\n    model: $setup.filters\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $setup.filters.keyword,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.filters.keyword = $event),\n        placeholder: \"搜索任务名称/负责人/标签\",\n        clearable: \"\",\n        onKeyup: _withKeys($setup.handleSearch, [\"enter\"])\n      }, {\n        prefix: _withCtx(() => [_createVNode(_component_el_icon, null, {\n          default: _withCtx(() => [_createVNode($setup[\"Search\"])]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_select, {\n        modelValue: $setup.filters.status,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.filters.status = $event),\n        placeholder: \"任务状态\",\n        clearable: \"\",\n        onChange: $setup.handleSearch\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_option, {\n          label: \"全部\",\n          value: \"ALL\"\n        }), _createVNode(_component_el_option, {\n          label: \"启用\",\n          value: \"ENABLED\"\n        }), _createVNode(_component_el_option, {\n          label: \"禁用\",\n          value: \"DISABLED\"\n        }), _createVNode(_component_el_option, {\n          label: \"失败告警\",\n          value: \"FAILED\"\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_select, {\n        modelValue: $setup.filters.owner,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.filters.owner = $event),\n        placeholder: \"负责人\",\n        clearable: \"\",\n        filterable: \"\",\n        onChange: $setup.handleSearch\n      }, {\n        default: _withCtx(() => [(_openBlock(), _createElementBlock(_Fragment, null, _renderList($setup.ownerOptions, owner => {\n          return _createVNode(_component_el_option, {\n            key: owner.value,\n            label: owner.label,\n            value: owner.value\n          }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n        }), 64 /* STABLE_FRAGMENT */))]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_select, {\n        modelValue: $setup.filters.tags,\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.filters.tags = $event),\n        multiple: \"\",\n        \"collapse-tags\": \"\",\n        placeholder: \"标签\",\n        onChange: $setup.handleSearch\n      }, {\n        default: _withCtx(() => [(_openBlock(), _createElementBlock(_Fragment, null, _renderList($setup.tagOptions, tag => {\n          return _createVNode(_component_el_option, {\n            key: tag,\n            label: tag,\n            value: tag\n          }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n        }), 64 /* STABLE_FRAGMENT */))]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\"])]), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_button, {\n    icon: $setup.Download,\n    onClick: $setup.exportTasks\n  }, {\n    default: _withCtx(() => [...(_cache[6] || (_cache[6] = [_createTextVNode(\"导出\", -1 /* CACHED */)]))]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"icon\"]), _createVNode(_component_el_button, {\n    type: \"primary\",\n    icon: $setup.Plus,\n    onClick: $setup.openCreate\n  }, {\n    default: _withCtx(() => [...(_cache[7] || (_cache[7] = [_createTextVNode(\"新建任务\", -1 /* CACHED */)]))]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"icon\"])])]), _createElementVNode(\"section\", _hoisted_5, [_withDirectives((_openBlock(), _createBlock(_component_el_table, {\n    data: $setup.taskList,\n    height: \"500\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      label: \"任务名称\",\n      \"min-width\": \"220\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_el_link, {\n        type: \"primary\",\n        onClick: $event => $setup.openDetail(row)\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(row.name), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), row.group ? (_openBlock(), _createBlock(_component_el_tag, {\n        key: 0,\n        size: \"small\",\n        class: \"task-name__tag\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(row.group), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"span\", null, \"最近执行: \" + _toDisplayString(row.lastTrigger || '-'), 1 /* TEXT */), _createElementVNode(\"span\", null, \"执行节点: \" + _toDisplayString(row.lastNode || '-'), 1 /* TEXT */)])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      label: \"类型\",\n      width: \"120\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createVNode(_component_el_tag, null, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.formatType(row.type)), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */)]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      prop: \"cronExpr\",\n      label: \"调度计划\",\n      width: \"160\",\n      \"show-overflow-tooltip\": \"\"\n    }), _createVNode(_component_el_table_column, {\n      label: \"负责人\",\n      width: \"120\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createVNode(_component_el_avatar, {\n        size: \"small\",\n        class: \"owner-avatar\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.getOwnerInitials(row.owner)), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */), _createElementVNode(\"span\", null, _toDisplayString(row.owner), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      label: \"运行状态\",\n      width: \"140\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createVNode($setup[\"StatusTag\"], {\n        status: row.status\n      }, null, 8 /* PROPS */, [\"status\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      label: \"告警\",\n      width: \"120\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createVNode(_component_el_tag, {\n        type: row.alertEnabled ? 'success' : 'info',\n        size: \"small\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(row.alertEnabled ? '启用' : '关闭'), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      label: \"操作\",\n      width: \"240\",\n      fixed: \"right\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createVNode(_component_el_button, {\n        link: \"\",\n        type: \"primary\",\n        size: \"small\",\n        onClick: $event => $setup.openExecution(row)\n      }, {\n        default: _withCtx(() => [...(_cache[8] || (_cache[8] = [_createTextVNode(\"执行记录\", -1 /* CACHED */)]))]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n        link: \"\",\n        type: \"primary\",\n        size: \"small\",\n        onClick: $event => $setup.editTask(row)\n      }, {\n        default: _withCtx(() => [...(_cache[9] || (_cache[9] = [_createTextVNode(\"编辑\", -1 /* CACHED */)]))]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n        link: \"\",\n        type: row.enabled ? 'danger' : 'success',\n        size: \"small\",\n        onClick: $event => $setup.toggleTask(row)\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(row.enabled ? '禁用' : '启用'), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\", \"onClick\"]), _createVNode(_component_el_popconfirm, {\n        title: \"确认删除该任务？\",\n        onConfirm: $event => $setup.removeTask(row)\n      }, {\n        reference: _withCtx(() => [_createVNode(_component_el_button, {\n          link: \"\",\n          type: \"danger\",\n          size: \"small\"\n        }, {\n          default: _withCtx(() => [...(_cache[10] || (_cache[10] = [_createTextVNode(\"删除\", -1 /* CACHED */)]))]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onConfirm\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\"])), [[_directive_loading, $setup.loading]]), _createElementVNode(\"div\", _hoisted_8, [_createVNode(_component_el_pagination, {\n    background: \"\",\n    layout: \"total, sizes, prev, pager, next, jumper\",\n    \"current-page\": $setup.pagination.page,\n    \"page-size\": $setup.pagination.size,\n    total: $setup.pagination.total,\n    \"page-sizes\": [10, 20, 50, 100],\n    onCurrentChange: $setup.changePage,\n    onSizeChange: $setup.changeSize\n  }, null, 8 /* PROPS */, [\"current-page\", \"page-size\", \"total\"])])]), _createVNode($setup[\"TaskFormDrawer\"], {\n    visible: $setup.drawerVisible,\n    \"onUpdate:visible\": _cache[4] || (_cache[4] = $event => $setup.drawerVisible = $event),\n    \"model-value\": $setup.currentTask,\n    \"group-options\": $setup.groupOptions,\n    \"owner-options\": $setup.ownerOptions,\n    \"tag-options\": $setup.tagOptions,\n    submitting: $setup.submitting,\n    onSubmit: $setup.submitTask,\n    onCronHelper: $setup.openCronHelper\n  }, null, 8 /* PROPS */, [\"visible\", \"model-value\", \"submitting\"]), _createVNode($setup[\"TaskExecutionDrawer\"], {\n    visible: $setup.executionVisible,\n    \"onUpdate:visible\": _cache[5] || (_cache[5] = $event => $setup.executionVisible = $event),\n    executions: $setup.executions,\n    pagination: $setup.executionPagination,\n    loading: $setup.executionsLoading,\n    onPageChange: $setup.handleExecutionPage,\n    onViewLog: $setup.viewLog\n  }, null, 8 /* PROPS */, [\"visible\", \"executions\", \"pagination\", \"loading\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_createVNode","_component_el_form","inline","model","$setup","filters","_component_el_form_item","_component_el_input","keyword","$event","placeholder","clearable","onKeyup","_withKeys","handleSearch","prefix","_withCtx","_component_el_icon","_component_el_select","status","onChange","_component_el_option","label","value","owner","filterable","_Fragment","_renderList","ownerOptions","key","tags","multiple","tagOptions","tag","_hoisted_4","_component_el_button","icon","Download","onClick","exportTasks","_cache","type","Plus","openCreate","_hoisted_5","_createBlock","_component_el_table","data","taskList","height","_component_el_table_column","default","row","_hoisted_6","_component_el_link","openDetail","name","group","_component_el_tag","size","_hoisted_7","_toDisplayString","lastTrigger","lastNode","width","formatType","prop","_component_el_avatar","getOwnerInitials","alertEnabled","fixed","link","openExecution","editTask","enabled","toggleTask","_component_el_popconfirm","title","onConfirm","removeTask","reference","loading","_hoisted_8","_component_el_pagination","background","layout","pagination","page","total","onCurrentChange","changePage","onSizeChange","changeSize","visible","drawerVisible","currentTask","groupOptions","submitting","onSubmit","submitTask","onCronHelper","openCronHelper","executionVisible","executions","executionPagination","executionsLoading","onPageChange","handleExecutionPage","onViewLog","viewLog"],"sources":["D:\\桌面\\项目\\分布式任务调度系统\\SkyTask\\skytask-frontend\\src\\views\\TaskCenterView.vue"],"sourcesContent":["<template>\n  <div class=\"task-center\">\n    <section class=\"task-center__toolbar card\">\n      <div class=\"toolbar__left\">\n        <el-form :inline=\"true\" :model=\"filters\">\n          <el-form-item>\n            <el-input\n              v-model=\"filters.keyword\"\n              placeholder=\"搜索任务名称/负责人/标签\"\n              clearable\n              @keyup.enter=\"handleSearch\"\n            >\n              <template #prefix>\n                <el-icon><Search /></el-icon>\n              </template>\n            </el-input>\n          </el-form-item>\n          <el-form-item>\n            <el-select v-model=\"filters.status\" placeholder=\"任务状态\" clearable @change=\"handleSearch\">\n              <el-option label=\"全部\" value=\"ALL\" />\n              <el-option label=\"启用\" value=\"ENABLED\" />\n              <el-option label=\"禁用\" value=\"DISABLED\" />\n              <el-option label=\"失败告警\" value=\"FAILED\" />\n            </el-select>\n          </el-form-item>\n          <el-form-item>\n            <el-select\n              v-model=\"filters.owner\"\n              placeholder=\"负责人\"\n              clearable\n              filterable\n              @change=\"handleSearch\"\n            >\n              <el-option v-for=\"owner in ownerOptions\" :key=\"owner.value\" :label=\"owner.label\" :value=\"owner.value\" />\n            </el-select>\n          </el-form-item>\n          <el-form-item>\n            <el-select\n              v-model=\"filters.tags\"\n              multiple\n              collapse-tags\n              placeholder=\"标签\"\n              @change=\"handleSearch\"\n            >\n              <el-option v-for=\"tag in tagOptions\" :key=\"tag\" :label=\"tag\" :value=\"tag\" />\n            </el-select>\n          </el-form-item>\n        </el-form>\n      </div>\n      <div class=\"toolbar__right\">\n        <el-button :icon=\"Download\" @click=\"exportTasks\">导出</el-button>\n        <el-button type=\"primary\" :icon=\"Plus\" @click=\"openCreate\">新建任务</el-button>\n      </div>\n    </section>\n\n    <section class=\"task-center__content card\">\n      <el-table :data=\"taskList\" height=\"500\" v-loading=\"loading\">\n        <el-table-column label=\"任务名称\" min-width=\"220\">\n          <template #default=\"{ row }\">\n            <div class=\"task-name\">\n              <el-link type=\"primary\" @click=\"openDetail(row)\">{{ row.name }}</el-link>\n              <el-tag v-if=\"row.group\" size=\"small\" class=\"task-name__tag\">{{ row.group }}</el-tag>\n            </div>\n            <div class=\"task-meta\">\n              <span>最近执行: {{ row.lastTrigger || '-' }}</span>\n              <span>执行节点: {{ row.lastNode || '-' }}</span>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"类型\" width=\"120\">\n          <template #default=\"{ row }\">\n            <el-tag>{{ formatType(row.type) }}</el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"cronExpr\" label=\"调度计划\" width=\"160\" show-overflow-tooltip />\n        <el-table-column label=\"负责人\" width=\"120\">\n          <template #default=\"{ row }\">\n            <el-avatar size=\"small\" class=\"owner-avatar\">{{ getOwnerInitials(row.owner) }}</el-avatar>\n            <span>{{ row.owner }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"运行状态\" width=\"140\">\n          <template #default=\"{ row }\">\n            <StatusTag :status=\"row.status\" />\n          </template>\n        </el-table-column>\n        <el-table-column label=\"告警\" width=\"120\">\n          <template #default=\"{ row }\">\n            <el-tag :type=\"row.alertEnabled ? 'success' : 'info'\" size=\"small\">\n              {{ row.alertEnabled ? '启用' : '关闭' }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"240\" fixed=\"right\">\n          <template #default=\"{ row }\">\n            <el-button link type=\"primary\" size=\"small\" @click=\"openExecution(row)\">执行记录</el-button>\n            <el-button link type=\"primary\" size=\"small\" @click=\"editTask(row)\">编辑</el-button>\n            <el-button\n              link\n              :type=\"row.enabled ? 'danger' : 'success'\"\n              size=\"small\"\n              @click=\"toggleTask(row)\"\n            >\n              {{ row.enabled ? '禁用' : '启用' }}\n            </el-button>\n            <el-popconfirm title=\"确认删除该任务？\" @confirm=\"removeTask(row)\">\n              <template #reference>\n                <el-button link type=\"danger\" size=\"small\">删除</el-button>\n              </template>\n            </el-popconfirm>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <div class=\"task-center__pagination\">\n        <el-pagination\n          background\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :current-page=\"pagination.page\"\n          :page-size=\"pagination.size\"\n          :total=\"pagination.total\"\n          :page-sizes=\"[10, 20, 50, 100]\"\n          @current-change=\"changePage\"\n          @size-change=\"changeSize\"\n        />\n      </div>\n    </section>\n\n    <TaskFormDrawer\n      v-model:visible=\"drawerVisible\"\n      :model-value=\"currentTask\"\n      :group-options=\"groupOptions\"\n      :owner-options=\"ownerOptions\"\n      :tag-options=\"tagOptions\"\n      :submitting=\"submitting\"\n      @submit=\"submitTask\"\n      @cron-helper=\"openCronHelper\"\n    />\n\n    <TaskExecutionDrawer\n      v-model:visible=\"executionVisible\"\n      :executions=\"executions\"\n      :pagination=\"executionPagination\"\n      :loading=\"executionsLoading\"\n      @page-change=\"handleExecutionPage\"\n      @view-log=\"viewLog\"\n    />\n  </div>\n</template>\n\n<script setup>\nimport { computed, onMounted, reactive, ref } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport { Search, Plus, Download } from '@element-plus/icons-vue';\nimport StatusTag from '@/components/common/StatusTag.vue';\nimport TaskFormDrawer from '@/components/task/TaskFormDrawer.vue';\nimport TaskExecutionDrawer from '@/components/task/TaskExecutionDrawer.vue';\n\nconst store = useStore();\nconst route = useRoute();\nconst router = useRouter();\n\nconst drawerVisible = ref(false);\nconst executionVisible = ref(false);\nconst submitting = ref(false);\nconst currentTask = ref({});\n\nconst filters = reactive({\n  keyword: '',\n  status: 'ALL',\n  owner: null,\n  tags: []\n});\n\nconst ownerOptions = [\n  { label: '张强 - 数据平台', value: 'zhangqiang' },\n  { label: '李娜 - 营销中台', value: 'lina' },\n  { label: '王伟 - 结算系统', value: 'wangwei' },\n  { label: '周凯 - 推荐系统', value: 'zhoukai' }\n];\n\nconst tagOptions = ['报表', '风控', '缓存', '推荐', '营销', '结算'];\n\nconst groupOptions = [\n  { label: '数据报表', value: 'DATA_REPORT' },\n  { label: '实时风控', value: 'RISK_CONTROL' },\n  { label: '营销中心', value: 'MARKETING' },\n  { label: '推荐引擎', value: 'RECOMMEND' }\n];\n\nonMounted(() => {\n  if (route.query.keyword) {\n    filters.keyword = route.query.keyword;\n  }\n  if (route.query.status) {\n    filters.status = route.query.status;\n  }\n  if (route.query.owner) {\n    filters.owner = route.query.owner;\n  }\n  if (route.query.tags) {\n    filters.tags = route.query.tags.split(',');\n  }\n  store.dispatch('tasks/loadTaskList');\n  if (\n    route.query.keyword ||\n    route.query.status ||\n    route.query.owner ||\n    route.query.tags\n  ) {\n    handleSearch();\n  }\n});\n\nconst taskList = computed(() => store.getters['tasks/taskList']);\nconst pagination = computed(() => store.getters['tasks/taskPagination']);\nconst executions = computed(() => store.getters['tasks/taskExecutions']);\nconst executionPagination = computed(() => store.getters['tasks/taskExecutionPagination']);\nconst loading = computed(() => store.getters['tasks/tasksLoading']);\nconst executionsLoading = computed(() => store.getters['tasks/taskExecutionLoading']);\n\nconst handleSearch = () => {\n  store.dispatch('tasks/setFilters', { ...filters });\n  const query = {\n    ...route.query\n  };\n  query.keyword = filters.keyword || undefined;\n  query.status = filters.status && filters.status !== 'ALL' ? filters.status : undefined;\n  query.owner = filters.owner || undefined;\n  query.tags = filters.tags.length ? filters.tags.join(',') : undefined;\n  router.replace({ query });\n};\n\nconst changePage = (page) => {\n  store.dispatch('tasks/setPagination', { page });\n};\n\nconst changeSize = (size) => {\n  store.dispatch('tasks/setPagination', { size, page: 1 });\n};\n\nconst openCreate = () => {\n  currentTask.value = {};\n  drawerVisible.value = true;\n};\n\nconst editTask = (row) => {\n  currentTask.value = { ...row };\n  drawerVisible.value = true;\n};\n\nconst submitTask = async (payload) => {\n  submitting.value = true;\n  try {\n    await store.dispatch('tasks/submitTask', payload);\n    drawerVisible.value = false;\n  } finally {\n    submitting.value = false;\n  }\n};\n\nconst toggleTask = async (row) => {\n  await store.dispatch('tasks/changeTaskStatus', { taskId: row.id, enabled: !row.enabled });\n};\n\nconst removeTask = async (row) => {\n  await store.dispatch('tasks/removeTask', row.id);\n};\n\nconst openExecution = async (row) => {\n  await store.dispatch('tasks/loadTaskExecutions', { taskId: row.id });\n  currentTask.value = row;\n  executionVisible.value = true;\n};\n\nconst handleExecutionPage = async (page) => {\n  await store.dispatch('tasks/loadTaskExecutions', {\n    taskId: currentTask.value.id,\n    page,\n    size: executionPagination.value.size\n  });\n};\n\nconst openDetail = (row) => {\n  router.push(`/tasks/${row.id}`);\n};\n\nconst viewLog = (record) => {\n  router.push({\n    path: `/tasks/${currentTask.value.id}`,\n    query: { recordId: record.id }\n  });\n};\n\nconst openCronHelper = () => {\n  router.push({ path: '/config', query: { tab: 'cron-tool' } });\n};\n\nconst exportTasks = () => {\n  window.open('/api/tasks/export');\n};\n\nconst formatType = (type) => {\n  const map = {\n    CRON: 'Cron 定时',\n    ONE_TIME: '一次性',\n    FIXED_RATE: '固定间隔'\n  };\n  return map[type] || type;\n};\n\nconst getOwnerInitials = (owner) => {\n  if (!owner) {\n    return 'NA';\n  }\n  return owner.slice(0, 2).toUpperCase();\n};\n</script>\n\n<style scoped lang=\"scss\">\n.task-center {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  &__toolbar {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    gap: 20px;\n\n    .toolbar__left {\n      flex: 1;\n    }\n\n    .toolbar__right {\n      display: flex;\n      gap: 12px;\n    }\n  }\n\n  &__content {\n    .task-name {\n      display: flex;\n      align-items: center;\n      gap: 6px;\n\n      &__tag {\n        background: rgba(34, 211, 238, 0.1);\n        color: #0891b2;\n      }\n    }\n\n    .task-meta {\n      display: flex;\n      gap: 16px;\n      font-size: 12px;\n      color: #64748b;\n      margin-top: 4px;\n    }\n  }\n\n  &__pagination {\n    display: flex;\n    justify-content: flex-end;\n    padding-top: 16px;\n  }\n}\n\n.owner-avatar {\n  background-color: #0891b2;\n  color: white;\n  margin-right: 8px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
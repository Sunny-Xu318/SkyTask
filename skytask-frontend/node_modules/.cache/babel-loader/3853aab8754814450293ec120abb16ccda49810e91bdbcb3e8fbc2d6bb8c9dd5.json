{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createBlock as _createBlock, resolveDirective as _resolveDirective, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"config-center\"\n};\nconst _hoisted_2 = {\n  class: \"card config-center__section\"\n};\nconst _hoisted_3 = {\n  class: \"section__header\"\n};\nconst _hoisted_4 = {\n  class: \"card config-center__section\"\n};\nconst _hoisted_5 = {\n  class: \"section__header\"\n};\nconst _hoisted_6 = {\n  class: \"card config-center__section\"\n};\nconst _hoisted_7 = {\n  class: \"drawer-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_input_number = _resolveComponent(\"el-input-number\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_checkbox = _resolveComponent(\"el-checkbox\");\n  const _component_el_checkbox_group = _resolveComponent(\"el-checkbox-group\");\n  const _component_el_switch = _resolveComponent(\"el-switch\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_el_popconfirm = _resolveComponent(\"el-popconfirm\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_timeline_item = _resolveComponent(\"el-timeline-item\");\n  const _component_el_timeline = _resolveComponent(\"el-timeline\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_drawer = _resolveComponent(\"el-drawer\");\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"section\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_cache[15] || (_cache[15] = _createElementVNode(\"h3\", null, \"全局调度配置\", -1 /* CACHED */)), _createVNode(_component_el_button, {\n    type: \"primary\",\n    size: \"small\",\n    loading: $setup.saving,\n    onClick: $setup.saveGlobalConfig\n  }, {\n    default: _withCtx(() => [...(_cache[14] || (_cache[14] = [_createTextVNode(\"保存\", -1 /* CACHED */)]))]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"loading\"])]), _createVNode(_component_el_form, {\n    model: $setup.globalConfig,\n    \"label-width\": \"160px\",\n    inline: false\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_row, {\n      gutter: 24\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_col, {\n        span: 12\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_form_item, {\n          label: \"默认重试次数\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input_number, {\n            modelValue: $setup.globalConfig.defaultRetry,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.globalConfig.defaultRetry = $event),\n            min: 0,\n            max: 10\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_col, {\n        span: 12\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_form_item, {\n          label: \"重试间隔 (秒)\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input_number, {\n            modelValue: $setup.globalConfig.retryInterval,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.globalConfig.retryInterval = $event),\n            min: 5,\n            max: 600\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_row, {\n      gutter: 24\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_col, {\n        span: 12\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_form_item, {\n          label: \"调度集群模式\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_select, {\n            modelValue: $setup.globalConfig.schedulerMode,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.globalConfig.schedulerMode = $event)\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_option, {\n              label: \"自动主备 (Leader 选举)\",\n              value: \"LEADER_ELECTION\"\n            }), _createVNode(_component_el_option, {\n              label: \"多主 (一致性锁)\",\n              value: \"MULTI_MASTER\"\n            })]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_col, {\n        span: 12\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_form_item, {\n          label: \"最大并发任务数\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input_number, {\n            modelValue: $setup.globalConfig.maxConcurrentTasks,\n            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.globalConfig.maxConcurrentTasks = $event),\n            min: 10,\n            max: 5000\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"任务幂等保障\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_checkbox_group, {\n        modelValue: $setup.globalConfig.idempotentGuards,\n        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.globalConfig.idempotentGuards = $event)\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_checkbox, {\n          label: \"数据库状态机\"\n        }), _createVNode(_component_el_checkbox, {\n          label: \"Redis 幂等键\"\n        }), _createVNode(_component_el_checkbox, {\n          label: \"执行日志锁\"\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"执行超时自愈\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_switch, {\n        modelValue: $setup.globalConfig.autoRecover,\n        \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.globalConfig.autoRecover = $event)\n      }, null, 8 /* PROPS */, [\"modelValue\"]), _cache[16] || (_cache[16] = _createElementVNode(\"span\", {\n        class: \"form-tip\"\n      }, \"启用后，超时任务自动中断并重新调度\", -1 /* CACHED */))]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\"])]), _createElementVNode(\"section\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_cache[18] || (_cache[18] = _createElementVNode(\"h3\", null, \"告警策略\", -1 /* CACHED */)), _createVNode(_component_el_button, {\n    type: \"primary\",\n    size: \"small\",\n    onClick: $setup.openRuleDrawer\n  }, {\n    default: _withCtx(() => [...(_cache[17] || (_cache[17] = [_createTextVNode(\"新增规则\", -1 /* CACHED */)]))]),\n    _: 1 /* STABLE */\n  })]), _withDirectives((_openBlock(), _createBlock(_component_el_table, {\n    data: $setup.alertRules,\n    size: \"small\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      prop: \"name\",\n      label: \"规则名称\",\n      \"min-width\": \"160\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"metric\",\n      label: \"监控指标\",\n      width: \"140\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"threshold\",\n      label: \"阈值\",\n      width: \"120\"\n    }), _createVNode(_component_el_table_column, {\n      label: \"告警渠道\",\n      width: \"160\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(row.channels, channel => {\n        return _openBlock(), _createBlock(_component_el_tag, {\n          key: channel,\n          size: \"small\",\n          effect: \"plain\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.channelLabel(channel)), 1 /* TEXT */)]),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */);\n      }), 128 /* KEYED_FRAGMENT */))]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      label: \"启用状态\",\n      width: \"120\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createVNode(_component_el_switch, {\n        modelValue: row.enabled,\n        \"onUpdate:modelValue\": $event => row.enabled = $event,\n        onChange: $event => $setup.toggleRule(row)\n      }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"onChange\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      label: \"操作\",\n      width: \"140\",\n      fixed: \"right\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createVNode(_component_el_button, {\n        link: \"\",\n        size: \"small\",\n        type: \"primary\",\n        onClick: $event => $setup.editRule(row)\n      }, {\n        default: _withCtx(() => [...(_cache[19] || (_cache[19] = [_createTextVNode(\"编辑\", -1 /* CACHED */)]))]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_popconfirm, {\n        title: \"确认删除该规则？\",\n        onConfirm: $event => $setup.removeRule(row)\n      }, {\n        reference: _withCtx(() => [_createVNode(_component_el_button, {\n          link: \"\",\n          size: \"small\",\n          type: \"danger\"\n        }, {\n          default: _withCtx(() => [...(_cache[20] || (_cache[20] = [_createTextVNode(\"删除\", -1 /* CACHED */)]))]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onConfirm\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\"])), [[_directive_loading, $setup.loading]])]), _createElementVNode(\"section\", _hoisted_6, [_cache[27] || (_cache[27] = _createElementVNode(\"div\", {\n    class: \"section__header\"\n  }, [_createElementVNode(\"h3\", null, \"环境与租户\")], -1 /* CACHED */)), _createVNode(_component_el_row, {\n    gutter: 20\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_col, {\n      span: 12\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        shadow: \"hover\"\n      }, {\n        header: _withCtx(() => [...(_cache[21] || (_cache[21] = [_createElementVNode(\"span\", null, \"环境隔离配置\", -1 /* CACHED */)]))]),\n        default: _withCtx(() => [_createVNode(_component_el_timeline, null, {\n          default: _withCtx(() => [_createVNode(_component_el_timeline_item, {\n            timestamp: \"dev\",\n            type: \"primary\"\n          }, {\n            default: _withCtx(() => [...(_cache[22] || (_cache[22] = [_createTextVNode(\" 使用 MySQL skytask_dev，Kafka topic skytask-dev，允许调试。 \", -1 /* CACHED */)]))]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_timeline_item, {\n            timestamp: \"test\",\n            type: \"warning\"\n          }, {\n            default: _withCtx(() => [...(_cache[23] || (_cache[23] = [_createTextVNode(\" 使用 MySQL skytask_test，Kafka topic skytask-test，开启审计。 \", -1 /* CACHED */)]))]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_timeline_item, {\n            timestamp: \"prod\",\n            type: \"success\"\n          }, {\n            default: _withCtx(() => [...(_cache[24] || (_cache[24] = [_createTextVNode(\" 使用 MySQL skytask_prod，Kafka topic skytask-prod，开启幂等与告警。 \", -1 /* CACHED */)]))]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      span: 12\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        shadow: \"hover\"\n      }, {\n        header: _withCtx(() => [...(_cache[25] || (_cache[25] = [_createElementVNode(\"span\", null, \"租户管理策略\", -1 /* CACHED */)]))]),\n        default: _withCtx(() => [_cache[26] || (_cache[26] = _createElementVNode(\"ul\", {\n          class: \"tenant-list\"\n        }, [_createElementVNode(\"li\", null, [_createElementVNode(\"strong\", null, \"默认租户：\"), _createTextVNode(\"共享任务模板，资源限流 500 QPS。\")]), _createElementVNode(\"li\", null, [_createElementVNode(\"strong\", null, \"营销团队：\"), _createTextVNode(\"Kafka Topic 独立，执行节点 10 台。\")]), _createElementVNode(\"li\", null, [_createElementVNode(\"strong\", null, \"风控团队：\"), _createTextVNode(\"开启策略隔离，消息加密。\")])], -1 /* CACHED */))]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  })]), _createVNode(_component_el_drawer, {\n    modelValue: $setup.ruleDrawerVisible,\n    \"onUpdate:modelValue\": _cache[13] || (_cache[13] = $event => $setup.ruleDrawerVisible = $event),\n    title: \"告警规则\",\n    size: \"30%\"\n  }, {\n    footer: _withCtx(() => [_createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_el_button, {\n      onClick: _cache[12] || (_cache[12] = $event => $setup.ruleDrawerVisible = false)\n    }, {\n      default: _withCtx(() => [...(_cache[31] || (_cache[31] = [_createTextVNode(\"取消\", -1 /* CACHED */)]))]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_button, {\n      type: \"primary\",\n      loading: $setup.savingRule,\n      onClick: $setup.saveRule\n    }, {\n      default: _withCtx(() => [...(_cache[32] || (_cache[32] = [_createTextVNode(\"保存\", -1 /* CACHED */)]))]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"loading\"])])]),\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      model: $setup.currentRule,\n      \"label-width\": \"110px\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"规则名称\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.currentRule.name,\n          \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $setup.currentRule.name = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"监控指标\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $setup.currentRule.metric,\n          \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $setup.currentRule.metric = $event)\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_option, {\n            label: \"失败率\",\n            value: \"FAILURE_RATE\"\n          }), _createVNode(_component_el_option, {\n            label: \"延迟\",\n            value: \"LATENCY\"\n          }), _createVNode(_component_el_option, {\n            label: \"积压任务\",\n            value: \"BACKLOG\"\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"触发阈值\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input_number, {\n          modelValue: $setup.currentRule.threshold,\n          \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $setup.currentRule.threshold = $event),\n          min: 1,\n          max: 10000\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"告警渠道\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_checkbox_group, {\n          modelValue: $setup.currentRule.channels,\n          \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $setup.currentRule.channels = $event)\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_checkbox, {\n            label: \"EMAIL\"\n          }, {\n            default: _withCtx(() => [...(_cache[28] || (_cache[28] = [_createTextVNode(\"邮件\", -1 /* CACHED */)]))]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_checkbox, {\n            label: \"DINGTALK\"\n          }, {\n            default: _withCtx(() => [...(_cache[29] || (_cache[29] = [_createTextVNode(\"钉钉\", -1 /* CACHED */)]))]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_checkbox, {\n            label: \"SMS\"\n          }, {\n            default: _withCtx(() => [...(_cache[30] || (_cache[30] = [_createTextVNode(\"短信\", -1 /* CACHED */)]))]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"通知人\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $setup.currentRule.subscribers,\n          \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $setup.currentRule.subscribers = $event),\n          multiple: \"\",\n          filterable: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_option, {\n            label: \"张强\",\n            value: \"zhangqiang@corp.com\"\n          }), _createVNode(_component_el_option, {\n            label: \"李娜\",\n            value: \"lina@corp.com\"\n          }), _createVNode(_component_el_option, {\n            label: \"王伟\",\n            value: \"wangwei@corp.com\"\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"启用状态\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_switch, {\n          modelValue: $setup.currentRule.enabled,\n          \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => $setup.currentRule.enabled = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_createVNode","_component_el_button","type","size","loading","$setup","saving","onClick","saveGlobalConfig","_cache","_component_el_form","model","globalConfig","inline","_component_el_row","gutter","_component_el_col","span","_component_el_form_item","label","_component_el_input_number","defaultRetry","$event","min","max","retryInterval","_component_el_select","schedulerMode","_component_el_option","value","maxConcurrentTasks","_component_el_checkbox_group","idempotentGuards","_component_el_checkbox","_component_el_switch","autoRecover","_hoisted_4","_hoisted_5","openRuleDrawer","_createBlock","_component_el_table","data","alertRules","_component_el_table_column","prop","width","default","_withCtx","row","_Fragment","_renderList","channels","channel","_component_el_tag","key","effect","channelLabel","enabled","onChange","toggleRule","fixed","link","editRule","_component_el_popconfirm","title","onConfirm","removeRule","reference","_hoisted_6","_component_el_card","shadow","header","_component_el_timeline","_component_el_timeline_item","timestamp","_component_el_drawer","ruleDrawerVisible","footer","_hoisted_7","savingRule","saveRule","currentRule","_component_el_input","name","metric","threshold","subscribers","multiple","filterable"],"sources":["D:\\桌面\\项目\\分布式任务调度系统\\SkyTask\\skytask-frontend\\src\\views\\ConfigCenterView.vue"],"sourcesContent":["<template>\n  <div class=\"config-center\">\n    <section class=\"card config-center__section\">\n      <div class=\"section__header\">\n        <h3>全局调度配置</h3>\n        <el-button type=\"primary\" size=\"small\" :loading=\"saving\" @click=\"saveGlobalConfig\">保存</el-button>\n      </div>\n      <el-form :model=\"globalConfig\" label-width=\"160px\" :inline=\"false\">\n        <el-row :gutter=\"24\">\n          <el-col :span=\"12\">\n            <el-form-item label=\"默认重试次数\">\n              <el-input-number v-model=\"globalConfig.defaultRetry\" :min=\"0\" :max=\"10\" />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"重试间隔 (秒)\">\n              <el-input-number v-model=\"globalConfig.retryInterval\" :min=\"5\" :max=\"600\" />\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row :gutter=\"24\">\n          <el-col :span=\"12\">\n            <el-form-item label=\"调度集群模式\">\n              <el-select v-model=\"globalConfig.schedulerMode\">\n                <el-option label=\"自动主备 (Leader 选举)\" value=\"LEADER_ELECTION\" />\n                <el-option label=\"多主 (一致性锁)\" value=\"MULTI_MASTER\" />\n              </el-select>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"最大并发任务数\">\n              <el-input-number v-model=\"globalConfig.maxConcurrentTasks\" :min=\"10\" :max=\"5000\" />\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-form-item label=\"任务幂等保障\">\n          <el-checkbox-group v-model=\"globalConfig.idempotentGuards\">\n            <el-checkbox label=\"数据库状态机\" />\n            <el-checkbox label=\"Redis 幂等键\" />\n            <el-checkbox label=\"执行日志锁\" />\n          </el-checkbox-group>\n        </el-form-item>\n        <el-form-item label=\"执行超时自愈\">\n          <el-switch v-model=\"globalConfig.autoRecover\" />\n          <span class=\"form-tip\">启用后，超时任务自动中断并重新调度</span>\n        </el-form-item>\n      </el-form>\n    </section>\n\n    <section class=\"card config-center__section\">\n      <div class=\"section__header\">\n        <h3>告警策略</h3>\n        <el-button type=\"primary\" size=\"small\" @click=\"openRuleDrawer\">新增规则</el-button>\n      </div>\n      <el-table :data=\"alertRules\" size=\"small\" v-loading=\"loading\">\n        <el-table-column prop=\"name\" label=\"规则名称\" min-width=\"160\" />\n        <el-table-column prop=\"metric\" label=\"监控指标\" width=\"140\" />\n        <el-table-column prop=\"threshold\" label=\"阈值\" width=\"120\" />\n        <el-table-column label=\"告警渠道\" width=\"160\">\n          <template #default=\"{ row }\">\n            <el-tag v-for=\"channel in row.channels\" :key=\"channel\" size=\"small\" effect=\"plain\">\n              {{ channelLabel(channel) }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"启用状态\" width=\"120\">\n          <template #default=\"{ row }\">\n            <el-switch v-model=\"row.enabled\" @change=\"toggleRule(row)\" />\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"140\" fixed=\"right\">\n          <template #default=\"{ row }\">\n            <el-button link size=\"small\" type=\"primary\" @click=\"editRule(row)\">编辑</el-button>\n            <el-popconfirm title=\"确认删除该规则？\" @confirm=\"removeRule(row)\">\n              <template #reference>\n                <el-button link size=\"small\" type=\"danger\">删除</el-button>\n              </template>\n            </el-popconfirm>\n          </template>\n        </el-table-column>\n      </el-table>\n    </section>\n\n    <section class=\"card config-center__section\">\n      <div class=\"section__header\">\n        <h3>环境与租户</h3>\n      </div>\n      <el-row :gutter=\"20\">\n        <el-col :span=\"12\">\n          <el-card shadow=\"hover\">\n            <template #header>\n              <span>环境隔离配置</span>\n            </template>\n            <el-timeline>\n              <el-timeline-item timestamp=\"dev\" type=\"primary\">\n                使用 MySQL skytask_dev，Kafka topic skytask-dev，允许调试。\n              </el-timeline-item>\n              <el-timeline-item timestamp=\"test\" type=\"warning\">\n                使用 MySQL skytask_test，Kafka topic skytask-test，开启审计。\n              </el-timeline-item>\n              <el-timeline-item timestamp=\"prod\" type=\"success\">\n                使用 MySQL skytask_prod，Kafka topic skytask-prod，开启幂等与告警。\n              </el-timeline-item>\n            </el-timeline>\n          </el-card>\n        </el-col>\n        <el-col :span=\"12\">\n          <el-card shadow=\"hover\">\n            <template #header>\n              <span>租户管理策略</span>\n            </template>\n            <ul class=\"tenant-list\">\n              <li><strong>默认租户：</strong>共享任务模板，资源限流 500 QPS。</li>\n              <li><strong>营销团队：</strong>Kafka Topic 独立，执行节点 10 台。</li>\n              <li><strong>风控团队：</strong>开启策略隔离，消息加密。</li>\n            </ul>\n          </el-card>\n        </el-col>\n      </el-row>\n    </section>\n\n    <el-drawer v-model=\"ruleDrawerVisible\" title=\"告警规则\" size=\"30%\">\n      <el-form :model=\"currentRule\" label-width=\"110px\">\n        <el-form-item label=\"规则名称\">\n          <el-input v-model=\"currentRule.name\" />\n        </el-form-item>\n        <el-form-item label=\"监控指标\">\n          <el-select v-model=\"currentRule.metric\">\n            <el-option label=\"失败率\" value=\"FAILURE_RATE\" />\n            <el-option label=\"延迟\" value=\"LATENCY\" />\n            <el-option label=\"积压任务\" value=\"BACKLOG\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"触发阈值\">\n          <el-input-number v-model=\"currentRule.threshold\" :min=\"1\" :max=\"10000\" />\n        </el-form-item>\n        <el-form-item label=\"告警渠道\">\n          <el-checkbox-group v-model=\"currentRule.channels\">\n            <el-checkbox label=\"EMAIL\">邮件</el-checkbox>\n            <el-checkbox label=\"DINGTALK\">钉钉</el-checkbox>\n            <el-checkbox label=\"SMS\">短信</el-checkbox>\n          </el-checkbox-group>\n        </el-form-item>\n        <el-form-item label=\"通知人\">\n          <el-select v-model=\"currentRule.subscribers\" multiple filterable>\n            <el-option label=\"张强\" value=\"zhangqiang@corp.com\" />\n            <el-option label=\"李娜\" value=\"lina@corp.com\" />\n            <el-option label=\"王伟\" value=\"wangwei@corp.com\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"启用状态\">\n          <el-switch v-model=\"currentRule.enabled\" />\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <div class=\"drawer-footer\">\n          <el-button @click=\"ruleDrawerVisible = false\">取消</el-button>\n          <el-button type=\"primary\" :loading=\"savingRule\" @click=\"saveRule\">保存</el-button>\n        </div>\n      </template>\n    </el-drawer>\n  </div>\n</template>\n\n<script setup>\nimport { onMounted, reactive, ref } from 'vue';\nimport {\n  fetchAlertRules,\n  updateAlertRule,\n  deleteAlertRule,\n  createAlertRule,\n  testAlertChannel\n} from '@/api/alerts';\n\nconst alertRules = ref([]);\nconst loading = ref(false);\nconst saving = ref(false);\nconst savingRule = ref(false);\nconst ruleDrawerVisible = ref(false);\n\nconst globalConfig = reactive({\n  defaultRetry: 3,\n  retryInterval: 60,\n  schedulerMode: 'LEADER_ELECTION',\n  maxConcurrentTasks: 2000,\n  idempotentGuards: ['数据库状态机', 'Redis 幂等键'],\n  autoRecover: true\n});\n\nconst currentRule = reactive({\n  id: null,\n  name: '',\n  metric: 'FAILURE_RATE',\n  threshold: 3,\n  channels: ['EMAIL'],\n  subscribers: [],\n  enabled: true\n});\n\nonMounted(async () => {\n  await loadRules();\n});\n\nconst loadRules = async () => {\n  loading.value = true;\n  try {\n    alertRules.value = await fetchAlertRules();\n  } finally {\n    loading.value = false;\n  }\n};\n\nconst saveGlobalConfig = async () => {\n  saving.value = true;\n  try {\n    await testAlertChannel({ ping: true });\n  } finally {\n    saving.value = false;\n  }\n};\n\nconst openRuleDrawer = () => {\n  Object.assign(currentRule, {\n    id: null,\n    name: '',\n    metric: 'FAILURE_RATE',\n    threshold: 3,\n    channels: ['EMAIL'],\n    subscribers: [],\n    enabled: true\n  });\n  ruleDrawerVisible.value = true;\n};\n\nconst editRule = (rule) => {\n  Object.assign(currentRule, rule);\n  ruleDrawerVisible.value = true;\n};\n\nconst toggleRule = async (rule) => {\n  await updateAlertRule(rule.id, { enabled: rule.enabled });\n};\n\nconst removeRule = async (rule) => {\n  await deleteAlertRule(rule.id);\n  await loadRules();\n};\n\nconst saveRule = async () => {\n  savingRule.value = true;\n  try {\n    if (currentRule.id) {\n      await updateAlertRule(currentRule.id, currentRule);\n    } else {\n      await createAlertRule(currentRule);\n    }\n    await loadRules();\n    ruleDrawerVisible.value = false;\n  } finally {\n    savingRule.value = false;\n  }\n};\n\nconst channelLabel = (channel) => {\n  const map = {\n    EMAIL: '邮件',\n    DINGTALK: '钉钉',\n    SMS: '短信'\n  };\n  return map[channel] || channel;\n};\n</script>\n\n<style scoped lang=\"scss\">\n.config-center {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.config-center__section {\n  padding: 20px 24px;\n\n  .section__header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 20px;\n\n    h3 {\n      margin: 0;\n      font-size: 18px;\n      font-weight: 600;\n    }\n  }\n}\n\n.form-tip {\n  margin-left: 12px;\n  font-size: 12px;\n  color: #64748b;\n}\n\n.tenant-list {\n  margin: 0;\n  padding-left: 18px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  font-size: 13px;\n  color: #475569;\n\n  strong {\n    color: #0f172a;\n  }\n}\n\n.drawer-footer {\n  display: flex;\n  justify-content: flex-end;\n  gap: 12px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
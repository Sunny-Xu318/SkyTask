{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, withKeys as _withKeys, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, resolveDirective as _resolveDirective, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"task-center\"\n};\nconst _hoisted_2 = {\n  class: \"task-center__toolbar card\"\n};\nconst _hoisted_3 = {\n  class: \"toolbar__left\"\n};\nconst _hoisted_4 = {\n  class: \"toolbar__right\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"task-center__content card\"\n};\nconst _hoisted_6 = {\n  class: \"task-name\"\n};\nconst _hoisted_7 = {\n  class: \"task-meta\"\n};\nconst _hoisted_8 = {\n  class: \"task-center__pagination\"\n};\nconst _hoisted_9 = {\n  key: 1,\n  class: \"card task-center__empty\"\n};\nexport function render(_ctx, _cache) {\n  const _component_Search = _resolveComponent(\"Search\");\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_link = _resolveComponent(\"el-link\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_avatar = _resolveComponent(\"el-avatar\");\n  const _component_StatusTag = _resolveComponent(\"StatusTag\");\n  const _component_el_popconfirm = _resolveComponent(\"el-popconfirm\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_pagination = _resolveComponent(\"el-pagination\");\n  const _component_el_empty = _resolveComponent(\"el-empty\");\n  const _component_TaskFormDrawer = _resolveComponent(\"TaskFormDrawer\");\n  const _component_TaskExecutionDrawer = _resolveComponent(\"TaskExecutionDrawer\");\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"section\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_form, {\n    inline: true,\n    model: _ctx.filters\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: _ctx.filters.keyword,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.filters.keyword = $event),\n        placeholder: \"Search task name / owner / tag\",\n        clearable: \"\",\n        onKeyup: _withKeys(_ctx.handleSearch, [\"enter\"])\n      }, {\n        prefix: _withCtx(() => [_createVNode(_component_el_icon, null, {\n          default: _withCtx(() => [_createVNode(_component_Search)]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\", \"onKeyup\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_select, {\n        modelValue: _ctx.filters.status,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.filters.status = $event),\n        placeholder: \"Task status\",\n        clearable: \"\",\n        onChange: _ctx.handleSearch\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_option, {\n          label: \"All\",\n          value: \"ALL\"\n        }), _createVNode(_component_el_option, {\n          label: \"Enabled\",\n          value: \"ENABLED\"\n        }), _createVNode(_component_el_option, {\n          label: \"Disabled\",\n          value: \"DISABLED\"\n        }), _createVNode(_component_el_option, {\n          label: \"Failed Alert\",\n          value: \"FAILED\"\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\", \"onChange\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_select, {\n        modelValue: _ctx.filters.owner,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.filters.owner = $event),\n        placeholder: \"Owner\",\n        clearable: \"\",\n        filterable: \"\",\n        onChange: _ctx.handleSearch\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.ownerOptions, owner => {\n          return _openBlock(), _createBlock(_component_el_option, {\n            key: owner.value,\n            label: owner.label,\n            value: owner.value\n          }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n        }), 128 /* KEYED_FRAGMENT */))]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\", \"onChange\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_select, {\n        modelValue: _ctx.filters.tags,\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.filters.tags = $event),\n        multiple: \"\",\n        \"collapse-tags\": \"\",\n        placeholder: \"Tags\",\n        onChange: _ctx.handleSearch\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.tagOptions, tag => {\n          return _openBlock(), _createBlock(_component_el_option, {\n            key: tag,\n            label: tag,\n            value: tag\n          }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n        }), 128 /* KEYED_FRAGMENT */))]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\", \"onChange\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\"])]), _createElementVNode(\"div\", _hoisted_4, [_ctx.canReadTasks ? (_openBlock(), _createBlock(_component_el_button, {\n    key: 0,\n    icon: _ctx.Download,\n    onClick: _ctx.exportTasks\n  }, {\n    default: _withCtx(() => [...(_cache[6] || (_cache[6] = [_createTextVNode(\"Export\", -1 /* CACHED */)]))]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"icon\", \"onClick\"])) : _createCommentVNode(\"v-if\", true), _ctx.canManageTasks ? (_openBlock(), _createBlock(_component_el_button, {\n    key: 1,\n    type: \"primary\",\n    icon: _ctx.Plus,\n    onClick: _ctx.openCreate\n  }, {\n    default: _withCtx(() => [...(_cache[7] || (_cache[7] = [_createTextVNode(\" New Task \", -1 /* CACHED */)]))]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"icon\", \"onClick\"])) : _createCommentVNode(\"v-if\", true)])]), _ctx.canReadTasks ? (_openBlock(), _createElementBlock(\"section\", _hoisted_5, [_withDirectives((_openBlock(), _createBlock(_component_el_table, {\n    data: _ctx.taskList,\n    height: \"500\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      label: \"Task\",\n      \"min-width\": \"220\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_el_link, {\n        type: \"primary\",\n        onClick: $event => _ctx.openDetail(row)\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(row.name), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), row.group ? (_openBlock(), _createBlock(_component_el_tag, {\n        key: 0,\n        size: \"small\",\n        class: \"task-name__tag\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(row.group), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"span\", null, \"Last run: \" + _toDisplayString(row.lastTrigger || '-'), 1 /* TEXT */), _createElementVNode(\"span\", null, \"Last node: \" + _toDisplayString(row.lastNode || '-'), 1 /* TEXT */)])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      label: \"Type\",\n      width: \"120\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createVNode(_component_el_tag, null, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.formatType(row.type)), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */)]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      prop: \"cronExpr\",\n      label: \"Schedule\",\n      width: \"160\",\n      \"show-overflow-tooltip\": \"\"\n    }), _createVNode(_component_el_table_column, {\n      label: \"Owner\",\n      width: \"140\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createVNode(_component_el_avatar, {\n        size: \"small\",\n        class: \"owner-avatar\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.getOwnerInitials(row.owner)), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */), _createElementVNode(\"span\", null, _toDisplayString(row.owner), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      label: \"Status\",\n      width: \"140\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createVNode(_component_StatusTag, {\n        status: row.status\n      }, null, 8 /* PROPS */, [\"status\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      label: \"Alert\",\n      width: \"120\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createVNode(_component_el_tag, {\n        type: row.alertEnabled ? 'success' : 'info',\n        size: \"small\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(row.alertEnabled ? 'Enabled' : 'Disabled'), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      label: \"Actions\",\n      width: \"320\",\n      fixed: \"right\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_ctx.canReadTasks ? (_openBlock(), _createBlock(_component_el_button, {\n        key: 0,\n        link: \"\",\n        type: \"primary\",\n        size: \"small\",\n        onClick: $event => _ctx.openExecution(row)\n      }, {\n        default: _withCtx(() => [...(_cache[8] || (_cache[8] = [_createTextVNode(\" Records \", -1 /* CACHED */)]))]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), _ctx.canManageTasks ? (_openBlock(), _createBlock(_component_el_button, {\n        key: 1,\n        link: \"\",\n        type: \"primary\",\n        size: \"small\",\n        onClick: $event => _ctx.editTask(row)\n      }, {\n        default: _withCtx(() => [...(_cache[9] || (_cache[9] = [_createTextVNode(\" Edit \", -1 /* CACHED */)]))]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), _ctx.canManageTasks ? (_openBlock(), _createBlock(_component_el_button, {\n        key: 2,\n        link: \"\",\n        type: row.enabled ? 'danger' : 'success',\n        size: \"small\",\n        onClick: $event => _ctx.toggleTask(row)\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(row.enabled ? 'Disable' : 'Enable'), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\", \"onClick\"])) : _createCommentVNode(\"v-if\", true), _ctx.canTriggerTasks ? (_openBlock(), _createBlock(_component_el_button, {\n        key: 3,\n        link: \"\",\n        type: \"warning\",\n        size: \"small\",\n        onClick: $event => _ctx.triggerTask(row)\n      }, {\n        default: _withCtx(() => [...(_cache[10] || (_cache[10] = [_createTextVNode(\" Trigger \", -1 /* CACHED */)]))]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), _ctx.canManageTasks ? (_openBlock(), _createBlock(_component_el_popconfirm, {\n        key: 4,\n        title: \"Delete this task?\",\n        onConfirm: $event => _ctx.removeTask(row)\n      }, {\n        reference: _withCtx(() => [_createVNode(_component_el_button, {\n          link: \"\",\n          type: \"danger\",\n          size: \"small\"\n        }, {\n          default: _withCtx(() => [...(_cache[11] || (_cache[11] = [_createTextVNode(\"Delete\", -1 /* CACHED */)]))]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onConfirm\"])) : _createCommentVNode(\"v-if\", true)]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\"])), [[_directive_loading, _ctx.loading]]), _createElementVNode(\"div\", _hoisted_8, [_createVNode(_component_el_pagination, {\n    background: \"\",\n    layout: \"total, sizes, prev, pager, next, jumper\",\n    \"current-page\": _ctx.pagination.page,\n    \"page-size\": _ctx.pagination.size,\n    \"page-sizes\": [10, 20, 50],\n    total: _ctx.pagination.total,\n    onCurrentChange: _ctx.changePage,\n    onSizeChange: _ctx.changeSize\n  }, null, 8 /* PROPS */, [\"current-page\", \"page-size\", \"total\", \"onCurrentChange\", \"onSizeChange\"])])])) : (_openBlock(), _createElementBlock(\"section\", _hoisted_9, [_createVNode(_component_el_empty, {\n    description: \"You do not have permission to view tasks\"\n  })])), _createVNode(_component_TaskFormDrawer, {\n    visible: _ctx.drawerVisible,\n    \"onUpdate:visible\": [_cache[4] || (_cache[4] = $event => _ctx.drawerVisible = $event), _ctx.handleDrawerVisible],\n    \"model-value\": _ctx.currentTaskForm,\n    \"group-options\": _ctx.groupOptions,\n    \"owner-options\": _ctx.ownerOptions,\n    \"tag-options\": _ctx.tagOptions,\n    submitting: _ctx.submitting,\n    onSubmit: _ctx.submitTask,\n    onCronHelper: _ctx.openCronHelper\n  }, null, 8 /* PROPS */, [\"visible\", \"model-value\", \"group-options\", \"owner-options\", \"tag-options\", \"submitting\", \"onSubmit\", \"onUpdate:visible\", \"onCronHelper\"]), _createVNode(_component_TaskExecutionDrawer, {\n    visible: _ctx.executionVisible,\n    \"onUpdate:visible\": _cache[5] || (_cache[5] = $event => _ctx.executionVisible = $event),\n    executions: _ctx.executions,\n    pagination: _ctx.executionPagination,\n    loading: _ctx.executionsLoading,\n    onPageChange: _ctx.handleExecutionPage,\n    onViewLog: _ctx.viewLog\n  }, null, 8 /* PROPS */, [\"visible\", \"executions\", \"pagination\", \"loading\", \"onPageChange\", \"onViewLog\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_createVNode","_component_el_form","inline","model","_ctx","filters","_component_el_form_item","_component_el_input","keyword","$event","placeholder","clearable","onKeyup","_withKeys","handleSearch","prefix","_withCtx","_component_el_icon","_component_Search","_component_el_select","status","onChange","_component_el_option","label","value","owner","filterable","_Fragment","_renderList","ownerOptions","_createBlock","key","tags","multiple","tagOptions","tag","_hoisted_4","canReadTasks","_component_el_button","icon","Download","onClick","exportTasks","_cache","canManageTasks","type","Plus","openCreate","_hoisted_5","_component_el_table","data","taskList","height","_component_el_table_column","default","row","_hoisted_6","_component_el_link","openDetail","name","group","_component_el_tag","size","_hoisted_7","_toDisplayString","lastTrigger","lastNode","width","formatType","prop","_component_el_avatar","getOwnerInitials","_component_StatusTag","alertEnabled","fixed","link","openExecution","editTask","enabled","toggleTask","canTriggerTasks","triggerTask","_component_el_popconfirm","title","onConfirm","removeTask","reference","loading","_hoisted_8","_component_el_pagination","background","layout","pagination","page","total","onCurrentChange","changePage","onSizeChange","changeSize","_hoisted_9","_component_el_empty","description","_component_TaskFormDrawer","visible","drawerVisible","handleDrawerVisible","currentTaskForm","groupOptions","submitting","onSubmit","submitTask","onCronHelper","openCronHelper","_component_TaskExecutionDrawer","executionVisible","executions","executionPagination","executionsLoading","onPageChange","handleExecutionPage","onViewLog","viewLog"],"sources":["D:\\桌面\\项目\\分布式任务调度系统\\SkyTask\\skytask-frontend\\src\\views\\TaskCenterView.vue"],"sourcesContent":["<template>\n  <div class=\"task-center\">\n    <section class=\"task-center__toolbar card\">\n      <div class=\"toolbar__left\">\n        <el-form :inline=\"true\" :model=\"filters\">\n          <el-form-item>\n            <el-input\n              v-model=\"filters.keyword\"\n              placeholder=\"Search task name / owner / tag\"\n              clearable\n              @keyup.enter=\"handleSearch\"\n            >\n              <template #prefix>\n                <el-icon><Search /></el-icon>\n              </template>\n            </el-input>\n          </el-form-item>\n          <el-form-item>\n            <el-select\n              v-model=\"filters.status\"\n              placeholder=\"Task status\"\n              clearable\n              @change=\"handleSearch\"\n            >\n              <el-option label=\"All\" value=\"ALL\" />\n              <el-option label=\"Enabled\" value=\"ENABLED\" />\n              <el-option label=\"Disabled\" value=\"DISABLED\" />\n              <el-option label=\"Failed Alert\" value=\"FAILED\" />\n            </el-select>\n          </el-form-item>\n          <el-form-item>\n            <el-select\n              v-model=\"filters.owner\"\n              placeholder=\"Owner\"\n              clearable\n              filterable\n              @change=\"handleSearch\"\n            >\n              <el-option\n                v-for=\"owner in ownerOptions\"\n                :key=\"owner.value\"\n                :label=\"owner.label\"\n                :value=\"owner.value\"\n              />\n            </el-select>\n          </el-form-item>\n          <el-form-item>\n            <el-select\n              v-model=\"filters.tags\"\n              multiple\n              collapse-tags\n              placeholder=\"Tags\"\n              @change=\"handleSearch\"\n            >\n              <el-option\n                v-for=\"tag in tagOptions\"\n                :key=\"tag\"\n                :label=\"tag\"\n                :value=\"tag\"\n              />\n            </el-select>\n          </el-form-item>\n        </el-form>\n      </div>\n      <div class=\"toolbar__right\">\n        <el-button v-if=\"canReadTasks\" :icon=\"Download\" @click=\"exportTasks\">Export</el-button>\n        <el-button\n          v-if=\"canManageTasks\"\n          type=\"primary\"\n          :icon=\"Plus\"\n          @click=\"openCreate\"\n        >\n          New Task\n        </el-button>\n      </div>\n    </section>\n\n    <section v-if=\"canReadTasks\" class=\"task-center__content card\">\n      <el-table :data=\"taskList\" height=\"500\" v-loading=\"loading\">\n        <el-table-column label=\"Task\" min-width=\"220\">\n          <template #default=\"{ row }\">\n            <div class=\"task-name\">\n              <el-link type=\"primary\" @click=\"openDetail(row)\">{{ row.name }}</el-link>\n              <el-tag v-if=\"row.group\" size=\"small\" class=\"task-name__tag\">{{ row.group }}</el-tag>\n            </div>\n            <div class=\"task-meta\">\n              <span>Last run: {{ row.lastTrigger || '-' }}</span>\n              <span>Last node: {{ row.lastNode || '-' }}</span>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"Type\" width=\"120\">\n          <template #default=\"{ row }\">\n            <el-tag>{{ formatType(row.type) }}</el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"cronExpr\" label=\"Schedule\" width=\"160\" show-overflow-tooltip />\n        <el-table-column label=\"Owner\" width=\"140\">\n          <template #default=\"{ row }\">\n            <el-avatar size=\"small\" class=\"owner-avatar\">{{ getOwnerInitials(row.owner) }}</el-avatar>\n            <span>{{ row.owner }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"Status\" width=\"140\">\n          <template #default=\"{ row }\">\n            <StatusTag :status=\"row.status\" />\n          </template>\n        </el-table-column>\n        <el-table-column label=\"Alert\" width=\"120\">\n          <template #default=\"{ row }\">\n            <el-tag :type=\"row.alertEnabled ? 'success' : 'info'\" size=\"small\">\n              {{ row.alertEnabled ? 'Enabled' : 'Disabled' }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"Actions\" width=\"320\" fixed=\"right\">\n          <template #default=\"{ row }\">\n            <el-button\n              v-if=\"canReadTasks\"\n              link\n              type=\"primary\"\n              size=\"small\"\n              @click=\"openExecution(row)\"\n            >\n              Records\n            </el-button>\n            <el-button\n              v-if=\"canManageTasks\"\n              link\n              type=\"primary\"\n              size=\"small\"\n              @click=\"editTask(row)\"\n            >\n              Edit\n            </el-button>\n            <el-button\n              v-if=\"canManageTasks\"\n              link\n              :type=\"row.enabled ? 'danger' : 'success'\"\n              size=\"small\"\n              @click=\"toggleTask(row)\"\n            >\n              {{ row.enabled ? 'Disable' : 'Enable' }}\n            </el-button>\n            <el-button\n              v-if=\"canTriggerTasks\"\n              link\n              type=\"warning\"\n              size=\"small\"\n              @click=\"triggerTask(row)\"\n            >\n              Trigger\n            </el-button>\n            <el-popconfirm\n              v-if=\"canManageTasks\"\n              title=\"Delete this task?\"\n              @confirm=\"removeTask(row)\"\n            >\n              <template #reference>\n                <el-button link type=\"danger\" size=\"small\">Delete</el-button>\n              </template>\n            </el-popconfirm>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <div class=\"task-center__pagination\">\n        <el-pagination\n          background\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :current-page=\"pagination.page\"\n          :page-size=\"pagination.size\"\n          :page-sizes=\"[10, 20, 50]\"\n          :total=\"pagination.total\"\n          @current-change=\"changePage\"\n          @size-change=\"changeSize\"\n        />\n      </div>\n    </section>\n\n    <section v-else class=\"card task-center__empty\">\n      <el-empty description=\"You do not have permission to view tasks\" />\n    </section>\n\n    <TaskFormDrawer\n      v-model:visible=\"drawerVisible\"\n      :model-value=\"currentTaskForm\"\n      :group-options=\"groupOptions\"\n      :owner-options=\"ownerOptions\"\n      :tag-options=\"tagOptions\"\n      :submitting=\"submitting\"\n      @submit=\"submitTask\"\n      @update:visible=\"handleDrawerVisible\"\n      @cron-helper=\"openCronHelper\"\n    />\n\n    <TaskExecutionDrawer\n      v-model:visible=\"executionVisible\"\n      :executions=\"executions\"\n      :pagination=\"executionPagination\"\n      :loading=\"executionsLoading\"\n      @page-change=\"handleExecutionPage\"\n      @view-log=\"viewLog\"\n    />\n  </div>\n</template>\n\n<script setup>\nimport { computed, onBeforeUnmount, onMounted, reactive, ref, watch } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport { Search, Plus, Download } from '@element-plus/icons-vue';\nimport { ElMessage } from 'element-plus';\nimport StatusTag from '@/components/common/StatusTag.vue';\nimport TaskFormDrawer from '@/components/task/TaskFormDrawer.vue';\nimport TaskExecutionDrawer from '@/components/task/TaskExecutionDrawer.vue';\n\nconst store = useStore();\nconst route = useRoute();\nconst router = useRouter();\n\nconst canReadTasks = computed(() => store.getters['auth/hasPermission']('task:read'));\nconst canManageTasks = computed(() => store.getters['auth/hasPermission']('task:write'));\nconst canTriggerTasks = computed(() => store.getters['auth/hasPermission']('task:trigger'));\n\nconst drawerVisible = ref(false);\nconst executionVisible = ref(false);\nconst submitting = ref(false);\nconst currentTaskForm = ref({});\nconst currentTask = ref(null);\nlet refreshTimer = null;\nlet stopPermissionWatcher = null;\n\nconst filters = reactive({\n  keyword: '',\n  status: 'ALL',\n  owner: null,\n  tags: []\n});\n\nconst ownerOptions = [\n  { label: 'Zhang Qiang · Data Platform', value: 'zhangqiang' },\n  { label: 'Li Na · Marketing', value: 'lina' },\n  { label: 'Wang Wei · Settlement', value: 'wangwei' },\n  { label: 'Zhou Kai · Recommendation', value: 'zhoukai' }\n];\n\nconst tagOptions = ['Report', 'Risk', 'Cache', 'Recommend', 'Marketing', 'Settlement'];\n\nconst groupOptions = [\n  { label: 'Data Report', value: 'DATA_REPORT' },\n  { label: 'Realtime Risk', value: 'RISK_CONTROL' },\n  { label: 'Marketing Center', value: 'MARKETING' },\n  { label: 'Recommendation', value: 'RECOMMEND' }\n];\n\nconst taskList = computed(() => store.getters['tasks/taskList']);\nconst pagination = computed(() => store.getters['tasks/taskPagination']);\nconst executions = computed(() => store.getters['tasks/taskExecutions']);\nconst executionPagination = computed(() => store.getters['tasks/taskExecutionPagination']);\nconst loading = computed(() => store.getters['tasks/tasksLoading']);\nconst executionsLoading = computed(() => store.getters['tasks/taskExecutionLoading']);\\nconst listError = computed(() => store.getters['tasks/taskListError']);\\nconst metricsError = computed(() => store.getters['tasks/taskMetricsError']);\n\nconst ensureReadPermission = (toast = true) => {\n  if (canReadTasks.value) {\n    return true;\n  }\n  if (toast) {\n    ElMessage.warning('You do not have permission to view tasks');\n  }\n  return false;\n};\n\nconst ensureManagePermission = () => {\n  if (canManageTasks.value) {\n    return true;\n  }\n  ElMessage.warning('You do not have permission to manage tasks');\n  return false;\n};\n\nconst ensureTriggerPermission = () => {\n  if (canTriggerTasks.value) {\n    return true;\n  }\n  ElMessage.warning('You do not have permission to trigger tasks');\n  return false;\n};\n\nconst requestTaskData = async () => {\n  if (!ensureReadPermission(false)) {\n    return;\n  }\n  try {\n    await store.dispatch('tasks/loadTaskList');\n  } catch (error) {\n    // errors handled via store state\n  }\n  try {\n    await store.dispatch('tasks/loadMetrics');\n  } catch (error) {\n    // errors handled via store state\n  }\n};\n\nconst startAutoRefresh = () => {\n  if (refreshTimer) {\n    return;\n  }\n  refreshTimer = window.setInterval(requestTaskData, 10000);\n};\n\nconst stopAutoRefresh = () => {\n  if (refreshTimer) {\n    window.clearInterval(refreshTimer);\n    refreshTimer = null;\n  }\n};\n\nconst applyQueryFilters = () => {\n  if (typeof route.query.keyword === 'string') {\n    filters.keyword = route.query.keyword;\n  }\n  if (typeof route.query.status === 'string') {\n    filters.status = route.query.status;\n  }\n  if (typeof route.query.owner === 'string') {\n    filters.owner = route.query.owner;\n  }\n  if (route.query.tags) {\n    if (Array.isArray(route.query.tags)) {\n      filters.tags = route.query.tags;\n    } else if (typeof route.query.tags === 'string') {\n      filters.tags = route.query.tags.split(',');\n    }\n  }\n};\n\nonMounted(() => {\n  applyQueryFilters();\n  stopPermissionWatcher = watch(\n    canReadTasks,\n    (allowed) => {\n      if (!allowed) {\n        stopAutoRefresh();\n        return;\n      }\n      handleSearch();\n      startAutoRefresh();\n    },\n    { immediate: true }\n  );\n});\n\nonBeforeUnmount(() => {\n  if (stopPermissionWatcher) {\n    stopPermissionWatcher();\n  }\n  stopAutoRefresh();\n});\n\nconst handleSearch = () => {\n  if (!ensureReadPermission()) {\n    return;\n  }\n  store.dispatch('tasks/setFilters', { ...filters });\n  store.dispatch('tasks/loadMetrics');\n\n  const query = {\n    keyword: filters.keyword || undefined,\n    status: filters.status && filters.status !== 'ALL' ? filters.status : undefined,\n    owner: filters.owner || undefined,\n    tags: filters.tags.length ? filters.tags.join(',') : undefined\n  };\n  router.replace({ query: { ...route.query, ...query } });\n};\n\nconst changePage = (page) => {\n  if (!ensureReadPermission(false)) {\n    return;\n  }\n  store.dispatch('tasks/setPagination', { page });\n};\n\nconst changeSize = (size) => {\n  if (!ensureReadPermission(false)) {\n    return;\n  }\n  store.dispatch('tasks/setPagination', { size, page: 1 });\n};\n\nconst handleDrawerVisible = (visible) => {\n  drawerVisible.value = visible;\n  if (!visible) {\n    currentTaskForm.value = {};\n  }\n};\n\nconst openCreate = () => {\n  if (!ensureManagePermission()) {\n    return;\n  }\n  currentTaskForm.value = {};\n  drawerVisible.value = true;\n};\n\nconst editTask = (row) => {\n  if (!ensureManagePermission()) {\n    return;\n  }\n  currentTaskForm.value = { ...row };\n  drawerVisible.value = true;\n};\n\nconst submitTask = async (payload) => {\n  if (!ensureManagePermission()) {\n    return;\n  }\n  submitting.value = true;\n  try {\n    await store.dispatch('tasks/submitTask', payload);\n    drawerVisible.value = false;\n    currentTaskForm.value = {};\n    handleSearch();\n  } finally {\n    submitting.value = false;\n  }\n};\n\nconst toggleTask = async (row) => {\n  if (!ensureManagePermission()) {\n    return;\n  }\n  await store.dispatch('tasks/changeTaskStatus', { taskId: row.id, enabled: !row.enabled });\n  handleSearch();\n};\n\nconst removeTask = async (row) => {\n  if (!ensureManagePermission()) {\n    return;\n  }\n  await store.dispatch('tasks/removeTask', row.id);\n  handleSearch();\n};\n\nconst triggerTask = async (row) => {\n  if (!ensureTriggerPermission()) {\n    return;\n  }\n  await store.dispatch('tasks/triggerTask', { taskId: row.id, payload: {} });\n  ElMessage.success('Task execution requested');\n};\n\nconst openExecution = async (row) => {\n  if (!ensureReadPermission()) {\n    return;\n  }\n  await store.dispatch('tasks/loadTaskExecutions', { taskId: row.id });\n  currentTask.value = row;\n  executionVisible.value = true;\n};\n\nconst handleExecutionPage = async (page) => {\n  if (!ensureReadPermission(false) || !currentTask.value) {\n    return;\n  }\n  await store.dispatch('tasks/loadTaskExecutions', {\n    taskId: currentTask.value.id,\n    page,\n    size: executionPagination.value.size\n  });\n};\n\nconst openDetail = (row) => {\n  if (!ensureReadPermission()) {\n    return;\n  }\n  router.push(`/tasks/${row.id}`);\n};\n\nconst viewLog = (record) => {\n  if (!ensureReadPermission()) {\n    return;\n  }\n  router.push({\n    path: `/tasks/${currentTask.value?.id}`,\n    query: { recordId: record.id }\n  });\n};\n\nconst openCronHelper = () => {\n  router.push({ path: '/config', query: { tab: 'cron-tool' } });\n};\n\nconst exportTasks = () => {\n  if (!ensureReadPermission()) {\n    return;\n  }\n  window.open('/api/tasks/export');\n};\n\nconst formatType = (type) => {\n  const map = {\n    CRON: 'Cron',\n    ONE_TIME: 'One-time',\n    FIXED_RATE: 'Fixed rate'\n  };\n  return map[type] || type;\n};\n\nconst getOwnerInitials = (owner) => {\n  if (!owner) {\n    return 'NA';\n  }\n  return owner.slice(0, 2).toUpperCase();\n};\n</script>\n\n<style scoped lang=\"scss\">\n.task-center {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  &__toolbar {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    gap: 20px;\n\n    .toolbar__left {\n      flex: 1;\n    }\n\n    .toolbar__right {\n      display: flex;\n      gap: 12px;\n    }\n  }\n\n  &__content {\n    .task-name {\n      display: flex;\n      align-items: center;\n      gap: 6px;\n\n      &__tag {\n        background: rgba(34, 211, 238, 0.1);\n        color: #0891b2;\n      }\n    }\n\n    .task-meta {\n      display: flex;\n      gap: 16px;\n      font-size: 12px;\n      color: #64748b;\n      margin-top: 4px;\n    }\n  }\n\n  &__pagination {\n    display: flex;\n    justify-content: flex-end;\n    padding-top: 16px;\n  }\n\n  &__empty {\n    display: flex;\n    justify-content: center;\n    padding: 48px 0;\n  }\n}\n\n.owner-avatar {\n  background-color: #0891b2;\n  color: #fff;\n  margin-right: 8px;\n}\n</style>\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { onMounted, reactive, ref } from 'vue';\nimport { fetchAlertRules, updateAlertRule, deleteAlertRule, createAlertRule, testAlertChannel } from '@/api/alerts';\nexport default {\n  __name: 'ConfigCenterView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const alertRules = ref([]);\n    const loading = ref(false);\n    const saving = ref(false);\n    const savingRule = ref(false);\n    const ruleDrawerVisible = ref(false);\n    const globalConfig = reactive({\n      defaultRetry: 3,\n      retryInterval: 60,\n      schedulerMode: 'LEADER_ELECTION',\n      maxConcurrentTasks: 2000,\n      idempotentGuards: ['数据库状态机', 'Redis 幂等键'],\n      autoRecover: true\n    });\n    const currentRule = reactive({\n      id: null,\n      name: '',\n      metric: 'FAILURE_RATE',\n      threshold: 3,\n      channels: ['EMAIL'],\n      subscribers: [],\n      enabled: true\n    });\n    onMounted(async () => {\n      await loadRules();\n    });\n    const loadRules = async () => {\n      loading.value = true;\n      try {\n        alertRules.value = await fetchAlertRules();\n      } finally {\n        loading.value = false;\n      }\n    };\n    const saveGlobalConfig = async () => {\n      saving.value = true;\n      try {\n        await testAlertChannel({\n          ping: true\n        });\n      } finally {\n        saving.value = false;\n      }\n    };\n    const openRuleDrawer = () => {\n      Object.assign(currentRule, {\n        id: null,\n        name: '',\n        metric: 'FAILURE_RATE',\n        threshold: 3,\n        channels: ['EMAIL'],\n        subscribers: [],\n        enabled: true\n      });\n      ruleDrawerVisible.value = true;\n    };\n    const editRule = rule => {\n      Object.assign(currentRule, rule);\n      ruleDrawerVisible.value = true;\n    };\n    const toggleRule = async rule => {\n      await updateAlertRule(rule.id, {\n        enabled: rule.enabled\n      });\n    };\n    const removeRule = async rule => {\n      await deleteAlertRule(rule.id);\n      await loadRules();\n    };\n    const saveRule = async () => {\n      savingRule.value = true;\n      try {\n        if (currentRule.id) {\n          await updateAlertRule(currentRule.id, currentRule);\n        } else {\n          await createAlertRule(currentRule);\n        }\n        await loadRules();\n        ruleDrawerVisible.value = false;\n      } finally {\n        savingRule.value = false;\n      }\n    };\n    const channelLabel = channel => {\n      const map = {\n        EMAIL: '邮件',\n        DINGTALK: '钉钉',\n        SMS: '短信'\n      };\n      return map[channel] || channel;\n    };\n    const __returned__ = {\n      alertRules,\n      loading,\n      saving,\n      savingRule,\n      ruleDrawerVisible,\n      globalConfig,\n      currentRule,\n      loadRules,\n      saveGlobalConfig,\n      openRuleDrawer,\n      editRule,\n      toggleRule,\n      removeRule,\n      saveRule,\n      channelLabel,\n      onMounted,\n      reactive,\n      ref,\n      get fetchAlertRules() {\n        return fetchAlertRules;\n      },\n      get updateAlertRule() {\n        return updateAlertRule;\n      },\n      get deleteAlertRule() {\n        return deleteAlertRule;\n      },\n      get createAlertRule() {\n        return createAlertRule;\n      },\n      get testAlertChannel() {\n        return testAlertChannel;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["onMounted","reactive","ref","fetchAlertRules","updateAlertRule","deleteAlertRule","createAlertRule","testAlertChannel","alertRules","loading","saving","savingRule","ruleDrawerVisible","globalConfig","defaultRetry","retryInterval","schedulerMode","maxConcurrentTasks","idempotentGuards","autoRecover","currentRule","id","name","metric","threshold","channels","subscribers","enabled","loadRules","value","saveGlobalConfig","ping","openRuleDrawer","Object","assign","editRule","rule","toggleRule","removeRule","saveRule","channelLabel","channel","map","EMAIL","DINGTALK","SMS"],"sources":["D:/桌面/项目/分布式任务调度系统/SkyTask/skytask-frontend/src/views/ConfigCenterView.vue"],"sourcesContent":["<template>\n  <div class=\"config-center\">\n    <section class=\"card config-center__section\">\n      <div class=\"section__header\">\n        <h3>全局调度配置</h3>\n        <el-button type=\"primary\" size=\"small\" :loading=\"saving\" @click=\"saveGlobalConfig\">保存</el-button>\n      </div>\n      <el-form :model=\"globalConfig\" label-width=\"160px\" :inline=\"false\">\n        <el-row :gutter=\"24\">\n          <el-col :span=\"12\">\n            <el-form-item label=\"默认重试次数\">\n              <el-input-number v-model=\"globalConfig.defaultRetry\" :min=\"0\" :max=\"10\" />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"重试间隔 (秒)\">\n              <el-input-number v-model=\"globalConfig.retryInterval\" :min=\"5\" :max=\"600\" />\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row :gutter=\"24\">\n          <el-col :span=\"12\">\n            <el-form-item label=\"调度集群模式\">\n              <el-select v-model=\"globalConfig.schedulerMode\">\n                <el-option label=\"自动主备 (Leader 选举)\" value=\"LEADER_ELECTION\" />\n                <el-option label=\"多主 (一致性锁)\" value=\"MULTI_MASTER\" />\n              </el-select>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"最大并发任务数\">\n              <el-input-number v-model=\"globalConfig.maxConcurrentTasks\" :min=\"10\" :max=\"5000\" />\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-form-item label=\"任务幂等保障\">\n          <el-checkbox-group v-model=\"globalConfig.idempotentGuards\">\n            <el-checkbox label=\"数据库状态机\" />\n            <el-checkbox label=\"Redis 幂等键\" />\n            <el-checkbox label=\"执行日志锁\" />\n          </el-checkbox-group>\n        </el-form-item>\n        <el-form-item label=\"执行超时自愈\">\n          <el-switch v-model=\"globalConfig.autoRecover\" />\n          <span class=\"form-tip\">启用后，超时任务自动中断并重新调度</span>\n        </el-form-item>\n      </el-form>\n    </section>\n\n    <section class=\"card config-center__section\">\n      <div class=\"section__header\">\n        <h3>告警策略</h3>\n        <el-button type=\"primary\" size=\"small\" @click=\"openRuleDrawer\">新增规则</el-button>\n      </div>\n      <el-table :data=\"alertRules\" size=\"small\" v-loading=\"loading\">\n        <el-table-column prop=\"name\" label=\"规则名称\" min-width=\"160\" />\n        <el-table-column prop=\"metric\" label=\"监控指标\" width=\"140\" />\n        <el-table-column prop=\"threshold\" label=\"阈值\" width=\"120\" />\n        <el-table-column label=\"告警渠道\" width=\"160\">\n          <template #default=\"{ row }\">\n            <el-tag v-for=\"channel in row.channels\" :key=\"channel\" size=\"small\" effect=\"plain\">\n              {{ channelLabel(channel) }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"启用状态\" width=\"120\">\n          <template #default=\"{ row }\">\n            <el-switch v-model=\"row.enabled\" @change=\"toggleRule(row)\" />\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"140\" fixed=\"right\">\n          <template #default=\"{ row }\">\n            <el-button link size=\"small\" type=\"primary\" @click=\"editRule(row)\">编辑</el-button>\n            <el-popconfirm title=\"确认删除该规则？\" @confirm=\"removeRule(row)\">\n              <template #reference>\n                <el-button link size=\"small\" type=\"danger\">删除</el-button>\n              </template>\n            </el-popconfirm>\n          </template>\n        </el-table-column>\n      </el-table>\n    </section>\n\n    <section class=\"card config-center__section\">\n      <div class=\"section__header\">\n        <h3>环境与租户</h3>\n      </div>\n      <el-row :gutter=\"20\">\n        <el-col :span=\"12\">\n          <el-card shadow=\"hover\">\n            <template #header>\n              <span>环境隔离配置</span>\n            </template>\n            <el-timeline>\n              <el-timeline-item timestamp=\"dev\" type=\"primary\">\n                使用 MySQL skytask_dev，Kafka topic skytask-dev，允许调试。\n              </el-timeline-item>\n              <el-timeline-item timestamp=\"test\" type=\"warning\">\n                使用 MySQL skytask_test，Kafka topic skytask-test，开启审计。\n              </el-timeline-item>\n              <el-timeline-item timestamp=\"prod\" type=\"success\">\n                使用 MySQL skytask_prod，Kafka topic skytask-prod，开启幂等与告警。\n              </el-timeline-item>\n            </el-timeline>\n          </el-card>\n        </el-col>\n        <el-col :span=\"12\">\n          <el-card shadow=\"hover\">\n            <template #header>\n              <span>租户管理策略</span>\n            </template>\n            <ul class=\"tenant-list\">\n              <li><strong>默认租户：</strong>共享任务模板，资源限流 500 QPS。</li>\n              <li><strong>营销团队：</strong>Kafka Topic 独立，执行节点 10 台。</li>\n              <li><strong>风控团队：</strong>开启策略隔离，消息加密。</li>\n            </ul>\n          </el-card>\n        </el-col>\n      </el-row>\n    </section>\n\n    <el-drawer v-model=\"ruleDrawerVisible\" title=\"告警规则\" size=\"30%\">\n      <el-form :model=\"currentRule\" label-width=\"110px\">\n        <el-form-item label=\"规则名称\">\n          <el-input v-model=\"currentRule.name\" />\n        </el-form-item>\n        <el-form-item label=\"监控指标\">\n          <el-select v-model=\"currentRule.metric\">\n            <el-option label=\"失败率\" value=\"FAILURE_RATE\" />\n            <el-option label=\"延迟\" value=\"LATENCY\" />\n            <el-option label=\"积压任务\" value=\"BACKLOG\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"触发阈值\">\n          <el-input-number v-model=\"currentRule.threshold\" :min=\"1\" :max=\"10000\" />\n        </el-form-item>\n        <el-form-item label=\"告警渠道\">\n          <el-checkbox-group v-model=\"currentRule.channels\">\n            <el-checkbox label=\"EMAIL\">邮件</el-checkbox>\n            <el-checkbox label=\"DINGTALK\">钉钉</el-checkbox>\n            <el-checkbox label=\"SMS\">短信</el-checkbox>\n          </el-checkbox-group>\n        </el-form-item>\n        <el-form-item label=\"通知人\">\n          <el-select v-model=\"currentRule.subscribers\" multiple filterable>\n            <el-option label=\"张强\" value=\"zhangqiang@corp.com\" />\n            <el-option label=\"李娜\" value=\"lina@corp.com\" />\n            <el-option label=\"王伟\" value=\"wangwei@corp.com\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"启用状态\">\n          <el-switch v-model=\"currentRule.enabled\" />\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <div class=\"drawer-footer\">\n          <el-button @click=\"ruleDrawerVisible = false\">取消</el-button>\n          <el-button type=\"primary\" :loading=\"savingRule\" @click=\"saveRule\">保存</el-button>\n        </div>\n      </template>\n    </el-drawer>\n  </div>\n</template>\n\n<script setup>\nimport { onMounted, reactive, ref } from 'vue';\nimport {\n  fetchAlertRules,\n  updateAlertRule,\n  deleteAlertRule,\n  createAlertRule,\n  testAlertChannel\n} from '@/api/alerts';\n\nconst alertRules = ref([]);\nconst loading = ref(false);\nconst saving = ref(false);\nconst savingRule = ref(false);\nconst ruleDrawerVisible = ref(false);\n\nconst globalConfig = reactive({\n  defaultRetry: 3,\n  retryInterval: 60,\n  schedulerMode: 'LEADER_ELECTION',\n  maxConcurrentTasks: 2000,\n  idempotentGuards: ['数据库状态机', 'Redis 幂等键'],\n  autoRecover: true\n});\n\nconst currentRule = reactive({\n  id: null,\n  name: '',\n  metric: 'FAILURE_RATE',\n  threshold: 3,\n  channels: ['EMAIL'],\n  subscribers: [],\n  enabled: true\n});\n\nonMounted(async () => {\n  await loadRules();\n});\n\nconst loadRules = async () => {\n  loading.value = true;\n  try {\n    alertRules.value = await fetchAlertRules();\n  } finally {\n    loading.value = false;\n  }\n};\n\nconst saveGlobalConfig = async () => {\n  saving.value = true;\n  try {\n    await testAlertChannel({ ping: true });\n  } finally {\n    saving.value = false;\n  }\n};\n\nconst openRuleDrawer = () => {\n  Object.assign(currentRule, {\n    id: null,\n    name: '',\n    metric: 'FAILURE_RATE',\n    threshold: 3,\n    channels: ['EMAIL'],\n    subscribers: [],\n    enabled: true\n  });\n  ruleDrawerVisible.value = true;\n};\n\nconst editRule = (rule) => {\n  Object.assign(currentRule, rule);\n  ruleDrawerVisible.value = true;\n};\n\nconst toggleRule = async (rule) => {\n  await updateAlertRule(rule.id, { enabled: rule.enabled });\n};\n\nconst removeRule = async (rule) => {\n  await deleteAlertRule(rule.id);\n  await loadRules();\n};\n\nconst saveRule = async () => {\n  savingRule.value = true;\n  try {\n    if (currentRule.id) {\n      await updateAlertRule(currentRule.id, currentRule);\n    } else {\n      await createAlertRule(currentRule);\n    }\n    await loadRules();\n    ruleDrawerVisible.value = false;\n  } finally {\n    savingRule.value = false;\n  }\n};\n\nconst channelLabel = (channel) => {\n  const map = {\n    EMAIL: '邮件',\n    DINGTALK: '钉钉',\n    SMS: '短信'\n  };\n  return map[channel] || channel;\n};\n</script>\n\n<style scoped lang=\"scss\">\n.config-center {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.config-center__section {\n  padding: 20px 24px;\n\n  .section__header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 20px;\n\n    h3 {\n      margin: 0;\n      font-size: 18px;\n      font-weight: 600;\n    }\n  }\n}\n\n.form-tip {\n  margin-left: 12px;\n  font-size: 12px;\n  color: #64748b;\n}\n\n.tenant-list {\n  margin: 0;\n  padding-left: 18px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  font-size: 13px;\n  color: #475569;\n\n  strong {\n    color: #0f172a;\n  }\n}\n\n.drawer-footer {\n  display: flex;\n  justify-content: flex-end;\n  gap: 12px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
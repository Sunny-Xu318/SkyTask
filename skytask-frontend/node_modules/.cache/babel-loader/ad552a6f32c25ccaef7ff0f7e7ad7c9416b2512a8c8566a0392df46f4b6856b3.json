{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createBlock as _createBlock, renderList as _renderList, Fragment as _Fragment, resolveDirective as _resolveDirective, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"dashboard\"\n};\nconst _hoisted_2 = {\n  class: \"dashboard__row\"\n};\nconst _hoisted_3 = {\n  class: \"panel__header\"\n};\nconst _hoisted_4 = {\n  class: \"panel__header-actions\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"panel__error\"\n};\nconst _hoisted_6 = {\n  key: 1\n};\nconst _hoisted_7 = {\n  class: \"nodes-chart-wrapper\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"nodes\"\n};\nconst _hoisted_9 = {\n  class: \"nodes__header\"\n};\nconst _hoisted_10 = {\n  class: \"nodes__metrics\"\n};\nconst _hoisted_11 = {\n  class: \"nodes__metric\"\n};\nconst _hoisted_12 = {\n  class: \"nodes__metric\"\n};\nconst _hoisted_13 = {\n  class: \"nodes__meta\"\n};\nconst _hoisted_14 = {\n  key: 0,\n  class: \"panel__error\"\n};\nconst _hoisted_15 = {\n  class: \"event\"\n};\nconst _hoisted_16 = {\n  class: \"event__title\"\n};\nconst _hoisted_17 = {\n  class: \"event__meta\"\n};\nconst _hoisted_18 = {\n  class: \"dashboard__row\"\n};\nconst _hoisted_19 = {\n  class: \"panel__header\"\n};\nconst _hoisted_20 = {\n  class: \"panel__header-actions\"\n};\nconst _hoisted_21 = {\n  key: 0,\n  class: \"panel__error\"\n};\nconst _hoisted_22 = {\n  key: 1\n};\nconst _hoisted_23 = {\n  class: \"nodes-chart-wrapper\"\n};\nconst _hoisted_24 = {\n  key: 0,\n  class: \"nodes\"\n};\nconst _hoisted_25 = {\n  class: \"nodes__header\"\n};\nconst _hoisted_26 = {\n  class: \"nodes__metrics\"\n};\nconst _hoisted_27 = {\n  class: \"nodes__metric\"\n};\nconst _hoisted_28 = {\n  class: \"nodes__metric\"\n};\nconst _hoisted_29 = {\n  class: \"nodes__meta\"\n};\nconst _hoisted_30 = {\n  key: 0,\n  class: \"panel__error\"\n};\nconst _hoisted_31 = {\n  class: \"event\"\n};\nconst _hoisted_32 = {\n  class: \"event__title\"\n};\nconst _hoisted_33 = {\n  class: \"event__meta\"\n};\nconst _hoisted_34 = {\n  class: \"dashboard__row\"\n};\nconst _hoisted_35 = {\n  class: \"panel__header\"\n};\nconst _hoisted_36 = {\n  class: \"panel__header-actions\"\n};\nconst _hoisted_37 = {\n  key: 0,\n  class: \"panel__error\"\n};\nconst _hoisted_38 = {\n  key: 1\n};\nconst _hoisted_39 = {\n  class: \"nodes-chart-wrapper\"\n};\nconst _hoisted_40 = {\n  key: 0,\n  class: \"nodes\"\n};\nconst _hoisted_41 = {\n  class: \"nodes__header\"\n};\nconst _hoisted_42 = {\n  class: \"nodes__metrics\"\n};\nconst _hoisted_43 = {\n  class: \"nodes__metric\"\n};\nconst _hoisted_44 = {\n  class: \"nodes__metric\"\n};\nconst _hoisted_45 = {\n  class: \"nodes__meta\"\n};\nconst _hoisted_46 = {\n  key: 0,\n  class: \"panel__error\"\n};\nconst _hoisted_47 = {\n  class: \"event\"\n};\nconst _hoisted_48 = {\n  class: \"event__title\"\n};\nconst _hoisted_49 = {\n  class: \"event__meta\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_result = _resolveComponent(\"el-result\");\n  const _component_el_empty = _resolveComponent(\"el-empty\");\n  const _component_el_progress = _resolveComponent(\"el-progress\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_timeline_item = _resolveComponent(\"el-timeline-item\");\n  const _component_el_timeline = _resolveComponent(\"el-timeline\");\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"section\", _hoisted_2, [_withDirectives((_openBlock(), _createBlock(_component_el_card, {\n    shadow: \"hover\",\n    class: \"dashboard__panel\"\n  }, {\n    header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_cache[1] || (_cache[1] = _createElementVNode(\"span\", null, \"执行器节点健康度\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_tag, {\n      type: $setup.nodeHealthTag,\n      size: \"small\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.nodesStatusLabel), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"type\"]), _createVNode(_component_el_button, {\n      type: \"primary\",\n      link: \"\",\n      size: \"small\",\n      onClick: $setup.reloadNodes\n    }, {\n      default: _withCtx(() => [...(_cache[0] || (_cache[0] = [_createTextVNode(\"刷新\", -1 /* CACHED */)]))]),\n      _: 1 /* STABLE */\n    })])])]),\n    default: _withCtx(() => [$setup.nodePanelError ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createVNode(_component_el_result, {\n      status: $setup.nodePanelError.forbidden ? 'warning' : 'error',\n      title: $setup.nodePanelError.forbidden ? '无访问权限' : '节点数据加载失败',\n      \"sub-title\": $setup.nodePanelError.message\n    }, {\n      extra: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        size: \"small\",\n        onClick: $setup.reloadNodes\n      }, {\n        default: _withCtx(() => [...(_cache[2] || (_cache[2] = [_createTextVNode(\"重试\", -1 /* CACHED */)]))]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"status\", \"title\", \"sub-title\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [$setup.nodeChartHasData ? (_openBlock(), _createBlock($setup[\"BaseChart\"], {\n      key: 0,\n      options: $setup.nodeChartOptions,\n      class: \"nodes-chart\"\n    }, null, 8 /* PROPS */, [\"options\"])) : (_openBlock(), _createBlock(_component_el_empty, {\n      key: 1,\n      description: \"暂无节点资源数据\"\n    }))]), $setup.nodeList.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.nodeList, node => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: node.id,\n        class: \"nodes__item\"\n      }, [_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"span\", null, _toDisplayString(node.name), 1 /* TEXT */), _createVNode(_component_el_tag, {\n        type: node.status === 'ONLINE' ? 'success' : 'danger',\n        size: \"small\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(node.status === 'ONLINE' ? '在线' : '离线'), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])]), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_cache[3] || (_cache[3] = _createElementVNode(\"span\", null, \"CPU\", -1 /* CACHED */)), _createVNode(_component_el_progress, {\n        percentage: node.cpu,\n        status: node.cpu > 80 ? 'exception' : 'success'\n      }, null, 8 /* PROPS */, [\"percentage\", \"status\"])]), _createElementVNode(\"div\", _hoisted_12, [_cache[4] || (_cache[4] = _createElementVNode(\"span\", null, \"内存\", -1 /* CACHED */)), _createVNode(_component_el_progress, {\n        percentage: node.memory,\n        status: node.memory > 80 ? 'exception' : 'warning'\n      }, null, 8 /* PROPS */, [\"percentage\", \"status\"])]), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"span\", null, \"运行中 \" + _toDisplayString(node.runningTasks), 1 /* TEXT */), _createElementVNode(\"span\", null, \"延迟 \" + _toDisplayString(node.delay) + \"ms\", 1 /* TEXT */)])])]);\n    }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createBlock(_component_el_empty, {\n      key: 1,\n      description: \"暂无执行节点\"\n    }))]))]),\n    _: 1 /* STABLE */\n  })), [[_directive_loading, $setup.nodeMetricsLoading || $setup.nodesLoading]]), _withDirectives((_openBlock(), _createBlock(_component_el_card, {\n    shadow: \"hover\",\n    class: \"dashboard__panel\"\n  }, {\n    header: _withCtx(() => [...(_cache[5] || (_cache[5] = [_createElementVNode(\"div\", {\n      class: \"panel__header\"\n    }, [_createElementVNode(\"span\", null, \"最新调度事件\")], -1 /* CACHED */)]))]),\n    default: _withCtx(() => [$setup.metricError ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [_createVNode(_component_el_result, {\n      status: $setup.metricError.forbidden ? 'warning' : 'error',\n      title: $setup.metricError.forbidden ? '无访问权限' : '统计加载失败',\n      \"sub-title\": $setup.metricError.message\n    }, {\n      extra: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        size: \"small\",\n        onClick: $setup.reloadMetrics\n      }, {\n        default: _withCtx(() => [...(_cache[6] || (_cache[6] = [_createTextVNode(\"重试\", -1 /* CACHED */)]))]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"status\", \"title\", \"sub-title\"])])) : $setup.recentEventsHasData ? (_openBlock(), _createBlock(_component_el_timeline, {\n      key: 1\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.recentEvents, event => {\n        return _openBlock(), _createBlock(_component_el_timeline_item, {\n          key: event.id,\n          timestamp: event.time,\n          type: event.type\n        }, {\n          default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"span\", null, _toDisplayString(event.title), 1 /* TEXT */), _createVNode(_component_el_tag, {\n            type: event.tagType,\n            size: \"small\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(event.tagLabel), 1 /* TEXT */)]),\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])]), _createElementVNode(\"div\", _hoisted_17, _toDisplayString(event.desc), 1 /* TEXT */)])]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"timestamp\", \"type\"]);\n      }), 128 /* KEYED_FRAGMENT */))]),\n      _: 1 /* STABLE */\n    })) : (_openBlock(), _createBlock(_component_el_empty, {\n      key: 2,\n      description: \"暂无调度事件\"\n    }))]),\n    _: 1 /* STABLE */\n  })), [[_directive_loading, $setup.loadingMetrics]])]), _createElementVNode(\"section\", _hoisted_18, [_withDirectives((_openBlock(), _createBlock(_component_el_card, {\n    shadow: \"hover\",\n    class: \"dashboard__panel\"\n  }, {\n    header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_19, [_cache[8] || (_cache[8] = _createElementVNode(\"span\", null, \"执行器节点健康度\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_20, [_createVNode(_component_el_tag, {\n      type: $setup.nodeHealthTag,\n      size: \"small\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.nodesStatusLabel), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"type\"]), _createVNode(_component_el_button, {\n      type: \"primary\",\n      link: \"\",\n      size: \"small\",\n      onClick: $setup.reloadNodes\n    }, {\n      default: _withCtx(() => [...(_cache[7] || (_cache[7] = [_createTextVNode(\"刷新\", -1 /* CACHED */)]))]),\n      _: 1 /* STABLE */\n    })])])]),\n    default: _withCtx(() => [$setup.nodePanelError ? (_openBlock(), _createElementBlock(\"div\", _hoisted_21, [_createVNode(_component_el_result, {\n      status: $setup.nodePanelError.forbidden ? 'warning' : 'error',\n      title: $setup.nodePanelError.forbidden ? '无访问权限' : '节点数据加载失败',\n      \"sub-title\": $setup.nodePanelError.message\n    }, {\n      extra: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        size: \"small\",\n        onClick: $setup.reloadNodes\n      }, {\n        default: _withCtx(() => [...(_cache[9] || (_cache[9] = [_createTextVNode(\"重试\", -1 /* CACHED */)]))]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"status\", \"title\", \"sub-title\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_22, [_createElementVNode(\"div\", _hoisted_23, [$setup.nodeChartHasData ? (_openBlock(), _createBlock($setup[\"BaseChart\"], {\n      key: 0,\n      options: $setup.nodeChartOptions,\n      class: \"nodes-chart\"\n    }, null, 8 /* PROPS */, [\"options\"])) : (_openBlock(), _createBlock(_component_el_empty, {\n      key: 1,\n      description: \"暂无节点资源数据\"\n    }))]), $setup.nodeList.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_24, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.nodeList, node => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: node.id,\n        class: \"nodes__item\"\n      }, [_createElementVNode(\"div\", _hoisted_25, [_createElementVNode(\"span\", null, _toDisplayString(node.name), 1 /* TEXT */), _createVNode(_component_el_tag, {\n        type: node.status === 'ONLINE' ? 'success' : 'danger',\n        size: \"small\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(node.status === 'ONLINE' ? '在线' : '离线'), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])]), _createElementVNode(\"div\", _hoisted_26, [_createElementVNode(\"div\", _hoisted_27, [_cache[10] || (_cache[10] = _createElementVNode(\"span\", null, \"CPU\", -1 /* CACHED */)), _createVNode(_component_el_progress, {\n        percentage: node.cpu,\n        status: node.cpu > 80 ? 'exception' : 'success'\n      }, null, 8 /* PROPS */, [\"percentage\", \"status\"])]), _createElementVNode(\"div\", _hoisted_28, [_cache[11] || (_cache[11] = _createElementVNode(\"span\", null, \"内存\", -1 /* CACHED */)), _createVNode(_component_el_progress, {\n        percentage: node.memory,\n        status: node.memory > 80 ? 'exception' : 'warning'\n      }, null, 8 /* PROPS */, [\"percentage\", \"status\"])]), _createElementVNode(\"div\", _hoisted_29, [_createElementVNode(\"span\", null, \"运行中 \" + _toDisplayString(node.runningTasks), 1 /* TEXT */), _createElementVNode(\"span\", null, \"延迟 \" + _toDisplayString(node.delay) + \"ms\", 1 /* TEXT */)])])]);\n    }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createBlock(_component_el_empty, {\n      key: 1,\n      description: \"暂无执行节点\"\n    }))]))]),\n    _: 1 /* STABLE */\n  })), [[_directive_loading, $setup.nodeMetricsLoading || $setup.nodesLoading]]), _withDirectives((_openBlock(), _createBlock(_component_el_card, {\n    shadow: \"hover\",\n    class: \"dashboard__panel\"\n  }, {\n    header: _withCtx(() => [...(_cache[12] || (_cache[12] = [_createElementVNode(\"div\", {\n      class: \"panel__header\"\n    }, [_createElementVNode(\"span\", null, \"最新调度事件\")], -1 /* CACHED */)]))]),\n    default: _withCtx(() => [$setup.metricError ? (_openBlock(), _createElementBlock(\"div\", _hoisted_30, [_createVNode(_component_el_result, {\n      status: $setup.metricError.forbidden ? 'warning' : 'error',\n      title: $setup.metricError.forbidden ? '无访问权限' : '统计加载失败',\n      \"sub-title\": $setup.metricError.message\n    }, {\n      extra: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        size: \"small\",\n        onClick: $setup.reloadMetrics\n      }, {\n        default: _withCtx(() => [...(_cache[13] || (_cache[13] = [_createTextVNode(\"重试\", -1 /* CACHED */)]))]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"status\", \"title\", \"sub-title\"])])) : $setup.recentEventsHasData ? (_openBlock(), _createBlock(_component_el_timeline, {\n      key: 1\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.recentEvents, event => {\n        return _openBlock(), _createBlock(_component_el_timeline_item, {\n          key: event.id,\n          timestamp: event.time,\n          type: event.type\n        }, {\n          default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_31, [_createElementVNode(\"div\", _hoisted_32, [_createElementVNode(\"span\", null, _toDisplayString(event.title), 1 /* TEXT */), _createVNode(_component_el_tag, {\n            type: event.tagType,\n            size: \"small\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(event.tagLabel), 1 /* TEXT */)]),\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])]), _createElementVNode(\"div\", _hoisted_33, _toDisplayString(event.desc), 1 /* TEXT */)])]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"timestamp\", \"type\"]);\n      }), 128 /* KEYED_FRAGMENT */))]),\n      _: 1 /* STABLE */\n    })) : (_openBlock(), _createBlock(_component_el_empty, {\n      key: 2,\n      description: \"暂无调度事件\"\n    }))]),\n    _: 1 /* STABLE */\n  })), [[_directive_loading, $setup.loadingMetrics]])]), _createElementVNode(\"section\", _hoisted_34, [_withDirectives((_openBlock(), _createBlock(_component_el_card, {\n    shadow: \"hover\",\n    class: \"dashboard__panel\"\n  }, {\n    header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_35, [_cache[15] || (_cache[15] = _createElementVNode(\"span\", null, \"执行器节点健康度\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_36, [_createVNode(_component_el_tag, {\n      type: $setup.nodeHealthTag,\n      size: \"small\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.nodesStatusLabel), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"type\"]), _createVNode(_component_el_button, {\n      type: \"primary\",\n      link: \"\",\n      size: \"small\",\n      onClick: $setup.reloadNodes\n    }, {\n      default: _withCtx(() => [...(_cache[14] || (_cache[14] = [_createTextVNode(\"刷新\", -1 /* CACHED */)]))]),\n      _: 1 /* STABLE */\n    })])])]),\n    default: _withCtx(() => [$setup.nodePanelError ? (_openBlock(), _createElementBlock(\"div\", _hoisted_37, [_createVNode(_component_el_result, {\n      status: $setup.nodePanelError.forbidden ? 'warning' : 'error',\n      title: $setup.nodePanelError.forbidden ? '无访问权限' : '节点数据加载失败',\n      \"sub-title\": $setup.nodePanelError.message\n    }, {\n      extra: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        size: \"small\",\n        onClick: $setup.reloadNodes\n      }, {\n        default: _withCtx(() => [...(_cache[16] || (_cache[16] = [_createTextVNode(\"重试\", -1 /* CACHED */)]))]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"status\", \"title\", \"sub-title\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_38, [_createElementVNode(\"div\", _hoisted_39, [$setup.nodeChartHasData ? (_openBlock(), _createBlock($setup[\"BaseChart\"], {\n      key: 0,\n      options: $setup.nodeChartOptions,\n      class: \"nodes-chart\"\n    }, null, 8 /* PROPS */, [\"options\"])) : (_openBlock(), _createBlock(_component_el_empty, {\n      key: 1,\n      description: \"暂无节点资源数据\"\n    }))]), $setup.nodeList.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_40, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.nodeList, node => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: node.id,\n        class: \"nodes__item\"\n      }, [_createElementVNode(\"div\", _hoisted_41, [_createElementVNode(\"span\", null, _toDisplayString(node.name), 1 /* TEXT */), _createVNode(_component_el_tag, {\n        type: node.status === 'ONLINE' ? 'success' : 'danger',\n        size: \"small\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(node.status === 'ONLINE' ? '在线' : '离线'), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])]), _createElementVNode(\"div\", _hoisted_42, [_createElementVNode(\"div\", _hoisted_43, [_cache[17] || (_cache[17] = _createElementVNode(\"span\", null, \"CPU\", -1 /* CACHED */)), _createVNode(_component_el_progress, {\n        percentage: node.cpu,\n        status: node.cpu > 80 ? 'exception' : 'success'\n      }, null, 8 /* PROPS */, [\"percentage\", \"status\"])]), _createElementVNode(\"div\", _hoisted_44, [_cache[18] || (_cache[18] = _createElementVNode(\"span\", null, \"内存\", -1 /* CACHED */)), _createVNode(_component_el_progress, {\n        percentage: node.memory,\n        status: node.memory > 80 ? 'exception' : 'warning'\n      }, null, 8 /* PROPS */, [\"percentage\", \"status\"])]), _createElementVNode(\"div\", _hoisted_45, [_createElementVNode(\"span\", null, \"运行中 \" + _toDisplayString(node.runningTasks), 1 /* TEXT */), _createElementVNode(\"span\", null, \"延迟 \" + _toDisplayString(node.delay) + \"ms\", 1 /* TEXT */)])])]);\n    }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createBlock(_component_el_empty, {\n      key: 1,\n      description: \"暂无执行节点\"\n    }))]))]),\n    _: 1 /* STABLE */\n  })), [[_directive_loading, $setup.nodeMetricsLoading || $setup.nodesLoading]]), _withDirectives((_openBlock(), _createBlock(_component_el_card, {\n    shadow: \"hover\",\n    class: \"dashboard__panel\"\n  }, {\n    header: _withCtx(() => [...(_cache[19] || (_cache[19] = [_createElementVNode(\"div\", {\n      class: \"panel__header\"\n    }, [_createElementVNode(\"span\", null, \"最新调度事件\")], -1 /* CACHED */)]))]),\n    default: _withCtx(() => [$setup.metricError ? (_openBlock(), _createElementBlock(\"div\", _hoisted_46, [_createVNode(_component_el_result, {\n      status: $setup.metricError.forbidden ? 'warning' : 'error',\n      title: $setup.metricError.forbidden ? '无访问权限' : '统计加载失败',\n      \"sub-title\": $setup.metricError.message\n    }, {\n      extra: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        size: \"small\",\n        onClick: $setup.reloadMetrics\n      }, {\n        default: _withCtx(() => [...(_cache[20] || (_cache[20] = [_createTextVNode(\"重试\", -1 /* CACHED */)]))]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"status\", \"title\", \"sub-title\"])])) : $setup.recentEventsHasData ? (_openBlock(), _createBlock(_component_el_timeline, {\n      key: 1\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.recentEvents, event => {\n        return _openBlock(), _createBlock(_component_el_timeline_item, {\n          key: event.id,\n          timestamp: event.time,\n          type: event.type\n        }, {\n          default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_47, [_createElementVNode(\"div\", _hoisted_48, [_createElementVNode(\"span\", null, _toDisplayString(event.title), 1 /* TEXT */), _createVNode(_component_el_tag, {\n            type: event.tagType,\n            size: \"small\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(event.tagLabel), 1 /* TEXT */)]),\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])]), _createElementVNode(\"div\", _hoisted_49, _toDisplayString(event.desc), 1 /* TEXT */)])]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"timestamp\", \"type\"]);\n      }), 128 /* KEYED_FRAGMENT */))]),\n      _: 1 /* STABLE */\n    })) : (_openBlock(), _createBlock(_component_el_empty, {\n      key: 2,\n      description: \"暂无调度事件\"\n    }))]),\n    _: 1 /* STABLE */\n  })), [[_directive_loading, $setup.loadingMetrics]])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createBlock","_component_el_card","shadow","header","_withCtx","_hoisted_3","_hoisted_4","_createVNode","_component_el_tag","type","$setup","nodeHealthTag","size","nodesStatusLabel","_component_el_button","link","onClick","reloadNodes","_cache","nodePanelError","_hoisted_5","_component_el_result","status","forbidden","title","message","extra","_hoisted_6","_hoisted_7","nodeChartHasData","options","nodeChartOptions","_component_el_empty","description","nodeList","length","_hoisted_8","_Fragment","_renderList","node","key","id","_hoisted_9","_toDisplayString","name","_hoisted_10","_hoisted_11","_component_el_progress","percentage","cpu","_hoisted_12","memory","_hoisted_13","runningTasks","delay","nodeMetricsLoading","nodesLoading","metricError","_hoisted_14","reloadMetrics","recentEventsHasData","_component_el_timeline","recentEvents","event","_component_el_timeline_item","timestamp","time","_hoisted_15","_hoisted_16","tagType","tagLabel","_hoisted_17","desc","loadingMetrics","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49"],"sources":["D:\\桌面\\项目\\分布式任务调度系统\\SkyTask\\skytask-frontend\\src\\views\\DashboardView.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard\">\n            <section class=\"dashboard__row\">\n      <el-card\n        shadow=\"hover\"\n        class=\"dashboard__panel\"\n        v-loading=\"nodeMetricsLoading || nodesLoading\"\n      >\n        <template #header>\n          <div class=\"panel__header\">\n            <span>执行器节点健康度</span>\n            <div class=\"panel__header-actions\">\n              <el-tag :type=\"nodeHealthTag\" size=\"small\">{{ nodesStatusLabel }}</el-tag>\n              <el-button type=\"primary\" link size=\"small\" @click=\"reloadNodes\">刷新</el-button>\n            </div>\n          </div>\n        </template>\n        <div v-if=\"nodePanelError\" class=\"panel__error\">\n          <el-result\n            :status=\"nodePanelError.forbidden ? 'warning' : 'error'\"\n            :title=\"nodePanelError.forbidden ? '无访问权限' : '节点数据加载失败'\"\n            :sub-title=\"nodePanelError.message\"\n          >\n            <template #extra>\n              <el-button type=\"primary\" size=\"small\" @click=\"reloadNodes\">重试</el-button>\n            </template>\n          </el-result>\n        </div>\n        <div v-else>\n          <div class=\"nodes-chart-wrapper\">\n            <BaseChart\n              v-if=\"nodeChartHasData\"\n              :options=\"nodeChartOptions\"\n              class=\"nodes-chart\"\n            />\n            <el-empty v-else description=\"暂无节点资源数据\" />\n          </div>\n          <div v-if=\"nodeList.length\" class=\"nodes\">\n            <div v-for=\"node in nodeList\" :key=\"node.id\" class=\"nodes__item\">\n              <div class=\"nodes__header\">\n                <span>{{ node.name }}</span>\n                <el-tag :type=\"node.status === 'ONLINE' ? 'success' : 'danger'\" size=\"small\">\n                  {{ node.status === 'ONLINE' ? '在线' : '离线' }}\n                </el-tag>\n              </div>\n              <div class=\"nodes__metrics\">\n                <div class=\"nodes__metric\">\n                  <span>CPU</span>\n                  <el-progress :percentage=\"node.cpu\" :status=\"node.cpu > 80 ? 'exception' : 'success'\" />\n                </div>\n                <div class=\"nodes__metric\">\n                  <span>内存</span>\n                  <el-progress\n                    :percentage=\"node.memory\"\n                    :status=\"node.memory > 80 ? 'exception' : 'warning'\"\n                  />\n                </div>\n                <div class=\"nodes__meta\">\n                  <span>运行中 {{ node.runningTasks }}</span>\n                  <span>延迟 {{ node.delay }}ms</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <el-empty v-else description=\"暂无执行节点\" />\n        </div>\n      </el-card>\n\n      <el-card shadow=\"hover\" class=\"dashboard__panel\" v-loading=\"loadingMetrics\">\n        <template #header>\n          <div class=\"panel__header\">\n            <span>最新调度事件</span>\n          </div>\n        </template>\n        <div v-if=\"metricError\" class=\"panel__error\">\n          <el-result\n            :status=\"metricError.forbidden ? 'warning' : 'error'\"\n            :title=\"metricError.forbidden ? '无访问权限' : '统计加载失败'\"\n            :sub-title=\"metricError.message\"\n          >\n            <template #extra>\n              <el-button type=\"primary\" size=\"small\" @click=\"reloadMetrics\">重试</el-button>\n            </template>\n          </el-result>\n        </div>\n        <el-timeline v-else-if=\"recentEventsHasData\">\n          <el-timeline-item\n            v-for=\"event in recentEvents\"\n            :key=\"event.id\"\n            :timestamp=\"event.time\"\n            :type=\"event.type\"\n          >\n            <div class=\"event\">\n              <div class=\"event__title\">\n                <span>{{ event.title }}</span>\n                <el-tag :type=\"event.tagType\" size=\"small\">{{ event.tagLabel }}</el-tag>\n              </div>\n              <div class=\"event__meta\">{{ event.desc }}</div>\n            </div>\n          </el-timeline-item>\n        </el-timeline>\n        <el-empty v-else description=\"暂无调度事件\" />\n      </el-card>\n    </section>\n\n            <section class=\"dashboard__row\">\n      <el-card\n        shadow=\"hover\"\n        class=\"dashboard__panel\"\n        v-loading=\"nodeMetricsLoading || nodesLoading\"\n      >\n        <template #header>\n          <div class=\"panel__header\">\n            <span>执行器节点健康度</span>\n            <div class=\"panel__header-actions\">\n              <el-tag :type=\"nodeHealthTag\" size=\"small\">{{ nodesStatusLabel }}</el-tag>\n              <el-button type=\"primary\" link size=\"small\" @click=\"reloadNodes\">刷新</el-button>\n            </div>\n          </div>\n        </template>\n        <div v-if=\"nodePanelError\" class=\"panel__error\">\n          <el-result\n            :status=\"nodePanelError.forbidden ? 'warning' : 'error'\"\n            :title=\"nodePanelError.forbidden ? '无访问权限' : '节点数据加载失败'\"\n            :sub-title=\"nodePanelError.message\"\n          >\n            <template #extra>\n              <el-button type=\"primary\" size=\"small\" @click=\"reloadNodes\">重试</el-button>\n            </template>\n          </el-result>\n        </div>\n        <div v-else>\n          <div class=\"nodes-chart-wrapper\">\n            <BaseChart\n              v-if=\"nodeChartHasData\"\n              :options=\"nodeChartOptions\"\n              class=\"nodes-chart\"\n            />\n            <el-empty v-else description=\"暂无节点资源数据\" />\n          </div>\n          <div v-if=\"nodeList.length\" class=\"nodes\">\n            <div v-for=\"node in nodeList\" :key=\"node.id\" class=\"nodes__item\">\n              <div class=\"nodes__header\">\n                <span>{{ node.name }}</span>\n                <el-tag :type=\"node.status === 'ONLINE' ? 'success' : 'danger'\" size=\"small\">\n                  {{ node.status === 'ONLINE' ? '在线' : '离线' }}\n                </el-tag>\n              </div>\n              <div class=\"nodes__metrics\">\n                <div class=\"nodes__metric\">\n                  <span>CPU</span>\n                  <el-progress :percentage=\"node.cpu\" :status=\"node.cpu > 80 ? 'exception' : 'success'\" />\n                </div>\n                <div class=\"nodes__metric\">\n                  <span>内存</span>\n                  <el-progress\n                    :percentage=\"node.memory\"\n                    :status=\"node.memory > 80 ? 'exception' : 'warning'\"\n                  />\n                </div>\n                <div class=\"nodes__meta\">\n                  <span>运行中 {{ node.runningTasks }}</span>\n                  <span>延迟 {{ node.delay }}ms</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <el-empty v-else description=\"暂无执行节点\" />\n        </div>\n      </el-card>\n\n      <el-card shadow=\"hover\" class=\"dashboard__panel\" v-loading=\"loadingMetrics\">\n        <template #header>\n          <div class=\"panel__header\">\n            <span>最新调度事件</span>\n          </div>\n        </template>\n        <div v-if=\"metricError\" class=\"panel__error\">\n          <el-result\n            :status=\"metricError.forbidden ? 'warning' : 'error'\"\n            :title=\"metricError.forbidden ? '无访问权限' : '统计加载失败'\"\n            :sub-title=\"metricError.message\"\n          >\n            <template #extra>\n              <el-button type=\"primary\" size=\"small\" @click=\"reloadMetrics\">重试</el-button>\n            </template>\n          </el-result>\n        </div>\n        <el-timeline v-else-if=\"recentEventsHasData\">\n          <el-timeline-item\n            v-for=\"event in recentEvents\"\n            :key=\"event.id\"\n            :timestamp=\"event.time\"\n            :type=\"event.type\"\n          >\n            <div class=\"event\">\n              <div class=\"event__title\">\n                <span>{{ event.title }}</span>\n                <el-tag :type=\"event.tagType\" size=\"small\">{{ event.tagLabel }}</el-tag>\n              </div>\n              <div class=\"event__meta\">{{ event.desc }}</div>\n            </div>\n          </el-timeline-item>\n        </el-timeline>\n        <el-empty v-else description=\"暂无调度事件\" />\n      </el-card>\n    </section>\n\n            <section class=\"dashboard__row\">\n      <el-card\n        shadow=\"hover\"\n        class=\"dashboard__panel\"\n        v-loading=\"nodeMetricsLoading || nodesLoading\"\n      >\n        <template #header>\n          <div class=\"panel__header\">\n            <span>执行器节点健康度</span>\n            <div class=\"panel__header-actions\">\n              <el-tag :type=\"nodeHealthTag\" size=\"small\">{{ nodesStatusLabel }}</el-tag>\n              <el-button type=\"primary\" link size=\"small\" @click=\"reloadNodes\">刷新</el-button>\n            </div>\n          </div>\n        </template>\n        <div v-if=\"nodePanelError\" class=\"panel__error\">\n          <el-result\n            :status=\"nodePanelError.forbidden ? 'warning' : 'error'\"\n            :title=\"nodePanelError.forbidden ? '无访问权限' : '节点数据加载失败'\"\n            :sub-title=\"nodePanelError.message\"\n          >\n            <template #extra>\n              <el-button type=\"primary\" size=\"small\" @click=\"reloadNodes\">重试</el-button>\n            </template>\n          </el-result>\n        </div>\n        <div v-else>\n          <div class=\"nodes-chart-wrapper\">\n            <BaseChart\n              v-if=\"nodeChartHasData\"\n              :options=\"nodeChartOptions\"\n              class=\"nodes-chart\"\n            />\n            <el-empty v-else description=\"暂无节点资源数据\" />\n          </div>\n          <div v-if=\"nodeList.length\" class=\"nodes\">\n            <div v-for=\"node in nodeList\" :key=\"node.id\" class=\"nodes__item\">\n              <div class=\"nodes__header\">\n                <span>{{ node.name }}</span>\n                <el-tag :type=\"node.status === 'ONLINE' ? 'success' : 'danger'\" size=\"small\">\n                  {{ node.status === 'ONLINE' ? '在线' : '离线' }}\n                </el-tag>\n              </div>\n              <div class=\"nodes__metrics\">\n                <div class=\"nodes__metric\">\n                  <span>CPU</span>\n                  <el-progress :percentage=\"node.cpu\" :status=\"node.cpu > 80 ? 'exception' : 'success'\" />\n                </div>\n                <div class=\"nodes__metric\">\n                  <span>内存</span>\n                  <el-progress\n                    :percentage=\"node.memory\"\n                    :status=\"node.memory > 80 ? 'exception' : 'warning'\"\n                  />\n                </div>\n                <div class=\"nodes__meta\">\n                  <span>运行中 {{ node.runningTasks }}</span>\n                  <span>延迟 {{ node.delay }}ms</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <el-empty v-else description=\"暂无执行节点\" />\n        </div>\n      </el-card>\n\n      <el-card shadow=\"hover\" class=\"dashboard__panel\" v-loading=\"loadingMetrics\">\n        <template #header>\n          <div class=\"panel__header\">\n            <span>最新调度事件</span>\n          </div>\n        </template>\n        <div v-if=\"metricError\" class=\"panel__error\">\n          <el-result\n            :status=\"metricError.forbidden ? 'warning' : 'error'\"\n            :title=\"metricError.forbidden ? '无访问权限' : '统计加载失败'\"\n            :sub-title=\"metricError.message\"\n          >\n            <template #extra>\n              <el-button type=\"primary\" size=\"small\" @click=\"reloadMetrics\">重试</el-button>\n            </template>\n          </el-result>\n        </div>\n        <el-timeline v-else-if=\"recentEventsHasData\">\n          <el-timeline-item\n            v-for=\"event in recentEvents\"\n            :key=\"event.id\"\n            :timestamp=\"event.time\"\n            :type=\"event.type\"\n          >\n            <div class=\"event\">\n              <div class=\"event__title\">\n                <span>{{ event.title }}</span>\n                <el-tag :type=\"event.tagType\" size=\"small\">{{ event.tagLabel }}</el-tag>\n              </div>\n              <div class=\"event__meta\">{{ event.desc }}</div>\n            </div>\n          </el-timeline-item>\n        </el-timeline>\n        <el-empty v-else description=\"暂无调度事件\" />\n      </el-card>\n    </section>\n  </div>\n</template>\n\n<script setup>\nimport { computed, onMounted, ref, watch } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport { useStore } from \"vuex\";\nimport { ElMessage } from \"element-plus\";\nimport { CaretBottom, CaretTop } from \"@element-plus/icons-vue\";\nimport BaseChart from \"../components/charts/BaseChart.vue\";\n\nconst router = useRouter();\nconst store = useStore();\n\nconst metricRange = ref(\"24h\");\nconst loadingMetrics = ref(false);\nconst metricError = ref(null);\nconst nodeMetricsLoading = ref(false);\nconst nodeMetricsError = ref(null);\nconst nodeListError = ref(null);\n\nconst parseError = (error) => error?.response?.data?.message || error?.message || \"请求失败\";\nconst isForbidden = (error) => Number(error?.response?.status) === 403;\n\nconst loadTaskMetrics = async (params = {}) => {\n  loadingMetrics.value = true;\n  try {\n    await store.dispatch(\"tasks/loadMetrics\", params);\n    metricError.value = null;\n  } catch (error) {\n    const forbidden = isForbidden(error);\n    metricError.value = {\n      message: forbidden ? \"当前账号无权限查看任务统计\" : parseError(error),\n      forbidden\n    };\n    ElMessage[forbidden ? \"warning\" : \"error\"](metricError.value.message);\n  } finally {\n    loadingMetrics.value = false;\n  }\n};\n\nconst loadNodeMetricsData = async () => {\n  nodeMetricsLoading.value = true;\n  try {\n    await store.dispatch(\"nodes/loadNodeMetrics\");\n    nodeMetricsError.value = null;\n  } catch (error) {\n    const forbidden = isForbidden(error);\n    nodeMetricsError.value = {\n      message: forbidden ? \"当前账号无权限查看节点指标\" : parseError(error),\n      forbidden\n    };\n    ElMessage[forbidden ? \"warning\" : \"error\"](nodeMetricsError.value.message);\n  } finally {\n    nodeMetricsLoading.value = false;\n  }\n};\n\nconst loadNodesData = async () => {\n  try {\n    await store.dispatch(\"nodes/loadNodes\");\n    nodeListError.value = null;\n  } catch (error) {\n    const forbidden = isForbidden(error);\n    nodeListError.value = {\n      message: forbidden ? \"当前账号无权限查看节点列表\" : parseError(error),\n      forbidden\n    };\n    ElMessage[forbidden ? \"warning\" : \"error\"](nodeListError.value.message);\n  }\n};\n\nconst reloadMetrics = () => loadTaskMetrics({ range: metricRange.value });\nconst reloadNodes = () => Promise.all([loadNodeMetricsData(), loadNodesData()]);\n\nonMounted(async () => {\n  await Promise.all([\n    loadTaskMetrics({ range: metricRange.value }),\n    loadNodeMetricsData(),\n    loadNodesData()\n  ]);\n});\n\nwatch(metricRange, (range) => {\n  loadTaskMetrics({ range });\n});\n\nconst metrics = computed(() => store.getters[\"tasks/taskMetrics\"] || {});\nconst nodeMetrics = computed(() => store.getters[\"nodes/nodeMetrics\"] || {});\nconst nodeList = computed(() => store.getters[\"nodes/nodeList\"] || []);\nconst nodesLoading = computed(() => store.getters[\"nodes/nodesLoading\"]);\n\nconst normalizedTrend = computed(() =>\n  (metrics.value.trend || [])\n    .map((item) => ({\n      time: item.time ?? item.timestamp ?? \"\",\n      successRate: Number(item.successRate ?? item.success_rate ?? 0),\n      failedRate: Number(item.failedRate ?? item.failed_rate ?? 0)\n    }))\n    .filter((item) => item.time)\n);\n\nconst trendHasData = computed(() => normalizedTrend.value.length > 0);\n\nconst trendChartOptions = computed(() => {\n  if (!trendHasData.value) {\n    return {};\n  }\n  const categories = normalizedTrend.value.map((item) => item.time);\n  const successSeries = normalizedTrend.value.map((item) => Number(item.successRate.toFixed(2)));\n  const failedSeries = normalizedTrend.value.map((item) => Number(item.failedRate.toFixed(2)));\n  return {\n    color: [\"#22c55e\", \"#ef4444\"],\n    tooltip: {\n      trigger: \"axis\",\n      formatter: (params) =>\n        params.map((p) => `${p.marker}${p.seriesName}: ${Number(p.value).toFixed(2)}%`).join(\"<br/>\")\n    },\n    legend: {\n      data: [\"成功率\", \"失败率\"]\n    },\n    grid: { left: 40, right: 24, top: 30, bottom: 40 },\n    xAxis: {\n      type: \"category\",\n      boundaryGap: false,\n      data: categories\n    },\n    yAxis: {\n      type: \"value\",\n      min: 0,\n      max: 100,\n      axisLabel: { formatter: \"{value}%\" }\n    },\n    series: [\n      {\n        name: \"成功率\",\n        type: \"line\",\n        smooth: true,\n        areaStyle: { opacity: 0.12 },\n        data: successSeries\n      },\n      {\n        name: \"失败率\",\n        type: \"line\",\n        smooth: true,\n        areaStyle: { opacity: 0.08 },\n        data: failedSeries\n      }\n    ]\n  };\n});\n\nconst nodeChartHasData = computed(() => nodeList.value.length > 0);\n\nconst nodeChartOptions = computed(() => {\n  if (!nodeChartHasData.value) {\n    return {};\n  }\n  const names = nodeList.value.map((node) => node.name || node.id);\n  return {\n    color: [\"#38bdf8\", \"#f97316\"],\n    tooltip: { trigger: \"axis\" },\n    legend: { data: [\"CPU\", \"内存\"] },\n    grid: { left: 40, right: 24, top: 30, bottom: 50 },\n    xAxis: { type: \"category\", data: names },\n    yAxis: {\n      type: \"value\",\n      min: 0,\n      max: 100,\n      axisLabel: { formatter: \"{value}%\" }\n    },\n    series: [\n      {\n        name: \"CPU\",\n        type: \"bar\",\n        barMaxWidth: 28,\n        data: nodeList.value.map((node) => Number(node.cpu ?? 0))\n      },\n      {\n        name: \"内存\",\n        type: \"bar\",\n        barMaxWidth: 28,\n        data: nodeList.value.map((node) => Number(node.memory ?? 0))\n      }\n    ]\n  };\n});\n\nconst successTrendDelta = computed(() => {\n  if (!trendHasData.value || normalizedTrend.value.length < 2) {\n    return 0;\n  }\n  const values = normalizedTrend.value.map((item) => item.successRate);\n  return Number((values[values.length - 1] - values[0]).toFixed(1));\n});\n\nconst failureTrendDelta = computed(() => {\n  if (!trendHasData.value || normalizedTrend.value.length < 2) {\n    return 0;\n  }\n  const values = normalizedTrend.value.map((item) => item.failedRate);\n  return Number((values[values.length - 1] - values[0]).toFixed(1));\n});\n\nconst overviewCards = computed(() => {\n  const totalTasks = metrics.value.totalTasks ?? 0;\n  const inactiveTasks = metrics.value.inactiveTasks ?? 0;\n  const successRate = Number(metrics.value.successRate ?? 0).toFixed(1);\n  const failedToday = metrics.value.failedToday ?? 0;\n  const backlog = metrics.value.backlog ?? 0;\n\n  return [\n    {\n      key: \"total\",\n      title: \"任务总数\",\n      value: totalTasks,\n      tagType: \"primary\",\n      tagText: `停用 ${inactiveTasks}`,\n      trend: null,\n      subtitle: \"当前租户下所有任务数量\"\n    },\n    {\n      key: \"success\",\n      title: \"成功率\",\n      value: `${successRate}%`,\n      tagType: \"success\",\n      tagText: metricRange.value === \"7d\" ? \"最近 7 天\" : \"最近 24 小时\",\n      trend: successTrendDelta.value,\n      subtitle: successTrendDelta.value === 0 ? \"暂无波动\" : \"相较起始点的变化\"\n    },\n    {\n      key: \"failed\",\n      title: \"今日失败\",\n      value: failedToday,\n      tagType: \"danger\",\n      tagText: \"累计\",\n      trend: failureTrendDelta.value,\n      subtitle: \"自动降级会在阈值达到时触发\"\n    },\n    {\n      key: \"backlog\",\n      title: \"积压任务\",\n      value: backlog,\n      tagType: \"warning\",\n      tagText: \"待处理\",\n      trend: null,\n      subtitle: \"需要关注的等待或重试任务\"\n    }\n  ];\n});\n\nconst topFailedTasks = computed(() =>\n  (metrics.value.topFailed || []).map((item) => ({\n    id: item.id ?? `${item.name}-${item.taskId ?? \"\"}`,\n    name: item.name ?? \"-\",\n    owner: item.owner ?? \"-\",\n    failed: item.failed ?? 0,\n    lastFailed: item.lastFailed ?? \"-\"\n  }))\n);\n\nconst topFailedHasData = computed(() => topFailedTasks.value.length > 0);\n\nconst recentEvents = computed(() =>\n  (metrics.value.recentEvents || []).map((event) => ({\n    id: event.id ?? `${event.title ?? \"event\"}-${event.time ?? \"\"}`,\n    time: event.time ?? \"-\",\n    type: event.type ?? \"info\",\n    title: event.title ?? \"调度事件\",\n    tagLabel: event.tagLabel ?? \"\",\n    tagType: event.tagType ?? \"info\",\n    desc: event.desc ?? \"\"\n  }))\n);\n\nconst recentEventsHasData = computed(() => recentEvents.value.length > 0);\n\nconst nodesStatusLabel = computed(() => {\n  const online = nodeMetrics.value.onlineNodes ?? 0;\n  const total = nodeMetrics.value.totalNodes ?? 0;\n  const offline = nodeMetrics.value.offlineNodes ?? 0;\n  return `在线 ${online}/${total} | 离线 ${offline}`;\n});\n\nconst nodeHealthTag = computed(() => (nodeMetrics.value.offlineNodes > 0 ? \"danger\" : \"success\"));\nconst nodePanelError = computed(() => nodeMetricsError.value || nodeListError.value);\n\nconst navigateToTaskCenter = () => {\n  router.push(\"/tasks\");\n};\n</script>\n\n<style scoped lang=\"scss\">\n.dashboard {\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n\n  &__row {\n    display: grid;\n    grid-template-columns: repeat(2, minmax(0, 1fr));\n    gap: 24px;\n  }\n\n  &__card {\n    border-radius: 16px;\n\n    .card__header {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      margin-bottom: 12px;\n    }\n\n    .card__title {\n      font-size: 16px;\n      font-weight: 600;\n      color: #0f172a;\n    }\n\n    .card__metrics {\n      display: flex;\n      align-items: center;\n      gap: 12px;\n\n      .card__value {\n        font-size: 28px;\n        font-weight: 700;\n        color: #111827;\n      }\n\n      .card__trend {\n        display: inline-flex;\n        align-items: center;\n        font-size: 14px;\n        color: #059669;\n\n        &--down {\n          color: #dc2626;\n        }\n      }\n    }\n\n    .card__subtitle {\n      margin-top: 8px;\n      font-size: 13px;\n      color: #64748b;\n    }\n  }\n\n  &__panel {\n    border-radius: 16px;\n\n    .panel__header {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      font-weight: 600;\n    }\n  }\n}\n\n.trend {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n\n  &__chart {\n    display: flex;\n    align-items: flex-end;\n    gap: 12px;\n    height: 220px;\n  }\n\n  &__bar {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 8px;\n    width: 24px;\n\n    span {\n      width: 12px;\n      border-radius: 6px;\n      transition: height 0.3s ease;\n    }\n  }\n\n  &__bar-success {\n    background: #22c55e;\n  }\n\n  &__bar-failed {\n    background: #ef4444;\n  }\n\n  &__time {\n    font-size: 12px;\n    color: #64748b;\n  }\n\n  &__legend {\n    display: flex;\n    gap: 18px;\n\n    .legend__item {\n      display: inline-flex;\n      align-items: center;\n      gap: 8px;\n      font-size: 12px;\n      color: #475569;\n    }\n\n    .legend__dot {\n      width: 10px;\n      height: 10px;\n      border-radius: 50%;\n\n      &--success {\n        background: #22c55e;\n      }\n\n      &--failed {\n        background: #ef4444;\n      }\n    }\n  }\n}\n\n.nodes {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n\n  &__item {\n    padding: 16px;\n    border: 1px solid rgba(15, 23, 42, 0.08);\n    border-radius: 12px;\n    background: rgba(15, 23, 42, 0.02);\n  }\n\n  &__header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 12px;\n    font-weight: 600;\n    color: #1e293b;\n  }\n\n  &__metrics {\n    display: flex;\n    flex-direction: column;\n    gap: 12px;\n  }\n\n  &__metric {\n    display: flex;\n    flex-direction: column;\n    gap: 6px;\n    font-size: 13px;\n    color: #475569;\n  }\n\n  &__meta {\n    display: flex;\n    justify-content: space-between;\n    color: #64748b;\n    font-size: 13px;\n  }\n}\n\n.event {\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n\n  &__title {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-weight: 600;\n  }\n\n  &__meta {\n    font-size: 12px;\n    color: #64748b;\n  }\n}\n</style>\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { reactive, ref } from 'vue';\nimport { useRouter, useRoute } from 'vue-router';\nimport { useStore } from 'vuex';\nimport { ElMessage } from 'element-plus';\nexport default {\n  __name: 'LoginView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const store = useStore();\n    const router = useRouter();\n    const route = useRoute();\n    const loginFormRef = ref(null);\n    const loading = ref(false);\n    const loginForm = reactive({\n      tenantCode: 'tenant-alpha',\n      username: '',\n      password: ''\n    });\n    const loginRules = {\n      tenantCode: [{\n        required: true,\n        message: '请输入租户代码',\n        trigger: 'blur'\n      }],\n      username: [{\n        required: true,\n        message: '请输入用户名',\n        trigger: 'blur'\n      }, {\n        min: 3,\n        max: 32,\n        message: '用户名长度为3-32个字符',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: '请输入密码',\n        trigger: 'blur'\n      }, {\n        min: 6,\n        message: '密码长度至少6个字符',\n        trigger: 'blur'\n      }]\n    };\n    const handleLogin = async () => {\n      if (!loginFormRef.value) {\n        return;\n      }\n      try {\n        const valid = await loginFormRef.value.validate();\n        if (!valid) {\n          return;\n        }\n      } catch {\n        return;\n      }\n      loading.value = true;\n      try {\n        const payload = {\n          tenantCode: loginForm.tenantCode,\n          username: loginForm.username,\n          password: loginForm.password\n        };\n        const response = await store.dispatch('auth/login', payload);\n        ElMessage.success(`Welcome back, ${response.displayName || response.username}`);\n        const redirect = route.query.redirect || '/dashboard';\n        router.push(redirect);\n      } catch (error) {\n        const status = error.response?.status;\n        let message = error.response?.data?.message || error.message;\n        if (status === 401) {\n          message = 'Incorrect username or password';\n        } else if (status === 404) {\n          message = 'Tenant does not exist';\n        } else if (!message) {\n          message = 'Sign-in failed, please try again later';\n        }\n        ElMessage.error(message);\n      } finally {\n        loading.value = false;\n      }\n    };\n    const __returned__ = {\n      store,\n      router,\n      route,\n      loginFormRef,\n      loading,\n      loginForm,\n      loginRules,\n      handleLogin,\n      reactive,\n      ref,\n      get useRouter() {\n        return useRouter;\n      },\n      get useRoute() {\n        return useRoute;\n      },\n      get useStore() {\n        return useStore;\n      },\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["reactive","ref","useRouter","useRoute","useStore","ElMessage","store","router","route","loginFormRef","loading","loginForm","tenantCode","username","password","loginRules","required","message","trigger","min","max","handleLogin","value","valid","validate","payload","response","dispatch","success","displayName","redirect","query","push","error","status","data"],"sources":["D:/桌面/项目/分布式任务调度系统/SkyTask-main/SkyTask-main/skytask-frontend/src/views/LoginView.vue"],"sourcesContent":["<template>\n  <div class=\"login-page\">\n    <el-card class=\"login-card\" shadow=\"always\">\n      <template #header>\n        <div class=\"login-card__header\">\n          <h2>SkyTask 平台</h2>\n          <p>请输入租户、用户名和密码登录</p>\n        </div>\n      </template>\n\n      <el-form\n        ref=\"loginFormRef\"\n        :model=\"loginForm\"\n        :rules=\"loginRules\"\n        label-width=\"80px\"\n        @submit.prevent=\"handleLogin\"\n      >\n        <el-form-item label=\"租户\" prop=\"tenantCode\">\n          <el-input\n            v-model=\"loginForm.tenantCode\"\n            placeholder=\"例如: tenant-alpha\"\n            autocomplete=\"off\"\n          />\n        </el-form-item>\n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input\n            v-model=\"loginForm.username\"\n            placeholder=\"请输入用户名\"\n            autocomplete=\"username\"\n          />\n        </el-form-item>\n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input\n            v-model=\"loginForm.password\"\n            type=\"password\"\n            placeholder=\"请输入密码\"\n            show-password\n            autocomplete=\"current-password\"\n            @keyup.enter=\"handleLogin\"\n          />\n        </el-form-item>\n        <el-form-item>\n          <el-button\n            type=\"primary\"\n            style=\"width: 100%\"\n            :loading=\"loading\"\n            @click=\"handleLogin\"\n          >\n            {{ loading ? '登录中...' : '登录' }}\n          </el-button>\n        </el-form-item>\n      </el-form>\n\n      <div class=\"login-card__footer\">\n        <p>演示租户: tenant-alpha | 演示账号: ops-admin / admin123</p>\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script setup>\nimport { reactive, ref } from 'vue';\nimport { useRouter, useRoute } from 'vue-router';\nimport { useStore } from 'vuex';\nimport { ElMessage } from 'element-plus';\n\nconst store = useStore();\nconst router = useRouter();\nconst route = useRoute();\n\nconst loginFormRef = ref(null);\nconst loading = ref(false);\nconst loginForm = reactive({\n  tenantCode: 'tenant-alpha',\n  username: '',\n  password: ''\n});\n\nconst loginRules = {\n  tenantCode: [\n    { required: true, message: '请输入租户代码', trigger: 'blur' }\n  ],\n  username: [\n    { required: true, message: '请输入用户名', trigger: 'blur' },\n    { min: 3, max: 32, message: '用户名长度为3-32个字符', trigger: 'blur' }\n  ],\n  password: [\n    { required: true, message: '请输入密码', trigger: 'blur' },\n    { min: 6, message: '密码长度至少6个字符', trigger: 'blur' }\n  ]\n};\n\nconst handleLogin = async () => {\n  if (!loginFormRef.value) {\n    return;\n  }\n  try {\n    const valid = await loginFormRef.value.validate();\n    if (!valid) {\n      return;\n    }\n  } catch {\n    return;\n  }\n\n  loading.value = true;\n  try {\n    const payload = {\n      tenantCode: loginForm.tenantCode,\n      username: loginForm.username,\n      password: loginForm.password\n    };\n    const response = await store.dispatch('auth/login', payload);\n    ElMessage.success(`Welcome back, ${response.displayName || response.username}`);\n\n    const redirect = route.query.redirect || '/dashboard';\n    router.push(redirect);\n  } catch (error) {\n    const status = error.response?.status;\n    let message = error.response?.data?.message || error.message;\n    if (status === 401) {\n      message = 'Incorrect username or password';\n    } else if (status === 404) {\n      message = 'Tenant does not exist';\n    } else if (!message) {\n      message = 'Sign-in failed, please try again later';\n    }\n    ElMessage.error(message);\n  } finally {\n    loading.value = false;\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n.login-page {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  background: linear-gradient(135deg, #0f172a, #1e293b);\n  padding: 32px 16px;\n}\n\n.login-card {\n  width: 420px;\n  border-radius: 16px;\n  box-shadow: 0 18px 45px rgba(15, 23, 42, 0.35);\n\n  &__header {\n    text-align: center;\n\n    h2 {\n      margin: 0 0 8px;\n      font-size: 24px;\n      color: #0f172a;\n    }\n\n    p {\n      margin: 0;\n      font-size: 14px;\n      color: #64748b;\n    }\n  }\n\n  &__footer {\n    margin-top: 16px;\n    text-align: center;\n    font-size: 12px;\n    color: #94a3b8;\n  }\n}\n</style>\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createBlock as _createBlock, resolveDirective as _resolveDirective, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"node-monitor\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"card node-monitor__summary\"\n};\nconst _hoisted_3 = {\n  class: \"summary__item\"\n};\nconst _hoisted_4 = {\n  class: \"summary__value\"\n};\nconst _hoisted_5 = {\n  class: \"summary__item\"\n};\nconst _hoisted_6 = {\n  class: \"summary__value summary__value--success\"\n};\nconst _hoisted_7 = {\n  class: \"summary__item\"\n};\nconst _hoisted_8 = {\n  class: \"summary__value summary__value--danger\"\n};\nconst _hoisted_9 = {\n  class: \"summary__item\"\n};\nconst _hoisted_10 = {\n  class: \"summary__value\"\n};\nconst _hoisted_11 = {\n  class: \"summary__item\"\n};\nconst _hoisted_12 = {\n  class: \"summary__value\"\n};\nconst _hoisted_13 = {\n  key: 1,\n  class: \"card node-monitor__table\"\n};\nconst _hoisted_14 = {\n  class: \"table__header\"\n};\nconst _hoisted_15 = {\n  class: \"node-name\"\n};\nconst _hoisted_16 = {\n  class: \"node-meta\"\n};\nconst _hoisted_17 = {\n  class: \"resource\"\n};\nconst _hoisted_18 = {\n  class: \"resource\"\n};\nconst _hoisted_19 = {\n  class: \"metrics\"\n};\nconst _hoisted_20 = {\n  key: 2,\n  class: \"card node-monitor__empty\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_progress = _resolveComponent(\"el-progress\");\n  const _component_el_popconfirm = _resolveComponent(\"el-popconfirm\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_empty = _resolveComponent(\"el-empty\");\n  const _component_el_descriptions_item = _resolveComponent(\"el-descriptions-item\");\n  const _component_el_descriptions = _resolveComponent(\"el-descriptions\");\n  const _component_el_timeline_item = _resolveComponent(\"el-timeline-item\");\n  const _component_el_timeline = _resolveComponent(\"el-timeline\");\n  const _component_el_drawer = _resolveComponent(\"el-drawer\");\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$setup.canViewNodes ? (_openBlock(), _createElementBlock(\"section\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_cache[1] || (_cache[1] = _createElementVNode(\"span\", {\n    class: \"summary__label\"\n  }, \"Total Nodes\", -1 /* CACHED */)), _createElementVNode(\"span\", _hoisted_4, _toDisplayString($setup.metrics.totalNodes), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_5, [_cache[2] || (_cache[2] = _createElementVNode(\"span\", {\n    class: \"summary__label\"\n  }, \"Online\", -1 /* CACHED */)), _createElementVNode(\"span\", _hoisted_6, _toDisplayString($setup.metrics.onlineNodes), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_7, [_cache[3] || (_cache[3] = _createElementVNode(\"span\", {\n    class: \"summary__label\"\n  }, \"Offline\", -1 /* CACHED */)), _createElementVNode(\"span\", _hoisted_8, _toDisplayString($setup.metrics.offlineNodes), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_9, [_cache[4] || (_cache[4] = _createElementVNode(\"span\", {\n    class: \"summary__label\"\n  }, \"Avg CPU\", -1 /* CACHED */)), _createElementVNode(\"span\", _hoisted_10, _toDisplayString($setup.metrics.avgCpu) + \"%\", 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_11, [_cache[5] || (_cache[5] = _createElementVNode(\"span\", {\n    class: \"summary__label\"\n  }, \"Avg Memory\", -1 /* CACHED */)), _createElementVNode(\"span\", _hoisted_12, _toDisplayString($setup.metrics.avgMemory) + \"%\", 1 /* TEXT */)])])) : _createCommentVNode(\"v-if\", true), $setup.canViewNodes ? (_openBlock(), _createElementBlock(\"section\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [_cache[7] || (_cache[7] = _createElementVNode(\"h3\", null, \"Worker Nodes\", -1 /* CACHED */)), _createVNode(_component_el_button, {\n    type: \"primary\",\n    size: \"small\",\n    onClick: $setup.refresh\n  }, {\n    default: _withCtx(() => [...(_cache[6] || (_cache[6] = [_createTextVNode(\"Refresh\", -1 /* CACHED */)]))]),\n    _: 1 /* STABLE */\n  })]), _withDirectives((_openBlock(), _createBlock(_component_el_table, {\n    data: $setup.nodes,\n    height: \"520\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      label: \"Node\",\n      \"min-width\": \"180\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createElementVNode(\"div\", _hoisted_15, [_createVNode(_component_el_tag, {\n        size: \"small\",\n        effect: \"plain\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(row.cluster), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */), _createElementVNode(\"strong\", null, _toDisplayString(row.name), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"span\", null, \"Host: \" + _toDisplayString(row.host), 1 /* TEXT */), _createElementVNode(\"span\", null, \"Registered: \" + _toDisplayString(row.registerTime), 1 /* TEXT */)])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      label: \"Status\",\n      width: \"120\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createVNode($setup[\"StatusTag\"], {\n        status: row.status === 'ONLINE' ? 'SUCCESS' : 'FAILED'\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(row.status === 'ONLINE' ? 'Online' : 'Offline'), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"status\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      label: \"Resource\",\n      width: \"240\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createElementVNode(\"div\", _hoisted_17, [_cache[8] || (_cache[8] = _createElementVNode(\"span\", null, \"CPU\", -1 /* CACHED */)), _createVNode(_component_el_progress, {\n        percentage: row.cpu,\n        status: row.cpu > 80 ? 'exception' : 'success'\n      }, null, 8 /* PROPS */, [\"percentage\", \"status\"])]), _createElementVNode(\"div\", _hoisted_18, [_cache[9] || (_cache[9] = _createElementVNode(\"span\", null, \"Memory\", -1 /* CACHED */)), _createVNode(_component_el_progress, {\n        percentage: row.memory,\n        status: row.memory > 80 ? 'exception' : 'warning'\n      }, null, 8 /* PROPS */, [\"percentage\", \"status\"])])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      label: \"Runtime\",\n      width: \"220\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createElementVNode(\"div\", _hoisted_19, [_createElementVNode(\"span\", null, \"Running: \" + _toDisplayString(row.runningTasks), 1 /* TEXT */), _createElementVNode(\"span\", null, \"Backlog: \" + _toDisplayString(row.backlog), 1 /* TEXT */), _createElementVNode(\"span\", null, \"Delay: \" + _toDisplayString(row.delay) + \" ms\", 1 /* TEXT */), _createElementVNode(\"span\", null, \"Alert: \" + _toDisplayString(row.alertLevel), 1 /* TEXT */)])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      label: \"Actions\",\n      width: \"220\",\n      fixed: \"right\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [$setup.canManageNodes ? (_openBlock(), _createBlock(_component_el_button, {\n        key: 0,\n        link: \"\",\n        type: \"primary\",\n        size: \"small\",\n        onClick: $event => $setup.rebalance(row)\n      }, {\n        default: _withCtx(() => [...(_cache[10] || (_cache[10] = [_createTextVNode(\" Rebalance \", -1 /* CACHED */)]))]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_button, {\n        link: \"\",\n        type: \"warning\",\n        size: \"small\",\n        onClick: $event => $setup.openHeartbeat(row)\n      }, {\n        default: _withCtx(() => [...(_cache[11] || (_cache[11] = [_createTextVNode(\" Heartbeat \", -1 /* CACHED */)]))]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"]), $setup.canManageNodes ? (_openBlock(), _createBlock(_component_el_popconfirm, {\n        key: 1,\n        title: \"Offline this node?\",\n        onConfirm: $event => $setup.offline(row)\n      }, {\n        reference: _withCtx(() => [_createVNode(_component_el_button, {\n          link: \"\",\n          type: \"danger\",\n          size: \"small\"\n        }, {\n          default: _withCtx(() => [...(_cache[12] || (_cache[12] = [_createTextVNode(\"Offline\", -1 /* CACHED */)]))]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onConfirm\"])) : _createCommentVNode(\"v-if\", true)]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\"])), [[_directive_loading, $setup.loading]])])) : (_openBlock(), _createElementBlock(\"section\", _hoisted_20, [_createVNode(_component_el_empty, {\n    description: \"You do not have permission to view nodes\"\n  })])), _createVNode(_component_el_drawer, {\n    modelValue: $setup.heartbeatVisible,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.heartbeatVisible = $event),\n    title: \"Node Heartbeat\",\n    size: \"30%\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_descriptions, {\n      column: 1,\n      border: \"\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_descriptions_item, {\n        label: \"Node\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.heartbeatDetail.name), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_descriptions_item, {\n        label: \"Latest\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.heartbeatDetail.latest), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_descriptions_item, {\n        label: \"Avg Latency\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.heartbeatDetail.avgLatency) + \" ms\", 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_descriptions_item, {\n        label: \"Last Alert\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.heartbeatDetail.lastAlert || '-'), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_timeline, {\n      class: \"heartbeat-timeline\"\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.heartbeatDetail.logs, item => {\n        return _openBlock(), _createBlock(_component_el_timeline_item, {\n          key: item.time,\n          timestamp: item.time,\n          type: item.status\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(item.message), 1 /* TEXT */)]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"timestamp\", \"type\"]);\n      }), 128 /* KEYED_FRAGMENT */))]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","$setup","canViewNodes","_hoisted_2","_createElementVNode","_hoisted_3","_hoisted_4","_toDisplayString","metrics","totalNodes","_hoisted_5","_hoisted_6","onlineNodes","_hoisted_7","_hoisted_8","offlineNodes","_hoisted_9","_hoisted_10","avgCpu","_hoisted_11","_hoisted_12","avgMemory","_hoisted_13","_hoisted_14","_createVNode","_component_el_button","type","size","onClick","refresh","_cache","_createBlock","_component_el_table","data","nodes","height","_component_el_table_column","label","default","_withCtx","row","_hoisted_15","_component_el_tag","effect","cluster","name","_hoisted_16","host","registerTime","width","status","_hoisted_17","_component_el_progress","percentage","cpu","_hoisted_18","memory","_hoisted_19","runningTasks","backlog","delay","alertLevel","fixed","canManageNodes","link","$event","rebalance","openHeartbeat","_component_el_popconfirm","title","onConfirm","offline","reference","loading","_hoisted_20","_component_el_empty","description","_component_el_drawer","heartbeatVisible","_component_el_descriptions","column","border","_component_el_descriptions_item","heartbeatDetail","latest","avgLatency","lastAlert","_component_el_timeline","_Fragment","_renderList","logs","item","_component_el_timeline_item","key","time","timestamp","message"],"sources":["D:\\桌面\\项目\\分布式任务调度系统\\SkyTask\\skytask-frontend\\src\\views\\NodeMonitorView.vue"],"sourcesContent":["<template>\n  <div class=\"node-monitor\">\n    <section v-if=\"canViewNodes\" class=\"card node-monitor__summary\">\n      <div class=\"summary__item\">\n        <span class=\"summary__label\">Total Nodes</span>\n        <span class=\"summary__value\">{{ metrics.totalNodes }}</span>\n      </div>\n      <div class=\"summary__item\">\n        <span class=\"summary__label\">Online</span>\n        <span class=\"summary__value summary__value--success\">{{ metrics.onlineNodes }}</span>\n      </div>\n      <div class=\"summary__item\">\n        <span class=\"summary__label\">Offline</span>\n        <span class=\"summary__value summary__value--danger\">{{ metrics.offlineNodes }}</span>\n      </div>\n      <div class=\"summary__item\">\n        <span class=\"summary__label\">Avg CPU</span>\n        <span class=\"summary__value\">{{ metrics.avgCpu }}%</span>\n      </div>\n      <div class=\"summary__item\">\n        <span class=\"summary__label\">Avg Memory</span>\n        <span class=\"summary__value\">{{ metrics.avgMemory }}%</span>\n      </div>\n    </section>\n\n    <section v-if=\"canViewNodes\" class=\"card node-monitor__table\">\n      <div class=\"table__header\">\n        <h3>Worker Nodes</h3>\n        <el-button type=\"primary\" size=\"small\" @click=\"refresh\">Refresh</el-button>\n      </div>\n      <el-table :data=\"nodes\" v-loading=\"loading\" height=\"520\">\n        <el-table-column label=\"Node\" min-width=\"180\">\n          <template #default=\"{ row }\">\n            <div class=\"node-name\">\n              <el-tag size=\"small\" effect=\"plain\">{{ row.cluster }}</el-tag>\n              <strong>{{ row.name }}</strong>\n            </div>\n            <div class=\"node-meta\">\n              <span>Host: {{ row.host }}</span>\n              <span>Registered: {{ row.registerTime }}</span>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"Status\" width=\"120\">\n          <template #default=\"{ row }\">\n            <StatusTag :status=\"row.status === 'ONLINE' ? 'SUCCESS' : 'FAILED'\">\n              {{ row.status === 'ONLINE' ? 'Online' : 'Offline' }}\n            </StatusTag>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"Resource\" width=\"240\">\n          <template #default=\"{ row }\">\n            <div class=\"resource\">\n              <span>CPU</span>\n              <el-progress :percentage=\"row.cpu\" :status=\"row.cpu > 80 ? 'exception' : 'success'\" />\n            </div>\n            <div class=\"resource\">\n              <span>Memory</span>\n              <el-progress :percentage=\"row.memory\" :status=\"row.memory > 80 ? 'exception' : 'warning'\" />\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"Runtime\" width=\"220\">\n          <template #default=\"{ row }\">\n            <div class=\"metrics\">\n              <span>Running: {{ row.runningTasks }}</span>\n              <span>Backlog: {{ row.backlog }}</span>\n              <span>Delay: {{ row.delay }} ms</span>\n              <span>Alert: {{ row.alertLevel }}</span>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"Actions\" width=\"220\" fixed=\"right\">\n          <template #default=\"{ row }\">\n            <el-button\n              v-if=\"canManageNodes\"\n              link\n              type=\"primary\"\n              size=\"small\"\n              @click=\"rebalance(row)\"\n            >\n              Rebalance\n            </el-button>\n            <el-button link type=\"warning\" size=\"small\" @click=\"openHeartbeat(row)\">\n              Heartbeat\n            </el-button>\n            <el-popconfirm\n              v-if=\"canManageNodes\"\n              title=\"Offline this node?\"\n              @confirm=\"offline(row)\"\n            >\n              <template #reference>\n                <el-button link type=\"danger\" size=\"small\">Offline</el-button>\n              </template>\n            </el-popconfirm>\n          </template>\n        </el-table-column>\n      </el-table>\n    </section>\n\n    <section v-else class=\"card node-monitor__empty\">\n      <el-empty description=\"You do not have permission to view nodes\" />\n    </section>\n\n    <el-drawer v-model=\"heartbeatVisible\" title=\"Node Heartbeat\" size=\"30%\">\n      <el-descriptions :column=\"1\" border>\n        <el-descriptions-item label=\"Node\">{{ heartbeatDetail.name }}</el-descriptions-item>\n        <el-descriptions-item label=\"Latest\">{{ heartbeatDetail.latest }}</el-descriptions-item>\n        <el-descriptions-item label=\"Avg Latency\">{{ heartbeatDetail.avgLatency }} ms</el-descriptions-item>\n        <el-descriptions-item label=\"Last Alert\">{{ heartbeatDetail.lastAlert || '-' }}</el-descriptions-item>\n      </el-descriptions>\n      <el-timeline class=\"heartbeat-timeline\">\n        <el-timeline-item\n          v-for=\"item in heartbeatDetail.logs\"\n          :key=\"item.time\"\n          :timestamp=\"item.time\"\n          :type=\"item.status\"\n        >\n          {{ item.message }}\n        </el-timeline-item>\n      </el-timeline>\n    </el-drawer>\n  </div>\n</template>\n\n<script setup>\nimport { computed, onMounted, ref, watch } from 'vue';\nimport { useStore } from 'vuex';\nimport StatusTag from '@/components/common/StatusTag.vue';\nimport { fetchNodeHeartbeat } from '@/api/nodes';\nimport { ElMessage } from 'element-plus';\n\nconst store = useStore();\n\nconst heartbeatVisible = ref(false);\nconst heartbeatDetail = ref({\n  name: '',\n  latest: '',\n  avgLatency: 0,\n  lastAlert: '',\n  logs: []\n});\n\nconst canViewNodes = computed(() => store.getters['auth/hasPermission']('node:read'));\nconst canManageNodes = computed(() => store.getters['auth/hasPermission']('config:write'));\nconst metrics = computed(() => store.getters['nodes/nodeMetrics']);\nconst nodes = computed(() => store.getters['nodes/nodeList']);\nconst loading = computed(() => store.getters['nodes/nodesLoading']);\n\nwatch(\n  canViewNodes,\n  (allowed) => {\n    if (allowed) {\n      refresh();\n    }\n  },\n  { immediate: true }\n);\n\nonMounted(() => {\n  if (canViewNodes.value) {\n    refresh();\n  }\n});\n\nconst refresh = () => {\n  if (!canViewNodes.value) {\n    return;\n  }\n  store.dispatch('nodes/loadNodeMetrics');\n  store.dispatch('nodes/loadNodes');\n};\n\nconst offline = async (node) => {\n  if (!canManageNodes.value) {\n    ElMessage.warning('You do not have permission to manage nodes');\n    return;\n  }\n  await store.dispatch('nodes/decommissionNode', node.id);\n  refresh();\n};\n\nconst rebalance = async (node) => {\n  if (!canManageNodes.value) {\n    ElMessage.warning('You do not have permission to manage nodes');\n    return;\n  }\n  await store.dispatch('nodes/rebalance', node.id);\n  refresh();\n};\n\nconst openHeartbeat = async (node) => {\n  if (!canViewNodes.value) {\n    ElMessage.warning('You do not have permission to view heartbeat logs');\n    return;\n  }\n  const detail = await fetchNodeHeartbeat(node.id);\n  heartbeatDetail.value = detail;\n  heartbeatVisible.value = true;\n};\n</script>\n\n<style scoped lang=\"scss\">\n.node-monitor {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  &__summary {\n    display: grid;\n    grid-template-columns: repeat(5, minmax(0, 1fr));\n    gap: 16px;\n    padding: 20px 24px;\n  }\n\n  &__table {\n    padding: 20px;\n\n    .table__header {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      margin-bottom: 16px;\n\n      h3 {\n        margin: 0;\n      }\n    }\n  }\n\n  &__empty {\n    display: flex;\n    justify-content: center;\n    padding: 48px 0;\n  }\n}\n\n.summary__item {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  color: #475569;\n\n  .summary__label {\n    font-size: 12px;\n    text-transform: uppercase;\n    letter-spacing: 0.5px;\n  }\n\n  .summary__value {\n    font-size: 24px;\n    font-weight: 700;\n    color: #0f172a;\n\n    &--success {\n      color: #10b981;\n    }\n\n    &--danger {\n      color: #ef4444;\n    }\n  }\n}\n\n.node-name {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  strong {\n    color: #0f172a;\n  }\n}\n\n.node-meta {\n  display: flex;\n  gap: 16px;\n  font-size: 12px;\n  color: #64748b;\n  margin-top: 6px;\n}\n\n.resource {\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n  font-size: 13px;\n  color: #475569;\n  margin-bottom: 8px;\n}\n\n.metrics {\n  display: grid;\n  gap: 4px;\n  font-size: 12px;\n  color: #475569;\n}\n\n.heartbeat-timeline {\n  margin-top: 16px;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
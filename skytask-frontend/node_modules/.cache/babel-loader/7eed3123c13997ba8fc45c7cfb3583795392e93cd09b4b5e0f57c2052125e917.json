{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, resolveDirective as _resolveDirective, openBlock as _openBlock, createBlock as _createBlock, withDirectives as _withDirectives, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"execution\"\n};\nconst _hoisted_2 = {\n  class: \"execution__pagination\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_pagination = _resolveComponent(\"el-pagination\");\n  const _component_el_drawer = _resolveComponent(\"el-drawer\");\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createBlock(_component_el_drawer, {\n    \"model-value\": $props.visible,\n    title: \"执行记录\",\n    size: \"40%\",\n    onClose: _cache[0] || (_cache[0] = $event => $setup.emit('update:visible', false))\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_withDirectives((_openBlock(), _createBlock(_component_el_table, {\n      data: $props.executions,\n      height: \"360\",\n      size: \"small\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_table_column, {\n        prop: \"triggerTime\",\n        label: \"调度时间\",\n        width: \"160\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"node\",\n        label: \"执行节点\",\n        width: \"120\"\n      }), _createVNode(_component_el_table_column, {\n        label: \"状态\",\n        width: \"120\"\n      }, {\n        default: _withCtx(({\n          row\n        }) => [_createVNode($setup[\"StatusTag\"], {\n          status: row.status\n        }, null, 8 /* PROPS */, [\"status\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_table_column, {\n        prop: \"duration\",\n        label: \"耗时 (ms)\",\n        width: \"100\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"retry\",\n        label: \"重试次数\",\n        width: \"100\"\n      }), _createVNode(_component_el_table_column, {\n        label: \"操作\",\n        width: \"120\",\n        fixed: \"right\"\n      }, {\n        default: _withCtx(({\n          row\n        }) => [_createVNode(_component_el_button, {\n          link: \"\",\n          type: \"primary\",\n          size: \"small\",\n          onClick: $event => $setup.emit('view-log', row)\n        }, {\n          default: _withCtx(() => [...(_cache[1] || (_cache[1] = [_createTextVNode(\" 查看日志 \", -1 /* CACHED */)]))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"data\"])), [[_directive_loading, $props.loading]]), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_pagination, {\n      background: \"\",\n      layout: \"prev, pager, next, ->, jumper\",\n      \"current-page\": $props.pagination.page,\n      \"page-size\": $props.pagination.size,\n      total: $props.pagination.total,\n      onCurrentChange: $setup.handlePageChange\n    }, null, 8 /* PROPS */, [\"current-page\", \"page-size\", \"total\"])])])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model-value\"]);\n}","map":{"version":3,"names":["class","_createBlock","_component_el_drawer","$props","visible","title","size","onClose","_cache","$event","$setup","emit","_createElementVNode","_hoisted_1","_component_el_table","data","executions","height","_createVNode","_component_el_table_column","prop","label","width","default","_withCtx","row","status","fixed","_component_el_button","link","type","onClick","loading","_hoisted_2","_component_el_pagination","background","layout","pagination","page","total","onCurrentChange","handlePageChange"],"sources":["D:\\桌面\\项目\\分布式任务调度系统\\SkyTask\\skytask-frontend\\src\\components\\task\\TaskExecutionDrawer.vue"],"sourcesContent":["<template>\n  <el-drawer\n    :model-value=\"visible\"\n    title=\"执行记录\"\n    size=\"40%\"\n    @close=\"emit('update:visible', false)\"\n  >\n    <div class=\"execution\">\n      <el-table :data=\"executions\" height=\"360\" size=\"small\" v-loading=\"loading\">\n        <el-table-column prop=\"triggerTime\" label=\"调度时间\" width=\"160\" />\n        <el-table-column prop=\"node\" label=\"执行节点\" width=\"120\" />\n        <el-table-column label=\"状态\" width=\"120\">\n          <template #default=\"{ row }\">\n            <StatusTag :status=\"row.status\" />\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"duration\" label=\"耗时 (ms)\" width=\"100\" />\n        <el-table-column prop=\"retry\" label=\"重试次数\" width=\"100\" />\n        <el-table-column label=\"操作\" width=\"120\" fixed=\"right\">\n          <template #default=\"{ row }\">\n            <el-button link type=\"primary\" size=\"small\" @click=\"emit('view-log', row)\">\n              查看日志\n            </el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <div class=\"execution__pagination\">\n        <el-pagination\n          background\n          layout=\"prev, pager, next, ->, jumper\"\n          :current-page=\"pagination.page\"\n          :page-size=\"pagination.size\"\n          :total=\"pagination.total\"\n          @current-change=\"handlePageChange\"\n        />\n      </div>\n    </div>\n  </el-drawer>\n</template>\n\n<script setup>\nimport StatusTag from '../common/StatusTag.vue';\n\nconst props = defineProps({\n  visible: {\n    type: Boolean,\n    default: false\n  },\n  executions: {\n    type: Array,\n    default: () => []\n  },\n  pagination: {\n    type: Object,\n    default: () => ({ page: 1, size: 10, total: 0 })\n  },\n  loading: {\n    type: Boolean,\n    default: false\n  }\n});\n\nconst emit = defineEmits(['update:visible', 'page-change', 'view-log']);\n\nconst handlePageChange = (page) => {\n  emit('page-change', page);\n};\n</script>\n\n<style scoped lang=\"scss\">\n.execution {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n\n  &__pagination {\n    display: flex;\n    justify-content: flex-end;\n    padding-top: 12px;\n  }\n}\n</style>\n"],"mappings":";;EAOSA,KAAK,EAAC;AAAW;;EAoBfA,KAAK,EAAC;AAAuB;;;;;;;;uBA1BtCC,YAAA,CAqCYC,oBAAA;IApCT,aAAW,EAAEC,MAAA,CAAAC,OAAO;IACrBC,KAAK,EAAC,MAAM;IACZC,IAAI,EAAC,KAAK;IACTC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,MAAA,CAAAC,IAAI;;sBAEZ,MA8BM,CA9BNC,mBAAA,CA8BM,OA9BNC,UA8BM,G,+BA7BJZ,YAAA,CAiBWa,mBAAA;MAjBAC,IAAI,EAAEZ,MAAA,CAAAa,UAAU;MAAEC,MAAM,EAAC,KAAK;MAACX,IAAI,EAAC;;wBAC7C,MAA+D,CAA/DY,YAAA,CAA+DC,0BAAA;QAA9CC,IAAI,EAAC,aAAa;QAACC,KAAK,EAAC,MAAM;QAACC,KAAK,EAAC;UACvDJ,YAAA,CAAwDC,0BAAA;QAAvCC,IAAI,EAAC,MAAM;QAACC,KAAK,EAAC,MAAM;QAACC,KAAK,EAAC;UAChDJ,YAAA,CAIkBC,0BAAA;QAJDE,KAAK,EAAC,IAAI;QAACC,KAAK,EAAC;;QACrBC,OAAO,EAAAC,QAAA,CAChB,CAAkC;UADdC;QAAG,OACvBP,YAAA,CAAkCR,MAAA;UAAtBgB,MAAM,EAAED,GAAG,CAACC;;;UAG5BR,YAAA,CAA+DC,0BAAA;QAA9CC,IAAI,EAAC,UAAU;QAACC,KAAK,EAAC,SAAS;QAACC,KAAK,EAAC;UACvDJ,YAAA,CAAyDC,0BAAA;QAAxCC,IAAI,EAAC,OAAO;QAACC,KAAK,EAAC,MAAM;QAACC,KAAK,EAAC;UACjDJ,YAAA,CAMkBC,0BAAA;QANDE,KAAK,EAAC,IAAI;QAACC,KAAK,EAAC,KAAK;QAACK,KAAK,EAAC;;QACjCJ,OAAO,EAAAC,QAAA,CAChB,CAEY;UAHQC;QAAG,OACvBP,YAAA,CAEYU,oBAAA;UAFDC,IAAI,EAAJ,EAAI;UAACC,IAAI,EAAC,SAAS;UAACxB,IAAI,EAAC,OAAO;UAAEyB,OAAK,EAAAtB,MAAA,IAAEC,MAAA,CAAAC,IAAI,aAAac,GAAG;;4BAAG,MAE3E,KAAAjB,MAAA,QAAAA,MAAA,O,iBAF2E,QAE3E,mB;;;;;;wDAd4DL,MAAA,CAAA6B,OAAO,E,GAmBzEpB,mBAAA,CASM,OATNqB,UASM,GARJf,YAAA,CAOEgB,wBAAA;MANAC,UAAU,EAAV,EAAU;MACVC,MAAM,EAAC,+BAA+B;MACrC,cAAY,EAAEjC,MAAA,CAAAkC,UAAU,CAACC,IAAI;MAC7B,WAAS,EAAEnC,MAAA,CAAAkC,UAAU,CAAC/B,IAAI;MAC1BiC,KAAK,EAAEpC,MAAA,CAAAkC,UAAU,CAACE,KAAK;MACvBC,eAAc,EAAE9B,MAAA,CAAA+B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
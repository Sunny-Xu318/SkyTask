{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, resolveDirective as _resolveDirective, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"dashboard\"\n};\nconst _hoisted_2 = {\n  class: \"dashboard__row\"\n};\nconst _hoisted_3 = {\n  class: \"card__header\"\n};\nconst _hoisted_4 = {\n  class: \"card__title\"\n};\nconst _hoisted_5 = {\n  class: \"card__metrics\"\n};\nconst _hoisted_6 = {\n  class: \"card__value\"\n};\nconst _hoisted_7 = {\n  class: \"card__subtitle\"\n};\nconst _hoisted_8 = {\n  class: \"dashboard__row\"\n};\nconst _hoisted_9 = {\n  class: \"panel__header\"\n};\nconst _hoisted_10 = {\n  key: 0,\n  class: \"panel__error\"\n};\nconst _hoisted_11 = {\n  key: 1,\n  class: \"trend-panel\"\n};\nconst _hoisted_12 = {\n  class: \"panel__header\"\n};\nconst _hoisted_13 = {\n  key: 0,\n  class: \"panel__error\"\n};\nconst _hoisted_14 = {\n  class: \"dashboard__row\"\n};\nconst _hoisted_15 = {\n  class: \"panel__header\"\n};\nconst _hoisted_16 = {\n  class: \"panel__header-actions\"\n};\nconst _hoisted_17 = {\n  key: 0,\n  class: \"panel__error\"\n};\nconst _hoisted_18 = {\n  key: 1\n};\nconst _hoisted_19 = {\n  class: \"nodes-chart-wrapper\"\n};\nconst _hoisted_20 = {\n  key: 0,\n  class: \"nodes\"\n};\nconst _hoisted_21 = {\n  class: \"nodes__header\"\n};\nconst _hoisted_22 = {\n  class: \"nodes__metrics\"\n};\nconst _hoisted_23 = {\n  class: \"nodes__metric\"\n};\nconst _hoisted_24 = {\n  class: \"nodes__metric\"\n};\nconst _hoisted_25 = {\n  class: \"nodes__meta\"\n};\nconst _hoisted_26 = {\n  key: 0,\n  class: \"panel__error\"\n};\nconst _hoisted_27 = {\n  class: \"event\"\n};\nconst _hoisted_28 = {\n  class: \"event__title\"\n};\nconst _hoisted_29 = {\n  class: \"event__meta\"\n};\nexport function render(_ctx, _cache) {\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_CaretTop = _resolveComponent(\"CaretTop\");\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_CaretBottom = _resolveComponent(\"CaretBottom\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_radio_button = _resolveComponent(\"el-radio-button\");\n  const _component_el_radio_group = _resolveComponent(\"el-radio-group\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_result = _resolveComponent(\"el-result\");\n  const _component_BaseChart = _resolveComponent(\"BaseChart\");\n  const _component_el_empty = _resolveComponent(\"el-empty\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_progress = _resolveComponent(\"el-progress\");\n  const _component_el_timeline_item = _resolveComponent(\"el-timeline-item\");\n  const _component_el_timeline = _resolveComponent(\"el-timeline\");\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"section\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.overviewCards, card => {\n    return _openBlock(), _createBlock(_component_el_card, {\n      key: card.key,\n      shadow: \"hover\",\n      class: \"dashboard__card\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"span\", _hoisted_4, _toDisplayString(card.title), 1 /* TEXT */), _createVNode(_component_el_tag, {\n        type: card.tagType,\n        size: \"small\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(card.tagText), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"span\", _hoisted_6, _toDisplayString(card.value), 1 /* TEXT */), card.trend !== null ? (_openBlock(), _createElementBlock(\"span\", {\n        key: 0,\n        class: _normalizeClass(['card__trend', {\n          'card__trend--down': card.trend < 0\n        }])\n      }, [card.trend >= 0 ? (_openBlock(), _createBlock(_component_el_icon, {\n        key: 0\n      }, {\n        default: _withCtx(() => [_createVNode(_component_CaretTop)]),\n        _: 1 /* STABLE */\n      })) : (_openBlock(), _createBlock(_component_el_icon, {\n        key: 1\n      }, {\n        default: _withCtx(() => [_createVNode(_component_CaretBottom)]),\n        _: 1 /* STABLE */\n      })), _createTextVNode(\" \" + _toDisplayString(Math.abs(card.trend).toFixed(1)) + \"% \", 1 /* TEXT */)], 2 /* CLASS */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_7, _toDisplayString(card.subtitle), 1 /* TEXT */)]),\n      _: 2 /* DYNAMIC */\n    }, 1024 /* DYNAMIC_SLOTS */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"section\", _hoisted_8, [_withDirectives((_openBlock(), _createBlock(_component_el_card, {\n    shadow: \"hover\",\n    class: \"dashboard__panel\"\n  }, {\n    header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_9, [_cache[1] || (_cache[1] = _createElementVNode(\"span\", null, \"过去 24 小时任务执行趋势\", -1 /* CACHED */)), _createVNode(_component_el_radio_group, {\n      modelValue: _ctx.metricRange,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.metricRange = $event),\n      size: \"small\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_radio_button, {\n        label: \"24h\"\n      }), _createVNode(_component_el_radio_button, {\n        label: \"7d\"\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\"])])]),\n    default: _withCtx(() => [_ctx.metricError ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createVNode(_component_el_result, {\n      status: _ctx.metricError.forbidden ? 'warning' : 'error',\n      title: _ctx.metricError.forbidden ? '无访问权限' : '统计加载失败',\n      \"sub-title\": _ctx.metricError.message\n    }, {\n      extra: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        size: \"small\",\n        onClick: _ctx.reloadMetrics\n      }, {\n        default: _withCtx(() => [...(_cache[2] || (_cache[2] = [_createTextVNode(\"重试\", -1 /* CACHED */)]))]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"status\", \"title\", \"sub-title\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_ctx.trendHasData ? (_openBlock(), _createBlock(_component_BaseChart, {\n      key: 0,\n      options: _ctx.trendChartOptions,\n      class: \"trend-panel__chart\"\n    }, null, 8 /* PROPS */, [\"options\"])) : (_openBlock(), _createBlock(_component_el_empty, {\n      key: 1,\n      description: \"暂无执行趋势数据\"\n    }))]))]),\n    _: 1 /* STABLE */\n  })), [[_directive_loading, _ctx.loadingMetrics]]), _withDirectives((_openBlock(), _createBlock(_component_el_card, {\n    shadow: \"hover\",\n    class: \"dashboard__panel\"\n  }, {\n    header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_12, [_cache[4] || (_cache[4] = _createElementVNode(\"span\", null, \"Top 告警任务\", -1 /* CACHED */)), _createVNode(_component_el_button, {\n      type: \"primary\",\n      link: \"\",\n      onClick: _ctx.navigateToTaskCenter\n    }, {\n      default: _withCtx(() => [...(_cache[3] || (_cache[3] = [_createTextVNode(\"查看全部\", -1 /* CACHED */)]))]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])])]),\n    default: _withCtx(() => [_ctx.metricError ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_createVNode(_component_el_result, {\n      status: _ctx.metricError.forbidden ? 'warning' : 'error',\n      title: _ctx.metricError.forbidden ? '无访问权限' : '统计加载失败',\n      \"sub-title\": _ctx.metricError.message\n    }, {\n      extra: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        size: \"small\",\n        onClick: _ctx.reloadMetrics\n      }, {\n        default: _withCtx(() => [...(_cache[5] || (_cache[5] = [_createTextVNode(\"重试\", -1 /* CACHED */)]))]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"status\", \"title\", \"sub-title\"])])) : (_openBlock(), _createBlock(_component_el_table, {\n      key: 1,\n      data: _ctx.topFailedTasks,\n      size: \"small\",\n      height: \"300\"\n    }, {\n      empty: _withCtx(() => [_createVNode(_component_el_empty, {\n        description: \"暂无告警任务\"\n      })]),\n      default: _withCtx(() => [_createVNode(_component_el_table_column, {\n        prop: \"name\",\n        label: \"任务名称\",\n        \"min-width\": \"160\",\n        \"show-overflow-tooltip\": \"\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"owner\",\n        label: \"负责人\",\n        width: \"120\"\n      }), _createVNode(_component_el_table_column, {\n        label: \"失败次数\",\n        width: \"100\"\n      }, {\n        default: _withCtx(({\n          row\n        }) => [_createVNode(_component_el_tag, {\n          type: \"danger\",\n          effect: \"dark\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(row.failed), 1 /* TEXT */)]),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_table_column, {\n        label: \"最后失败时间\",\n        width: \"160\"\n      }, {\n        default: _withCtx(({\n          row\n        }) => [_createTextVNode(_toDisplayString(row.lastFailed), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"data\"]))]),\n    _: 1 /* STABLE */\n  })), [[_directive_loading, _ctx.loadingMetrics]])]), _createElementVNode(\"section\", _hoisted_14, [_withDirectives((_openBlock(), _createBlock(_component_el_card, {\n    shadow: \"hover\",\n    class: \"dashboard__panel\"\n  }, {\n    header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_15, [_cache[7] || (_cache[7] = _createElementVNode(\"span\", null, \"执行器节点健康度\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_16, [_createVNode(_component_el_tag, {\n      type: _ctx.nodeHealthTag,\n      size: \"small\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.nodesStatusLabel), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"type\"]), _createVNode(_component_el_button, {\n      type: \"primary\",\n      link: \"\",\n      size: \"small\",\n      onClick: _ctx.reloadNodes\n    }, {\n      default: _withCtx(() => [...(_cache[6] || (_cache[6] = [_createTextVNode(\"刷新\", -1 /* CACHED */)]))]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])])])]),\n    default: _withCtx(() => [_ctx.nodePanelError ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [_createVNode(_component_el_result, {\n      status: _ctx.nodePanelError.forbidden ? 'warning' : 'error',\n      title: _ctx.nodePanelError.forbidden ? '无访问权限' : '节点数据加载失败',\n      \"sub-title\": _ctx.nodePanelError.message\n    }, {\n      extra: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        size: \"small\",\n        onClick: _ctx.reloadNodes\n      }, {\n        default: _withCtx(() => [...(_cache[8] || (_cache[8] = [_createTextVNode(\"重试\", -1 /* CACHED */)]))]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"status\", \"title\", \"sub-title\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [_createElementVNode(\"div\", _hoisted_19, [_ctx.nodeChartHasData ? (_openBlock(), _createBlock(_component_BaseChart, {\n      key: 0,\n      options: _ctx.nodeChartOptions,\n      class: \"nodes-chart\"\n    }, null, 8 /* PROPS */, [\"options\"])) : (_openBlock(), _createBlock(_component_el_empty, {\n      key: 1,\n      description: \"暂无节点资源数据\"\n    }))]), _ctx.nodeList.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_20, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.nodeList, node => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: node.id,\n        class: \"nodes__item\"\n      }, [_createElementVNode(\"div\", _hoisted_21, [_createElementVNode(\"span\", null, _toDisplayString(node.name), 1 /* TEXT */), _createVNode(_component_el_tag, {\n        type: node.status === 'ONLINE' ? 'success' : 'danger',\n        size: \"small\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(node.status === 'ONLINE' ? '在线' : '离线'), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])]), _createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"div\", _hoisted_23, [_cache[9] || (_cache[9] = _createElementVNode(\"span\", null, \"CPU\", -1 /* CACHED */)), _createVNode(_component_el_progress, {\n        percentage: node.cpu,\n        status: node.cpu > 80 ? 'exception' : 'success'\n      }, null, 8 /* PROPS */, [\"percentage\", \"status\"])]), _createElementVNode(\"div\", _hoisted_24, [_cache[10] || (_cache[10] = _createElementVNode(\"span\", null, \"内存\", -1 /* CACHED */)), _createVNode(_component_el_progress, {\n        percentage: node.memory,\n        status: node.memory > 80 ? 'exception' : 'warning'\n      }, null, 8 /* PROPS */, [\"percentage\", \"status\"])]), _createElementVNode(\"div\", _hoisted_25, [_createElementVNode(\"span\", null, \"运行中 \" + _toDisplayString(node.runningTasks), 1 /* TEXT */), _createElementVNode(\"span\", null, \"延迟 \" + _toDisplayString(node.delay) + \"ms\", 1 /* TEXT */)])])]);\n    }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createBlock(_component_el_empty, {\n      key: 1,\n      description: \"暂无执行节点\"\n    }))]))]),\n    _: 1 /* STABLE */\n  })), [[_directive_loading, _ctx.nodeMetricsLoading || _ctx.nodesLoading]]), _withDirectives((_openBlock(), _createBlock(_component_el_card, {\n    shadow: \"hover\",\n    class: \"dashboard__panel\"\n  }, {\n    header: _withCtx(() => [...(_cache[11] || (_cache[11] = [_createElementVNode(\"div\", {\n      class: \"panel__header\"\n    }, [_createElementVNode(\"span\", null, \"最新调度事件\")], -1 /* CACHED */)]))]),\n    default: _withCtx(() => [_ctx.metricError ? (_openBlock(), _createElementBlock(\"div\", _hoisted_26, [_createVNode(_component_el_result, {\n      status: _ctx.metricError.forbidden ? 'warning' : 'error',\n      title: _ctx.metricError.forbidden ? '无访问权限' : '统计加载失败',\n      \"sub-title\": _ctx.metricError.message\n    }, {\n      extra: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        size: \"small\",\n        onClick: _ctx.reloadMetrics\n      }, {\n        default: _withCtx(() => [...(_cache[12] || (_cache[12] = [_createTextVNode(\"重试\", -1 /* CACHED */)]))]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"status\", \"title\", \"sub-title\"])])) : _ctx.recentEventsHasData ? (_openBlock(), _createBlock(_component_el_timeline, {\n      key: 1\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.recentEvents, event => {\n        return _openBlock(), _createBlock(_component_el_timeline_item, {\n          key: event.id,\n          timestamp: event.time,\n          type: event.type\n        }, {\n          default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_27, [_createElementVNode(\"div\", _hoisted_28, [_createElementVNode(\"span\", null, _toDisplayString(event.title), 1 /* TEXT */), _createVNode(_component_el_tag, {\n            type: event.tagType,\n            size: \"small\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(event.tagLabel), 1 /* TEXT */)]),\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])]), _createElementVNode(\"div\", _hoisted_29, _toDisplayString(event.desc), 1 /* TEXT */)])]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"timestamp\", \"type\"]);\n      }), 128 /* KEYED_FRAGMENT */))]),\n      _: 1 /* STABLE */\n    })) : (_openBlock(), _createBlock(_component_el_empty, {\n      key: 2,\n      description: \"暂无调度事件\"\n    }))]),\n    _: 1 /* STABLE */\n  })), [[_directive_loading, _ctx.loadingMetrics]])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_Fragment","_renderList","_ctx","overviewCards","card","_createBlock","_component_el_card","key","shadow","_hoisted_3","_hoisted_4","_toDisplayString","title","_createVNode","_component_el_tag","type","tagType","size","tagText","_hoisted_5","_hoisted_6","value","trend","_normalizeClass","_component_el_icon","_component_CaretTop","_component_CaretBottom","Math","abs","toFixed","_hoisted_7","subtitle","_hoisted_8","header","_withCtx","_hoisted_9","_component_el_radio_group","metricRange","$event","_component_el_radio_button","label","metricError","_hoisted_10","_component_el_result","status","forbidden","message","extra","_component_el_button","onClick","reloadMetrics","_cache","_hoisted_11","trendHasData","_component_BaseChart","options","trendChartOptions","_component_el_empty","description","loadingMetrics","_hoisted_12","link","navigateToTaskCenter","_hoisted_13","_component_el_table","data","topFailedTasks","height","empty","_component_el_table_column","prop","width","default","row","effect","failed","lastFailed","_hoisted_14","_hoisted_15","_hoisted_16","nodeHealthTag","nodesStatusLabel","reloadNodes","nodePanelError","_hoisted_17","_hoisted_18","_hoisted_19","nodeChartHasData","nodeChartOptions","nodeList","length","_hoisted_20","node","id","_hoisted_21","name","_hoisted_22","_hoisted_23","_component_el_progress","percentage","cpu","_hoisted_24","memory","_hoisted_25","runningTasks","delay","nodeMetricsLoading","nodesLoading","_hoisted_26","recentEventsHasData","_component_el_timeline","recentEvents","event","_component_el_timeline_item","timestamp","time","_hoisted_27","_hoisted_28","tagLabel","_hoisted_29","desc"],"sources":["D:\\桌面\\项目\\分布式任务调度系统\\SkyTask\\skytask-frontend\\src\\views\\DashboardView.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard\">\n    <section class=\"dashboard__row\">\n      <el-card\n        v-for=\"card in overviewCards\"\n        :key=\"card.key\"\n        shadow=\"hover\"\n        class=\"dashboard__card\"\n      >\n        <div class=\"card__header\">\n          <span class=\"card__title\">{{ card.title }}</span>\n          <el-tag :type=\"card.tagType\" size=\"small\">{{ card.tagText }}</el-tag>\n        </div>\n        <div class=\"card__metrics\">\n          <span class=\"card__value\">{{ card.value }}</span>\n          <span\n            v-if=\"card.trend !== null\"\n            :class=\"['card__trend', { 'card__trend--down': card.trend < 0 }]\"\n          >\n            <el-icon v-if=\"card.trend >= 0\"><CaretTop /></el-icon>\n            <el-icon v-else><CaretBottom /></el-icon>\n            {{ Math.abs(card.trend).toFixed(1) }}%\n          </span>\n        </div>\n        <div class=\"card__subtitle\">{{ card.subtitle }}</div>\n      </el-card>\n    </section>\n\n    <section class=\"dashboard__row\">\n      <el-card shadow=\"hover\" class=\"dashboard__panel\" v-loading=\"loadingMetrics\">\n        <template #header>\n          <div class=\"panel__header\">\n            <span>过去 24 小时任务执行趋势</span>\n            <el-radio-group v-model=\"metricRange\" size=\"small\">\n              <el-radio-button label=\"24h\" />\n              <el-radio-button label=\"7d\" />\n            </el-radio-group>\n          </div>\n        </template>\n        <div v-if=\"metricError\" class=\"panel__error\">\n          <el-result\n            :status=\"metricError.forbidden ? 'warning' : 'error'\"\n            :title=\"metricError.forbidden ? '无访问权限' : '统计加载失败'\"\n            :sub-title=\"metricError.message\"\n          >\n            <template #extra>\n              <el-button type=\"primary\" size=\"small\" @click=\"reloadMetrics\">重试</el-button>\n            </template>\n          </el-result>\n        </div>\n        <div v-else class=\"trend-panel\">\n          <BaseChart\n            v-if=\"trendHasData\"\n            :options=\"trendChartOptions\"\n            class=\"trend-panel__chart\"\n          />\n          <el-empty v-else description=\"暂无执行趋势数据\" />\n        </div>\n      </el-card>\n\n      <el-card shadow=\"hover\" class=\"dashboard__panel\" v-loading=\"loadingMetrics\">\n        <template #header>\n          <div class=\"panel__header\">\n            <span>Top 告警任务</span>\n            <el-button type=\"primary\" link @click=\"navigateToTaskCenter\">查看全部</el-button>\n          </div>\n        </template>\n        <div v-if=\"metricError\" class=\"panel__error\">\n          <el-result\n            :status=\"metricError.forbidden ? 'warning' : 'error'\"\n            :title=\"metricError.forbidden ? '无访问权限' : '统计加载失败'\"\n            :sub-title=\"metricError.message\"\n          >\n            <template #extra>\n              <el-button type=\"primary\" size=\"small\" @click=\"reloadMetrics\">重试</el-button>\n            </template>\n          </el-result>\n        </div>\n        <el-table v-else :data=\"topFailedTasks\" size=\"small\" height=\"300\">\n          <el-table-column prop=\"name\" label=\"任务名称\" min-width=\"160\" show-overflow-tooltip />\n          <el-table-column prop=\"owner\" label=\"负责人\" width=\"120\" />\n          <el-table-column label=\"失败次数\" width=\"100\">\n            <template #default=\"{ row }\">\n              <el-tag type=\"danger\" effect=\"dark\">{{ row.failed }}</el-tag>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"最后失败时间\" width=\"160\">\n            <template #default=\"{ row }\">{{ row.lastFailed }}</template>\n          </el-table-column>\n          <template #empty>\n            <el-empty description=\"暂无告警任务\" />\n          </template>\n        </el-table>\n      </el-card>\n    </section>\n\n    <section class=\"dashboard__row\">\n      <el-card\n        shadow=\"hover\"\n        class=\"dashboard__panel\"\n        v-loading=\"nodeMetricsLoading || nodesLoading\"\n      >\n        <template #header>\n          <div class=\"panel__header\">\n            <span>执行器节点健康度</span>\n            <div class=\"panel__header-actions\">\n              <el-tag :type=\"nodeHealthTag\" size=\"small\">{{ nodesStatusLabel }}</el-tag>\n              <el-button type=\"primary\" link size=\"small\" @click=\"reloadNodes\">刷新</el-button>\n            </div>\n          </div>\n        </template>\n        <div v-if=\"nodePanelError\" class=\"panel__error\">\n          <el-result\n            :status=\"nodePanelError.forbidden ? 'warning' : 'error'\"\n            :title=\"nodePanelError.forbidden ? '无访问权限' : '节点数据加载失败'\"\n            :sub-title=\"nodePanelError.message\"\n          >\n            <template #extra>\n              <el-button type=\"primary\" size=\"small\" @click=\"reloadNodes\">重试</el-button>\n            </template>\n          </el-result>\n        </div>\n        <div v-else>\n          <div class=\"nodes-chart-wrapper\">\n            <BaseChart\n              v-if=\"nodeChartHasData\"\n              :options=\"nodeChartOptions\"\n              class=\"nodes-chart\"\n            />\n            <el-empty v-else description=\"暂无节点资源数据\" />\n          </div>\n          <div v-if=\"nodeList.length\" class=\"nodes\">\n            <div v-for=\"node in nodeList\" :key=\"node.id\" class=\"nodes__item\">\n              <div class=\"nodes__header\">\n                <span>{{ node.name }}</span>\n                <el-tag :type=\"node.status === 'ONLINE' ? 'success' : 'danger'\" size=\"small\">\n                  {{ node.status === 'ONLINE' ? '在线' : '离线' }}\n                </el-tag>\n              </div>\n              <div class=\"nodes__metrics\">\n                <div class=\"nodes__metric\">\n                  <span>CPU</span>\n                  <el-progress :percentage=\"node.cpu\" :status=\"node.cpu > 80 ? 'exception' : 'success'\" />\n                </div>\n                <div class=\"nodes__metric\">\n                  <span>内存</span>\n                  <el-progress\n                    :percentage=\"node.memory\"\n                    :status=\"node.memory > 80 ? 'exception' : 'warning'\"\n                  />\n                </div>\n                <div class=\"nodes__meta\">\n                  <span>运行中 {{ node.runningTasks }}</span>\n                  <span>延迟 {{ node.delay }}ms</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <el-empty v-else description=\"暂无执行节点\" />\n        </div>\n      </el-card>\n\n      <el-card shadow=\"hover\" class=\"dashboard__panel\" v-loading=\"loadingMetrics\">\n        <template #header>\n          <div class=\"panel__header\">\n            <span>最新调度事件</span>\n          </div>\n        </template>\n        <div v-if=\"metricError\" class=\"panel__error\">\n          <el-result\n            :status=\"metricError.forbidden ? 'warning' : 'error'\"\n            :title=\"metricError.forbidden ? '无访问权限' : '统计加载失败'\"\n            :sub-title=\"metricError.message\"\n          >\n            <template #extra>\n              <el-button type=\"primary\" size=\"small\" @click=\"reloadMetrics\">重试</el-button>\n            </template>\n          </el-result>\n        </div>\n        <el-timeline v-else-if=\"recentEventsHasData\">\n          <el-timeline-item\n            v-for=\"event in recentEvents\"\n            :key=\"event.id\"\n            :timestamp=\"event.time\"\n            :type=\"event.type\"\n          >\n            <div class=\"event\">\n              <div class=\"event__title\">\n                <span>{{ event.title }}</span>\n                <el-tag :type=\"event.tagType\" size=\"small\">{{ event.tagLabel }}</el-tag>\n              </div>\n              <div class=\"event__meta\">{{ event.desc }}</div>\n            </div>\n          </el-timeline-item>\n        </el-timeline>\n        <el-empty v-else description=\"暂无调度事件\" />\n      </el-card>\n    </section>\n  </div>\n</template>\n\n<script setup>\nimport { computed, onMounted, ref, watch } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport { useStore } from \"vuex\";\nimport { ElMessage } from \"element-plus\";\nimport { CaretBottom, CaretTop } from \"@element-plus/icons-vue\";\nimport BaseChart from \"../components/charts/BaseChart.vue\";\n\nconst router = useRouter();\nconst store = useStore();\n\nconst metricRange = ref(\"24h\");\nconst loadingMetrics = ref(false);\nconst metricError = ref(null);\nconst nodeMetricsLoading = ref(false);\nconst nodeMetricsError = ref(null);\nconst nodeListError = ref(null);\n\nconst parseError = (error) => error?.response?.data?.message || error?.message || \"请求失败\";\nconst isForbidden = (error) => Number(error?.response?.status) === 403;\n\nconst loadTaskMetrics = async (params = {}) => {\n  loadingMetrics.value = true;\n  try {\n    await store.dispatch(\"tasks/loadMetrics\", params);\n    metricError.value = null;\n  } catch (error) {\n    const forbidden = isForbidden(error);\n    metricError.value = {\n      message: forbidden ? \"当前账号无权限查看任务统计\" : parseError(error),\n      forbidden\n    };\n    ElMessage[forbidden ? \"warning\" : \"error\"](metricError.value.message);\n  } finally {\n    loadingMetrics.value = false;\n  }\n};\n\nconst loadNodeMetricsData = async () => {\n  nodeMetricsLoading.value = true;\n  try {\n    await store.dispatch(\"nodes/loadNodeMetrics\");\n    nodeMetricsError.value = null;\n  } catch (error) {\n    const forbidden = isForbidden(error);\n    nodeMetricsError.value = {\n      message: forbidden ? \"当前账号无权限查看节点指标\" : parseError(error),\n      forbidden\n    };\n    ElMessage[forbidden ? \"warning\" : \"error\"](nodeMetricsError.value.message);\n  } finally {\n    nodeMetricsLoading.value = false;\n  }\n};\n\nconst loadNodesData = async () => {\n  try {\n    await store.dispatch(\"nodes/loadNodes\");\n    nodeListError.value = null;\n  } catch (error) {\n    const forbidden = isForbidden(error);\n    nodeListError.value = {\n      message: forbidden ? \"当前账号无权限查看节点列表\" : parseError(error),\n      forbidden\n    };\n    ElMessage[forbidden ? \"warning\" : \"error\"](nodeListError.value.message);\n  }\n};\n\nconst reloadMetrics = () => loadTaskMetrics({ range: metricRange.value });\nconst reloadNodes = () => Promise.all([loadNodeMetricsData(), loadNodesData()]);\n\nonMounted(async () => {\n  await Promise.all([\n    loadTaskMetrics({ range: metricRange.value }),\n    loadNodeMetricsData(),\n    loadNodesData()\n  ]);\n});\n\nwatch(metricRange, (range) => {\n  loadTaskMetrics({ range });\n});\n\nconst metrics = computed(() => store.getters[\"tasks/taskMetrics\"] || {});\nconst nodeMetrics = computed(() => store.getters[\"nodes/nodeMetrics\"] || {});\nconst nodeList = computed(() => store.getters[\"nodes/nodeList\"] || []);\nconst nodesLoading = computed(() => store.getters[\"nodes/nodesLoading\"]);\n\nconst normalizedTrend = computed(() =>\n  (metrics.value.trend || [])\n    .map((item) => ({\n      time: item.time ?? item.timestamp ?? \"\",\n      successRate: Number(item.successRate ?? item.success_rate ?? 0),\n      failedRate: Number(item.failedRate ?? item.failed_rate ?? 0)\n    }))\n    .filter((item) => item.time)\n);\n\nconst trendHasData = computed(() => normalizedTrend.value.length > 0);\n\nconst trendChartOptions = computed(() => {\n  if (!trendHasData.value) {\n    return {};\n  }\n  const categories = normalizedTrend.value.map((item) => item.time);\n  const successSeries = normalizedTrend.value.map((item) => Number(item.successRate.toFixed(2)));\n  const failedSeries = normalizedTrend.value.map((item) => Number(item.failedRate.toFixed(2)));\n  return {\n    color: [\"#22c55e\", \"#ef4444\"],\n    tooltip: {\n      trigger: \"axis\",\n      formatter: (params) =>\n        params.map((p) => `${p.marker}${p.seriesName}: ${Number(p.value).toFixed(2)}%`).join(\"<br/>\")\n    },\n    legend: {\n      data: [\"成功率\", \"失败率\"]\n    },\n    grid: { left: 40, right: 24, top: 30, bottom: 40 },\n    xAxis: {\n      type: \"category\",\n      boundaryGap: false,\n      data: categories\n    },\n    yAxis: {\n      type: \"value\",\n      min: 0,\n      max: 100,\n      axisLabel: { formatter: \"{value}%\" }\n    },\n    series: [\n      {\n        name: \"成功率\",\n        type: \"line\",\n        smooth: true,\n        areaStyle: { opacity: 0.12 },\n        data: successSeries\n      },\n      {\n        name: \"失败率\",\n        type: \"line\",\n        smooth: true,\n        areaStyle: { opacity: 0.08 },\n        data: failedSeries\n      }\n    ]\n  };\n});\n\nconst nodeChartHasData = computed(() => nodeList.value.length > 0);\n\nconst nodeChartOptions = computed(() => {\n  if (!nodeChartHasData.value) {\n    return {};\n  }\n  const names = nodeList.value.map((node) => node.name || node.id);\n  return {\n    color: [\"#38bdf8\", \"#f97316\"],\n    tooltip: { trigger: \"axis\" },\n    legend: { data: [\"CPU\", \"内存\"] },\n    grid: { left: 40, right: 24, top: 30, bottom: 50 },\n    xAxis: { type: \"category\", data: names },\n    yAxis: {\n      type: \"value\",\n      min: 0,\n      max: 100,\n      axisLabel: { formatter: \"{value}%\" }\n    },\n    series: [\n      {\n        name: \"CPU\",\n        type: \"bar\",\n        barMaxWidth: 28,\n        data: nodeList.value.map((node) => Number(node.cpu ?? 0))\n      },\n      {\n        name: \"内存\",\n        type: \"bar\",\n        barMaxWidth: 28,\n        data: nodeList.value.map((node) => Number(node.memory ?? 0))\n      }\n    ]\n  };\n});\n\nconst successTrendDelta = computed(() => {\n  if (!trendHasData.value || normalizedTrend.value.length < 2) {\n    return 0;\n  }\n  const values = normalizedTrend.value.map((item) => item.successRate);\n  return Number((values[values.length - 1] - values[0]).toFixed(1));\n});\n\nconst failureTrendDelta = computed(() => {\n  if (!trendHasData.value || normalizedTrend.value.length < 2) {\n    return 0;\n  }\n  const values = normalizedTrend.value.map((item) => item.failedRate);\n  return Number((values[values.length - 1] - values[0]).toFixed(1));\n});\n\nconst overviewCards = computed(() => {\n  const totalTasks = metrics.value.totalTasks ?? 0;\n  const inactiveTasks = metrics.value.inactiveTasks ?? 0;\n  const successRate = Number(metrics.value.successRate ?? 0).toFixed(1);\n  const failedToday = metrics.value.failedToday ?? 0;\n  const backlog = metrics.value.backlog ?? 0;\n\n  return [\n    {\n      key: \"total\",\n      title: \"任务总数\",\n      value: totalTasks,\n      tagType: \"primary\",\n      tagText: `停用 ${inactiveTasks}`,\n      trend: null,\n      subtitle: \"当前租户下所有任务数量\"\n    },\n    {\n      key: \"success\",\n      title: \"成功率\",\n      value: `${successRate}%`,\n      tagType: \"success\",\n      tagText: metricRange.value === \"7d\" ? \"最近 7 天\" : \"最近 24 小时\",\n      trend: successTrendDelta.value,\n      subtitle: successTrendDelta.value === 0 ? \"暂无波动\" : \"相较起始点的变化\"\n    },\n    {\n      key: \"failed\",\n      title: \"今日失败\",\n      value: failedToday,\n      tagType: \"danger\",\n      tagText: \"累计\",\n      trend: failureTrendDelta.value,\n      subtitle: \"自动降级会在阈值达到时触发\"\n    },\n    {\n      key: \"backlog\",\n      title: \"积压任务\",\n      value: backlog,\n      tagType: \"warning\",\n      tagText: \"待处理\",\n      trend: null,\n      subtitle: \"需要关注的等待或重试任务\"\n    }\n  ];\n});\n\nconst topFailedTasks = computed(() =>\n  (metrics.value.topFailed || []).map((item) => ({\n    id: item.id ?? `${item.name}-${item.taskId ?? ''}`,\n    name: item.name ?? \"-\",\n    owner: item.owner ?? \"-\",\n    failed: item.failed ?? 0,\n    lastFailed: item.lastFailed ?? \"-\"\n  }))\n);\n\\n\nconst recentEvents = computed(() =>\n  (metrics.value.recentEvents || []).map((event) => ({\n    id: event.id ?? `${event.title ?? 'event'}-${event.time ?? ''}`,\n    time: event.time ?? \"-\",\n    type: event.type ?? \"info\",\n    title: event.title ?? \"调度事件\",\n    tagLabel: event.tagLabel ?? \"\",\n    tagType: event.tagType ?? \"info\",\n    desc: event.desc ?? \"\"\n  }))\n);\n\nconst recentEventsHasData = computed(() => recentEvents.value.length > 0);\n\nconst nodesStatusLabel = computed(() => {\n  const online = nodeMetrics.value.onlineNodes ?? 0;\n  const total = nodeMetrics.value.totalNodes ?? 0;\n  const offline = nodeMetrics.value.offlineNodes ?? 0;\n  return `在线 ${online}/${total} | 离线 ${offline}`;\n});\n\nconst nodeHealthTag = computed(() => (nodeMetrics.value.offlineNodes > 0 ? \"danger\" : \"success\"));\nconst nodePanelError = computed(() => nodeMetricsError.value || nodeListError.value);\n\nconst navigateToTaskCenter = () => {\n  router.push(\"/tasks\");\n};\n</script>\n\n<style scoped lang=\"scss\">\n.dashboard {\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n\n  &__row {\n    display: grid;\n    grid-template-columns: repeat(2, minmax(0, 1fr));\n    gap: 24px;\n  }\n\n  &__card {\n    border-radius: 16px;\n\n    .card__header {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      margin-bottom: 12px;\n    }\n\n    .card__title {\n      font-size: 16px;\n      font-weight: 600;\n      color: #0f172a;\n    }\n\n    .card__metrics {\n      display: flex;\n      align-items: baseline;\n      gap: 12px;\n    }\n\n    .card__value {\n      font-size: 28px;\n      font-weight: 700;\n      color: #111827;\n    }\n\n    .card__trend {\n      display: inline-flex;\n      align-items: center;\n      gap: 4px;\n      color: #16a34a;\n      font-weight: 500;\n\n      &--down {\n        color: #ef4444;\n      }\n    }\n\n    .card__subtitle {\n      margin-top: 6px;\n      font-size: 12px;\n      color: #64748b;\n    }\n  }\n}\n\n.dashboard__panel {\n  border-radius: 16px;\n  min-height: 320px;\n}\n\n.panel__header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.panel__header-actions {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.panel__error {\n  padding: 32px 0;\n}\n\n.trend-panel {\n  min-height: 260px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &__chart {\n    width: 100%;\n    height: 260px;\n  }\n}\n\n.nodes-chart-wrapper {\n  height: 260px;\n  margin-bottom: 16px;\n}\n\n.nodes-chart {\n  width: 100%;\n  height: 100%;\n}\n\n.nodes {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n\n  &__item {\n    padding: 16px;\n    border: 1px solid rgba(15, 23, 42, 0.08);\n    border-radius: 12px;\n    background: rgba(15, 23, 42, 0.02);\n  }\n\n  &__header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 12px;\n    font-weight: 600;\n    color: #1e293b;\n  }\n\n  &__metrics {\n    display: flex;\n    flex-direction: column;\n    gap: 12px;\n  }\n\n  &__metric {\n    display: flex;\n    flex-direction: column;\n    gap: 6px;\n    font-size: 13px;\n    color: #475569;\n  }\n\n  &__meta {\n    display: flex;\n    justify-content: space-between;\n    color: #64748b;\n    font-size: 13px;\n  }\n}\n\n.event {\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n\n  &__title {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-weight: 600;\n  }\n\n  &__meta {\n    font-size: 12px;\n    color: #64748b;\n  }\n}\n</style>\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
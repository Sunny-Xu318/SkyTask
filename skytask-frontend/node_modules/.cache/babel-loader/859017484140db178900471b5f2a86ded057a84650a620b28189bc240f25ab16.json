{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport { computed, ref, watch } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport { Setting, Monitor, Collection, Cpu } from '@element-plus/icons-vue';\nexport default {\n  __name: 'App',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const route = useRoute();\n    const store = useStore();\n    const layoutSize = ref('default');\n    const activeEnv = ref(store.getters['auth/currentEnv']);\n    const environments = computed(() => store.getters['auth/environments']);\n    const activeMenu = computed(() => route.path);\n    const breadcrumb = computed(() => store.getters['ui/breadcrumbs']);\n    const activeEnvLabel = computed(() => {\n      const env = environments.value.find(item => item.value === activeEnv.value);\n      return env ? env.label : '未知环境';\n    });\n    watch(() => route.meta?.breadcrumbs, crumbs => {\n      store.dispatch('ui/setBreadcrumbs', crumbs || []);\n    }, {\n      immediate: true\n    });\n    watch(activeEnv, env => {\n      store.dispatch('auth/changeEnv', env);\n      router.replace({\n        query: {\n          ...route.query,\n          env\n        }\n      });\n    });\n    const setting = Setting;\n    const monitor = Monitor;\n    const collection = Collection;\n    const cpu = Cpu;\n    const __returned__ = {\n      router,\n      route,\n      store,\n      layoutSize,\n      activeEnv,\n      environments,\n      activeMenu,\n      breadcrumb,\n      activeEnvLabel,\n      setting,\n      monitor,\n      collection,\n      cpu,\n      computed,\n      ref,\n      watch,\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get useStore() {\n        return useStore;\n      },\n      get Setting() {\n        return Setting;\n      },\n      get Monitor() {\n        return Monitor;\n      },\n      get Collection() {\n        return Collection;\n      },\n      get Cpu() {\n        return Cpu;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","ref","watch","useRoute","useRouter","useStore","Setting","Monitor","Collection","Cpu","router","route","store","layoutSize","activeEnv","getters","environments","activeMenu","path","breadcrumb","activeEnvLabel","env","value","find","item","label","meta","breadcrumbs","crumbs","dispatch","immediate","replace","query","setting","monitor","collection","cpu"],"sources":["D:/桌面/项目/分布式任务调度系统/SkyTask/skytask-frontend/src/App.vue"],"sourcesContent":["<template>\n  <el-config-provider :size=\"layoutSize\">\n    <div class=\"layout\">\n      <el-container>\n        <el-aside width=\"220px\" class=\"sidebar\">\n          <div class=\"brand\">\n            <span class=\"brand__name\">SkyTask 控制台</span>\n            <span class=\"brand__env\">{{ activeEnvLabel }}</span>\n          </div>\n          <el-menu\n            :default-active=\"activeMenu\"\n            class=\"menu\"\n            router\n            background-color=\"#0f172a\"\n            text-color=\"#f1f5f9\"\n            active-text-color=\"#22d3ee\"\n          >\n            <el-menu-item index=\"/dashboard\">\n              <el-icon><monitor /></el-icon>\n              <span>总览监控</span>\n            </el-menu-item>\n            <el-menu-item index=\"/tasks\">\n              <el-icon><collection /></el-icon>\n              <span>任务中心</span>\n            </el-menu-item>\n            <el-menu-item index=\"/nodes\">\n              <el-icon><cpu /></el-icon>\n              <span>执行器节点</span>\n            </el-menu-item>\n            <el-menu-item index=\"/config\">\n              <el-icon><setting /></el-icon>\n              <span>配置与告警</span>\n            </el-menu-item>\n          </el-menu>\n        </el-aside>\n        <el-container>\n          <el-header class=\"header\">\n            <div class=\"header__left\">\n              <el-breadcrumb separator=\"/\">\n                <el-breadcrumb-item v-for=\"item in breadcrumb\" :key=\"item.path\">\n                  <router-link :to=\"item.path\">{{ item.title }}</router-link>\n                </el-breadcrumb-item>\n              </el-breadcrumb>\n            </div>\n            <div class=\"header__right\">\n              <el-select\n                v-model=\"activeEnv\"\n                placeholder=\"选择环境\"\n                size=\"small\"\n                class=\"env-selector\"\n              >\n                <el-option\n                  v-for=\"env in environments\"\n                  :key=\"env.value\"\n                  :label=\"env.label\"\n                  :value=\"env.value\"\n                />\n              </el-select>\n              <el-dropdown>\n                <span class=\"user\"><el-avatar size=\"small\">SK</el-avatar>Ops Admin</span>\n                <template #dropdown>\n                  <el-dropdown-menu>\n                    <el-dropdown-item>个人中心</el-dropdown-item>\n                    <el-dropdown-item divided>退出登录</el-dropdown-item>\n                  </el-dropdown-menu>\n                </template>\n              </el-dropdown>\n            </div>\n          </el-header>\n          <el-main class=\"main\">\n            <router-view />\n          </el-main>\n        </el-container>\n      </el-container>\n    </div>\n  </el-config-provider>\n</template>\n\n<script setup>\nimport { computed, ref, watch } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport { Setting, Monitor, Collection, Cpu } from '@element-plus/icons-vue';\n\nconst router = useRouter();\nconst route = useRoute();\nconst store = useStore();\n\nconst layoutSize = ref('default');\nconst activeEnv = ref(store.getters['auth/currentEnv']);\nconst environments = computed(() => store.getters['auth/environments']);\nconst activeMenu = computed(() => route.path);\nconst breadcrumb = computed(() => store.getters['ui/breadcrumbs']);\nconst activeEnvLabel = computed(() => {\n  const env = environments.value.find((item) => item.value === activeEnv.value);\n  return env ? env.label : '未知环境';\n});\n\nwatch(\n  () => route.meta?.breadcrumbs,\n  (crumbs) => {\n    store.dispatch('ui/setBreadcrumbs', crumbs || []);\n  },\n  { immediate: true }\n);\n\nwatch(activeEnv, (env) => {\n  store.dispatch('auth/changeEnv', env);\n  router.replace({ query: { ...route.query, env } });\n});\n\nconst setting = Setting;\nconst monitor = Monitor;\nconst collection = Collection;\nconst cpu = Cpu;\n</script>\n\n<style scoped lang=\"scss\">\n.layout {\n  min-height: 100vh;\n  background: #0f172a;\n\n  .sidebar {\n    background: #0f172a;\n    box-shadow: inset -1px 0 0 rgba(148, 163, 184, 0.1);\n    display: flex;\n    flex-direction: column;\n    padding-bottom: 16px;\n  }\n\n  .brand {\n    display: flex;\n    flex-direction: column;\n    padding: 24px 16px;\n    color: #e2e8f0;\n    border-bottom: 1px solid rgba(148, 163, 184, 0.15);\n\n    &__name {\n      font-size: 18px;\n      font-weight: 600;\n      letter-spacing: 0.5px;\n    }\n\n    &__env {\n      font-size: 12px;\n      color: #38bdf8;\n      margin-top: 4px;\n    }\n  }\n\n  .menu {\n    border-right: none;\n    flex: 1;\n    background: transparent;\n  }\n\n  .header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 24px;\n    background: linear-gradient(90deg, rgba(15, 23, 42, 0.9), rgba(30, 41, 59, 0.85));\n    color: #f1f5f9;\n    box-shadow: 0 1px 4px rgba(15, 23, 42, 0.3);\n\n    .header__left {\n      display: flex;\n      align-items: center;\n\n      .el-breadcrumb {\n        font-size: 14px;\n\n        a {\n          color: #bae6fd;\n        }\n      }\n    }\n\n    .header__right {\n      display: flex;\n      align-items: center;\n      gap: 12px;\n\n      .env-selector {\n        width: 160px;\n      }\n\n      .user {\n        display: inline-flex;\n        align-items: center;\n        gap: 8px;\n        cursor: pointer;\n        color: #e2e8f0;\n      }\n    }\n  }\n\n  .main {\n    padding: 24px;\n    background: #e2e8f0;\n    min-height: calc(100vh - 64px);\n  }\n}\n</style>\n"],"mappings":";;AA+EA,SAASA,QAAQ,EAAEC,GAAG,EAAEC,KAAK,QAAQ,KAAK;AAC1C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,YAAY;AAChD,SAASC,QAAQ,QAAQ,MAAM;AAC/B,SAASC,OAAO,EAAEC,OAAO,EAAEC,UAAU,EAAEC,GAAG,QAAQ,yBAAyB;;;;;;;IAE3E,MAAMC,MAAM,GAAGN,SAAS,CAAC,CAAC;IAC1B,MAAMO,KAAK,GAAGR,QAAQ,CAAC,CAAC;IACxB,MAAMS,KAAK,GAAGP,QAAQ,CAAC,CAAC;IAExB,MAAMQ,UAAU,GAAGZ,GAAG,CAAC,SAAS,CAAC;IACjC,MAAMa,SAAS,GAAGb,GAAG,CAACW,KAAK,CAACG,OAAO,CAAC,iBAAiB,CAAC,CAAC;IACvD,MAAMC,YAAY,GAAGhB,QAAQ,CAAC,MAAMY,KAAK,CAACG,OAAO,CAAC,mBAAmB,CAAC,CAAC;IACvE,MAAME,UAAU,GAAGjB,QAAQ,CAAC,MAAMW,KAAK,CAACO,IAAI,CAAC;IAC7C,MAAMC,UAAU,GAAGnB,QAAQ,CAAC,MAAMY,KAAK,CAACG,OAAO,CAAC,gBAAgB,CAAC,CAAC;IAClE,MAAMK,cAAc,GAAGpB,QAAQ,CAAC,MAAM;MACpC,MAAMqB,GAAG,GAAGL,YAAY,CAACM,KAAK,CAACC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACF,KAAK,KAAKR,SAAS,CAACQ,KAAK,CAAC;MAC7E,OAAOD,GAAG,GAAGA,GAAG,CAACI,KAAK,GAAG,MAAM;IACjC,CAAC,CAAC;IAEFvB,KAAK,CACH,MAAMS,KAAK,CAACe,IAAI,EAAEC,WAAW,EAC5BC,MAAM,IAAK;MACVhB,KAAK,CAACiB,QAAQ,CAAC,mBAAmB,EAAED,MAAM,IAAI,EAAE,CAAC;IACnD,CAAC,EACD;MAAEE,SAAS,EAAE;IAAK,CACpB,CAAC;IAED5B,KAAK,CAACY,SAAS,EAAGO,GAAG,IAAK;MACxBT,KAAK,CAACiB,QAAQ,CAAC,gBAAgB,EAAER,GAAG,CAAC;MACrCX,MAAM,CAACqB,OAAO,CAAC;QAAEC,KAAK,EAAE;UAAE,GAAGrB,KAAK,CAACqB,KAAK;UAAEX;QAAI;MAAE,CAAC,CAAC;IACpD,CAAC,CAAC;IAEF,MAAMY,OAAO,GAAG3B,OAAO;IACvB,MAAM4B,OAAO,GAAG3B,OAAO;IACvB,MAAM4B,UAAU,GAAG3B,UAAU;IAC7B,MAAM4B,GAAG,GAAG3B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
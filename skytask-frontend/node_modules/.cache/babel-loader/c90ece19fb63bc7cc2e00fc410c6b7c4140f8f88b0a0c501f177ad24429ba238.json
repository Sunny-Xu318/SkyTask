{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { computed, onMounted, ref } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport StatusTag from '@/components/common/StatusTag.vue';\nimport TaskFormDrawer from '@/components/task/TaskFormDrawer.vue';\nimport TaskDependencyGraph from '@/components/task/TaskDependencyGraph.vue';\nexport default {\n  __name: 'TaskDetailView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const store = useStore();\n    const route = useRoute();\n    const router = useRouter();\n    const taskId = route.params.taskId;\n    const drawerVisible = ref(false);\n    const submitting = ref(false);\n    const logVisible = ref(false);\n    const activeLog = ref('');\n    const triggering = ref(false);\n    const groupOptions = [{\n      label: '数据报表',\n      value: 'DATA_REPORT'\n    }, {\n      label: '实时风控',\n      value: 'RISK_CONTROL'\n    }, {\n      label: '营销中心',\n      value: 'MARKETING'\n    }, {\n      label: '推荐引擎',\n      value: 'RECOMMEND'\n    }];\n    const ownerOptions = [{\n      label: '张强 - 数据平台',\n      value: 'zhangqiang'\n    }, {\n      label: '李娜 - 营销中台',\n      value: 'lina'\n    }, {\n      label: '王伟 - 结算系统',\n      value: 'wangwei'\n    }, {\n      label: '周凯 - 推荐系统',\n      value: 'zhoukai'\n    }];\n    const tagOptions = ['报表', '风控', '缓存', '推荐', '营销', '结算'];\n    onMounted(async () => {\n      await store.dispatch('tasks/loadTaskDetail', taskId);\n      await loadExecutions();\n    });\n    const detail = computed(() => store.getters['tasks/currentTask'] || {});\n    const executions = computed(() => store.getters['tasks/taskExecutions']);\n    const executionLoading = computed(() => store.getters['tasks/taskExecutionLoading']);\n    const parameterText = computed(() => {\n      const params = detail.value?.parameters;\n      if (!params) {\n        return '-';\n      }\n      if (typeof params === 'string') {\n        return params;\n      }\n      try {\n        return JSON.stringify(params, null, 2);\n      } catch (error) {\n        return String(params);\n      }\n    });\n    const loadExecutions = async () => {\n      await store.dispatch('tasks/loadTaskExecutions', {\n        taskId,\n        page: 1\n      });\n    };\n    const goBack = () => {\n      router.back();\n    };\n    const openEdit = () => {\n      drawerVisible.value = true;\n    };\n    const submitTask = async payload => {\n      submitting.value = true;\n      try {\n        await store.dispatch('tasks/submitTask', payload);\n        await store.dispatch('tasks/loadTaskDetail', taskId);\n        drawerVisible.value = false;\n      } finally {\n        submitting.value = false;\n      }\n    };\n    const triggerTask = async () => {\n      triggering.value = true;\n      try {\n        await store.dispatch('tasks/triggerTask', {\n          taskId,\n          payload: {\n            manual: true,\n            operator: store.getters['auth/profile'].username\n          }\n        });\n      } finally {\n        triggering.value = false;\n        await loadExecutions();\n      }\n    };\n    const confirmDelete = async () => {\n      await store.dispatch('tasks/removeTask', taskId);\n      router.push('/tasks');\n    };\n    const openLog = record => {\n      logVisible.value = true;\n      activeLog.value = record.log || '日志加载中...';\n    };\n    const typeLabel = type => {\n      const map = {\n        CRON: 'Cron 定时任务',\n        ONE_TIME: '一次性任务',\n        FIXED_RATE: '固定间隔任务'\n      };\n      return map[type] || type;\n    };\n    const executorLabel = executor => {\n      const map = {\n        GRPC: 'gRPC 执行',\n        HTTP: 'HTTP 回调',\n        SPRING_BEAN: 'Spring Bean',\n        SHELL: 'Shell 脚本'\n      };\n      return map[executor] || executor;\n    };\n    const routeLabel = route => {\n      const map = {\n        ROUND_ROBIN: '自动均衡',\n        CONSISTENT_HASH: '一致性哈希',\n        SHARDING: '分片广播',\n        FIXED_NODE: '指定节点'\n      };\n      return map[route] || route;\n    };\n    const retryLabel = retry => {\n      const map = {\n        NONE: '不重试',\n        FIXED_INTERVAL: '固定间隔',\n        EXP_BACKOFF: '指数退避'\n      };\n      return map[retry] || retry;\n    };\n    const __returned__ = {\n      store,\n      route,\n      router,\n      taskId,\n      drawerVisible,\n      submitting,\n      logVisible,\n      activeLog,\n      triggering,\n      groupOptions,\n      ownerOptions,\n      tagOptions,\n      detail,\n      executions,\n      executionLoading,\n      parameterText,\n      loadExecutions,\n      goBack,\n      openEdit,\n      submitTask,\n      triggerTask,\n      confirmDelete,\n      openLog,\n      typeLabel,\n      executorLabel,\n      routeLabel,\n      retryLabel,\n      computed,\n      onMounted,\n      ref,\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get useStore() {\n        return useStore;\n      },\n      StatusTag,\n      TaskFormDrawer,\n      TaskDependencyGraph\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","onMounted","ref","useRoute","useRouter","useStore","StatusTag","TaskFormDrawer","TaskDependencyGraph","store","route","router","taskId","params","drawerVisible","submitting","logVisible","activeLog","triggering","groupOptions","label","value","ownerOptions","tagOptions","dispatch","loadExecutions","detail","getters","executions","executionLoading","parameterText","parameters","JSON","stringify","error","String","page","goBack","back","openEdit","submitTask","payload","triggerTask","manual","operator","username","confirmDelete","push","openLog","record","log","typeLabel","type","map","CRON","ONE_TIME","FIXED_RATE","executorLabel","executor","GRPC","HTTP","SPRING_BEAN","SHELL","routeLabel","ROUND_ROBIN","CONSISTENT_HASH","SHARDING","FIXED_NODE","retryLabel","retry","NONE","FIXED_INTERVAL","EXP_BACKOFF"],"sources":["D:/桌面/项目/分布式任务调度系统/SkyTask/skytask-frontend/src/views/TaskDetailView.vue"],"sourcesContent":["<template>\n  <div class=\"task-detail\">\n    <el-page-header @back=\"goBack\">\n      <template #content>\n        <div class=\"header\">\n          <span class=\"header__title\">{{ detail?.name || '任务详情' }}</span>\n          <StatusTag :status=\"detail?.status || 'UNKNOWN'\" />\n          <el-tag v-if=\"detail?.group\" type=\"info\" effect=\"plain\">{{ detail.group }}</el-tag>\n        </div>\n      </template>\n      <template #extra>\n        <el-space>\n          <el-button type=\"primary\" @click=\"triggerTask\" :loading=\"triggering\">立即执行</el-button>\n          <el-button @click=\"openEdit\">编辑任务</el-button>\n          <el-button type=\"danger\" @click=\"confirmDelete\">删除</el-button>\n        </el-space>\n      </template>\n    </el-page-header>\n\n    <div class=\"content\">\n      <section class=\"card detail-card\">\n        <div class=\"detail-card__section\">\n          <h3>基础信息</h3>\n          <el-descriptions :column=\"2\" size=\"small\">\n            <el-descriptions-item label=\"任务 ID\">{{ detail?.id }}</el-descriptions-item>\n            <el-descriptions-item label=\"任务类型\">{{ typeLabel(detail?.type) }}</el-descriptions-item>\n            <el-descriptions-item label=\"执行方式\">{{ executorLabel(detail?.executorType) }}</el-descriptions-item>\n            <el-descriptions-item label=\"Cron 表达式\">{{ detail?.cronExpr || '-' }}</el-descriptions-item>\n            <el-descriptions-item label=\"负责人\">{{ detail?.owner }}</el-descriptions-item>\n            <el-descriptions-item label=\"超时时间\">{{ detail?.timeout }} s</el-descriptions-item>\n          </el-descriptions>\n        </div>\n\n        <div class=\"detail-card__section\">\n          <h3>调度策略</h3>\n          <el-descriptions :column=\"2\" size=\"small\">\n            <el-descriptions-item label=\"路由策略\">{{ routeLabel(detail?.routeStrategy) }}</el-descriptions-item>\n            <el-descriptions-item label=\"最大重试\">{{ detail?.maxRetry }} 次</el-descriptions-item>\n            <el-descriptions-item label=\"重试策略\">{{ retryLabel(detail?.retryPolicy) }}</el-descriptions-item>\n            <el-descriptions-item label=\"幂等 Key\">{{ detail?.idempotentKey || '-' }}</el-descriptions-item>\n          </el-descriptions>\n        </div>\n\n        <div class=\"detail-card__section\">\n          <h3>参数</h3>\n          <el-input\n            v-model=\"parameterText\"\n            type=\"textarea\"\n            :rows=\"detail?.parameters ? 5 : 2\"\n            readonly\n          />\n        </div>\n      </section>\n\n      <section class=\"card execution-card\">\n        <div class=\"execution-card__header\">\n          <h3>最近执行记录</h3>\n          <el-button size=\"small\" @click=\"loadExecutions\">刷新</el-button>\n        </div>\n        <el-table :data=\"executions\" height=\"320\" v-loading=\"executionLoading\">\n          <el-table-column prop=\"triggerTime\" label=\"调度时间\" width=\"160\" />\n          <el-table-column prop=\"node\" label=\"执行节点\" width=\"120\" />\n          <el-table-column label=\"状态\" width=\"120\">\n            <template #default=\"{ row }\">\n              <StatusTag :status=\"row.status\" />\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"duration\" label=\"耗时(ms)\" width=\"100\" />\n          <el-table-column prop=\"traceId\" label=\"TraceId\" min-width=\"140\" show-overflow-tooltip />\n          <el-table-column label=\"操作\" width=\"120\" fixed=\"right\">\n            <template #default=\"{ row }\">\n              <el-button link type=\"primary\" size=\"small\" @click=\"openLog(row)\">查看日志</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n      </section>\n\n      <section class=\"card dependency-card\">\n        <div class=\"dependency-card__header\">\n          <h3>任务依赖链</h3>\n          <el-tag v-if=\"detail?.dependencies?.length\" size=\"small\">总共 {{ detail.dependencies.length }} 个节点</el-tag>\n        </div>\n        <el-timeline>\n          <el-timeline-item\n            v-for=\"dep in detail?.dependencies || []\"\n            :key=\"dep.id\"\n            :timestamp=\"dep.triggerType\"\n            :type=\"dep.status === 'SUCCESS' ? 'success' : dep.status === 'FAILED' ? 'danger' : 'info'\"\n          >\n            <div class=\"dependency-item\">\n              <strong>{{ dep.name }}</strong>\n              <span>执行节点：{{ dep.node || '-' }}</span>\n              <span>最近状态：<StatusTag :status=\"dep.status\" /></span>\n              <el-tag size=\"small\" v-if=\"dep.cronExpr\" effect=\"plain\">{{ dep.cronExpr }}</el-tag>\n            </div>\n          </el-timeline-item>\n          <el-empty v-if=\"!(detail?.dependencies?.length)\" description=\"未配置依赖任务\" />\n        </el-timeline>\n      </section>\n    </div>\n\n    <TaskFormDrawer\n      v-model:visible=\"drawerVisible\"\n      :model-value=\"detail\"\n      :group-options=\"groupOptions\"\n      :owner-options=\"ownerOptions\"\n      :tag-options=\"tagOptions\"\n      :submitting=\"submitting\"\n      @submit=\"submitTask\"\n    />\n\n    <el-dialog v-model=\"logVisible\" title=\"执行日志\" width=\"60%\">\n      <el-scrollbar height=\"400px\">\n        <pre class=\"log\">{{ activeLog }}</pre>\n      </el-scrollbar>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { computed, onMounted, ref } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport StatusTag from '@/components/common/StatusTag.vue';\nimport TaskFormDrawer from '@/components/task/TaskFormDrawer.vue';\nimport TaskDependencyGraph from '@/components/task/TaskDependencyGraph.vue';\n\nconst store = useStore();\nconst route = useRoute();\nconst router = useRouter();\n\nconst taskId = route.params.taskId;\nconst drawerVisible = ref(false);\nconst submitting = ref(false);\nconst logVisible = ref(false);\nconst activeLog = ref('');\nconst triggering = ref(false);\n\nconst groupOptions = [\n  { label: '数据报表', value: 'DATA_REPORT' },\n  { label: '实时风控', value: 'RISK_CONTROL' },\n  { label: '营销中心', value: 'MARKETING' },\n  { label: '推荐引擎', value: 'RECOMMEND' }\n];\n\nconst ownerOptions = [\n  { label: '张强 - 数据平台', value: 'zhangqiang' },\n  { label: '李娜 - 营销中台', value: 'lina' },\n  { label: '王伟 - 结算系统', value: 'wangwei' },\n  { label: '周凯 - 推荐系统', value: 'zhoukai' }\n];\n\nconst tagOptions = ['报表', '风控', '缓存', '推荐', '营销', '结算'];\n\nonMounted(async () => {\n  await store.dispatch('tasks/loadTaskDetail', taskId);\n  await loadExecutions();\n});\n\nconst detail = computed(() => store.getters['tasks/currentTask'] || {});\nconst executions = computed(() => store.getters['tasks/taskExecutions']);\nconst executionLoading = computed(() => store.getters['tasks/taskExecutionLoading']);\nconst parameterText = computed(() => {\n  const params = detail.value?.parameters;\n  if (!params) {\n    return '-';\n  }\n  if (typeof params === 'string') {\n    return params;\n  }\n  try {\n    return JSON.stringify(params, null, 2);\n  } catch (error) {\n    return String(params);\n  }\n});\n\nconst loadExecutions = async () => {\n  await store.dispatch('tasks/loadTaskExecutions', { taskId, page: 1 });\n};\n\nconst goBack = () => {\n  router.back();\n};\n\nconst openEdit = () => {\n  drawerVisible.value = true;\n};\n\nconst submitTask = async (payload) => {\n  submitting.value = true;\n  try {\n    await store.dispatch('tasks/submitTask', payload);\n    await store.dispatch('tasks/loadTaskDetail', taskId);\n    drawerVisible.value = false;\n  } finally {\n    submitting.value = false;\n  }\n};\n\nconst triggerTask = async () => {\n  triggering.value = true;\n  try {\n    await store.dispatch('tasks/triggerTask', {\n      taskId,\n      payload: { manual: true, operator: store.getters['auth/profile'].username }\n    });\n  } finally {\n    triggering.value = false;\n    await loadExecutions();\n  }\n};\n\nconst confirmDelete = async () => {\n  await store.dispatch('tasks/removeTask', taskId);\n  router.push('/tasks');\n};\n\nconst openLog = (record) => {\n  logVisible.value = true;\n  activeLog.value = record.log || '日志加载中...';\n};\n\nconst typeLabel = (type) => {\n  const map = {\n    CRON: 'Cron 定时任务',\n    ONE_TIME: '一次性任务',\n    FIXED_RATE: '固定间隔任务'\n  };\n  return map[type] || type;\n};\n\nconst executorLabel = (executor) => {\n  const map = {\n    GRPC: 'gRPC 执行',\n    HTTP: 'HTTP 回调',\n    SPRING_BEAN: 'Spring Bean',\n    SHELL: 'Shell 脚本'\n  };\n  return map[executor] || executor;\n};\n\nconst routeLabel = (route) => {\n  const map = {\n    ROUND_ROBIN: '自动均衡',\n    CONSISTENT_HASH: '一致性哈希',\n    SHARDING: '分片广播',\n    FIXED_NODE: '指定节点'\n  };\n  return map[route] || route;\n};\n\nconst retryLabel = (retry) => {\n  const map = {\n    NONE: '不重试',\n    FIXED_INTERVAL: '固定间隔',\n    EXP_BACKOFF: '指数退避'\n  };\n  return map[retry] || retry;\n};\n</script>\n\n<style scoped lang=\"scss\">\n.task-detail {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.header {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n\n  &__title {\n    font-size: 20px;\n    font-weight: 600;\n  }\n}\n\n.content {\n  display: grid;\n  grid-template-columns: repeat(2, minmax(0, 1fr));\n  gap: 20px;\n}\n\n.detail-card {\n  grid-column: span 2;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  &__section {\n    h3 {\n      margin: 0 0 12px;\n      font-size: 16px;\n      font-weight: 600;\n      color: #0f172a;\n    }\n  }\n}\n\n.execution-card,\n.dependency-card {\n  h3 {\n    margin: 0;\n    font-size: 16px;\n    font-weight: 600;\n  }\n}\n\n.execution-card__header,\n.dependency-card__header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 12px;\n}\n\n.dependency-item {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  font-size: 13px;\n  color: #475569;\n\n  strong {\n    font-weight: 600;\n    color: #1e293b;\n  }\n}\n\n.log {\n  margin: 0;\n  font-family: 'Fira Code', 'Consolas', monospace;\n  font-size: 13px;\n  white-space: pre-wrap;\n  background: #0f172a;\n  color: #e2e8f0;\n  padding: 16px;\n  border-radius: 8px;\n}\n</style>\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
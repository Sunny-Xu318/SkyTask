{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createVNode as _createVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, resolveDirective as _resolveDirective, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"task-detail\"\n};\nconst _hoisted_2 = {\n  class: \"header\"\n};\nconst _hoisted_3 = {\n  class: \"header__title\"\n};\nconst _hoisted_4 = {\n  class: \"content\"\n};\nconst _hoisted_5 = {\n  class: \"card detail-card\"\n};\nconst _hoisted_6 = {\n  class: \"detail-card__section\"\n};\nconst _hoisted_7 = {\n  class: \"detail-card__section\"\n};\nconst _hoisted_8 = {\n  class: \"detail-card__section\"\n};\nconst _hoisted_9 = {\n  class: \"card execution-card\"\n};\nconst _hoisted_10 = {\n  class: \"execution-card__header\"\n};\nconst _hoisted_11 = {\n  class: \"card dependency-card\"\n};\nconst _hoisted_12 = {\n  class: \"dependency-card__header\"\n};\nconst _hoisted_13 = {\n  class: \"dependency-item\"\n};\nconst _hoisted_14 = {\n  class: \"log\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_space = _resolveComponent(\"el-space\");\n  const _component_el_page_header = _resolveComponent(\"el-page-header\");\n  const _component_el_descriptions_item = _resolveComponent(\"el-descriptions-item\");\n  const _component_el_descriptions = _resolveComponent(\"el-descriptions\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_timeline_item = _resolveComponent(\"el-timeline-item\");\n  const _component_el_empty = _resolveComponent(\"el-empty\");\n  const _component_el_timeline = _resolveComponent(\"el-timeline\");\n  const _component_el_scrollbar = _resolveComponent(\"el-scrollbar\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_page_header, {\n    onBack: $setup.goBack\n  }, {\n    content: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"span\", _hoisted_3, _toDisplayString($setup.detail?.name || '任务详情'), 1 /* TEXT */), _createVNode($setup[\"StatusTag\"], {\n      status: $setup.detail?.status || 'UNKNOWN'\n    }, null, 8 /* PROPS */, [\"status\"]), $setup.detail?.group ? (_openBlock(), _createBlock(_component_el_tag, {\n      key: 0,\n      type: \"info\",\n      effect: \"plain\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.detail.group), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true)])]),\n    extra: _withCtx(() => [_createVNode(_component_el_space, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $setup.triggerTask,\n        loading: $setup.triggering\n      }, {\n        default: _withCtx(() => [...(_cache[3] || (_cache[3] = [_createTextVNode(\"立即执行\", -1 /* CACHED */)]))]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"loading\"]), _createVNode(_component_el_button, {\n        onClick: $setup.openEdit\n      }, {\n        default: _withCtx(() => [...(_cache[4] || (_cache[4] = [_createTextVNode(\"编辑任务\", -1 /* CACHED */)]))]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_button, {\n        type: \"danger\",\n        onClick: $setup.confirmDelete\n      }, {\n        default: _withCtx(() => [...(_cache[5] || (_cache[5] = [_createTextVNode(\"删除\", -1 /* CACHED */)]))]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"section\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_cache[6] || (_cache[6] = _createElementVNode(\"h3\", null, \"基础信息\", -1 /* CACHED */)), _createVNode(_component_el_descriptions, {\n    column: 2,\n    size: \"small\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_descriptions_item, {\n      label: \"任务 ID\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.detail?.id), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_descriptions_item, {\n      label: \"任务类型\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.typeLabel($setup.detail?.type)), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_descriptions_item, {\n      label: \"执行方式\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.executorLabel($setup.detail?.executorType)), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_descriptions_item, {\n      label: \"Cron 表达式\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.detail?.cronExpr || '-'), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_descriptions_item, {\n      label: \"负责人\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.detail?.owner), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_descriptions_item, {\n      label: \"超时时间\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.detail?.timeout) + \" s\", 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  })]), _createElementVNode(\"div\", _hoisted_7, [_cache[7] || (_cache[7] = _createElementVNode(\"h3\", null, \"调度策略\", -1 /* CACHED */)), _createVNode(_component_el_descriptions, {\n    column: 2,\n    size: \"small\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_descriptions_item, {\n      label: \"路由策略\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.routeLabel($setup.detail?.routeStrategy)), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_descriptions_item, {\n      label: \"最大重试\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.detail?.maxRetry) + \" 次\", 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_descriptions_item, {\n      label: \"重试策略\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.retryLabel($setup.detail?.retryPolicy)), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_descriptions_item, {\n      label: \"幂等 Key\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.detail?.idempotentKey || '-'), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  })]), _createElementVNode(\"div\", _hoisted_8, [_cache[8] || (_cache[8] = _createElementVNode(\"h3\", null, \"参数\", -1 /* CACHED */)), _createVNode(_component_el_input, {\n    modelValue: $setup.parameterText,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.parameterText = $event),\n    type: \"textarea\",\n    rows: $setup.detail?.parameters ? 5 : 2,\n    readonly: \"\"\n  }, null, 8 /* PROPS */, [\"modelValue\", \"rows\"])])]), _createElementVNode(\"section\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_cache[10] || (_cache[10] = _createElementVNode(\"h3\", null, \"最近执行记录\", -1 /* CACHED */)), _createVNode(_component_el_button, {\n    size: \"small\",\n    onClick: $setup.loadExecutions\n  }, {\n    default: _withCtx(() => [...(_cache[9] || (_cache[9] = [_createTextVNode(\"刷新\", -1 /* CACHED */)]))]),\n    _: 1 /* STABLE */\n  })]), _withDirectives((_openBlock(), _createBlock(_component_el_table, {\n    data: $setup.executions,\n    height: \"320\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      prop: \"triggerTime\",\n      label: \"调度时间\",\n      width: \"160\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"node\",\n      label: \"执行节点\",\n      width: \"120\"\n    }), _createVNode(_component_el_table_column, {\n      label: \"状态\",\n      width: \"120\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createVNode($setup[\"StatusTag\"], {\n        status: row.status\n      }, null, 8 /* PROPS */, [\"status\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      prop: \"duration\",\n      label: \"耗时(ms)\",\n      width: \"100\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"traceId\",\n      label: \"TraceId\",\n      \"min-width\": \"140\",\n      \"show-overflow-tooltip\": \"\"\n    }), _createVNode(_component_el_table_column, {\n      label: \"操作\",\n      width: \"120\",\n      fixed: \"right\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createVNode(_component_el_button, {\n        link: \"\",\n        type: \"primary\",\n        size: \"small\",\n        onClick: $event => $setup.openLog(row)\n      }, {\n        default: _withCtx(() => [...(_cache[11] || (_cache[11] = [_createTextVNode(\"查看日志\", -1 /* CACHED */)]))]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\"])), [[_directive_loading, $setup.executionLoading]])]), _createElementVNode(\"section\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_cache[12] || (_cache[12] = _createElementVNode(\"h3\", null, \"任务依赖链\", -1 /* CACHED */)), $setup.detail?.dependencies?.length ? (_openBlock(), _createBlock(_component_el_tag, {\n    key: 0,\n    size: \"small\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"总共 \" + _toDisplayString($setup.detail.dependencies.length) + \" 个节点\", 1 /* TEXT */)]),\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true)]), _createVNode(_component_el_timeline, null, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.detail?.dependencies || [], dep => {\n      return _openBlock(), _createBlock(_component_el_timeline_item, {\n        key: dep.id,\n        timestamp: dep.triggerType,\n        type: dep.status === 'SUCCESS' ? 'success' : dep.status === 'FAILED' ? 'danger' : 'info'\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"strong\", null, _toDisplayString(dep.name), 1 /* TEXT */), _createElementVNode(\"span\", null, \"执行节点：\" + _toDisplayString(dep.node || '-'), 1 /* TEXT */), _createElementVNode(\"span\", null, [_cache[13] || (_cache[13] = _createTextVNode(\"最近状态：\", -1 /* CACHED */)), _createVNode($setup[\"StatusTag\"], {\n          status: dep.status\n        }, null, 8 /* PROPS */, [\"status\"])]), dep.cronExpr ? (_openBlock(), _createBlock(_component_el_tag, {\n          key: 0,\n          size: \"small\",\n          effect: \"plain\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(dep.cronExpr), 1 /* TEXT */)]),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true)])]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"timestamp\", \"type\"]);\n    }), 128 /* KEYED_FRAGMENT */)), !$setup.detail?.dependencies?.length ? (_openBlock(), _createBlock(_component_el_empty, {\n      key: 0,\n      description: \"未配置依赖任务\"\n    })) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  })])]), _createVNode($setup[\"TaskFormDrawer\"], {\n    visible: $setup.drawerVisible,\n    \"onUpdate:visible\": _cache[1] || (_cache[1] = $event => $setup.drawerVisible = $event),\n    \"model-value\": $setup.detail,\n    \"group-options\": $setup.groupOptions,\n    \"owner-options\": $setup.ownerOptions,\n    \"tag-options\": $setup.tagOptions,\n    submitting: $setup.submitting,\n    onSubmit: $setup.submitTask\n  }, null, 8 /* PROPS */, [\"visible\", \"model-value\", \"submitting\"]), _createVNode(_component_el_dialog, {\n    modelValue: $setup.logVisible,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.logVisible = $event),\n    title: \"执行日志\",\n    width: \"60%\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_scrollbar, {\n      height: \"400px\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"pre\", _hoisted_14, _toDisplayString($setup.activeLog), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_el_page_header","onBack","$setup","goBack","content","_withCtx","_createElementVNode","_hoisted_2","_hoisted_3","_toDisplayString","detail","name","status","group","_createBlock","_component_el_tag","type","effect","extra","_component_el_space","_component_el_button","onClick","triggerTask","loading","triggering","_cache","openEdit","confirmDelete","_hoisted_4","_hoisted_5","_hoisted_6","_component_el_descriptions","column","size","_component_el_descriptions_item","label","id","typeLabel","executorLabel","executorType","cronExpr","owner","timeout","_hoisted_7","routeLabel","routeStrategy","maxRetry","retryLabel","retryPolicy","idempotentKey","_hoisted_8","_component_el_input","parameterText","$event","rows","parameters","readonly","_hoisted_9","_hoisted_10","loadExecutions","_component_el_table","data","executions","height","_component_el_table_column","prop","width","default","row","fixed","link","openLog","executionLoading","_hoisted_11","_hoisted_12","dependencies","length","_component_el_timeline","_Fragment","_renderList","dep","_component_el_timeline_item","key","timestamp","triggerType","_hoisted_13","node","_component_el_empty","description","visible","drawerVisible","groupOptions","ownerOptions","tagOptions","submitting","onSubmit","submitTask","_component_el_dialog","logVisible","title","_component_el_scrollbar","_hoisted_14","activeLog"],"sources":["D:\\桌面\\项目\\分布式任务调度系统\\SkyTask\\skytask-frontend\\src\\views\\TaskDetailView.vue"],"sourcesContent":["<template>\n  <div class=\"task-detail\">\n    <el-page-header @back=\"goBack\">\n      <template #content>\n        <div class=\"header\">\n          <span class=\"header__title\">{{ detail?.name || '任务详情' }}</span>\n          <StatusTag :status=\"detail?.status || 'UNKNOWN'\" />\n          <el-tag v-if=\"detail?.group\" type=\"info\" effect=\"plain\">{{ detail.group }}</el-tag>\n        </div>\n      </template>\n      <template #extra>\n        <el-space>\n          <el-button type=\"primary\" @click=\"triggerTask\" :loading=\"triggering\">立即执行</el-button>\n          <el-button @click=\"openEdit\">编辑任务</el-button>\n          <el-button type=\"danger\" @click=\"confirmDelete\">删除</el-button>\n        </el-space>\n      </template>\n    </el-page-header>\n\n    <div class=\"content\">\n      <section class=\"card detail-card\">\n        <div class=\"detail-card__section\">\n          <h3>基础信息</h3>\n          <el-descriptions :column=\"2\" size=\"small\">\n            <el-descriptions-item label=\"任务 ID\">{{ detail?.id }}</el-descriptions-item>\n            <el-descriptions-item label=\"任务类型\">{{ typeLabel(detail?.type) }}</el-descriptions-item>\n            <el-descriptions-item label=\"执行方式\">{{ executorLabel(detail?.executorType) }}</el-descriptions-item>\n            <el-descriptions-item label=\"Cron 表达式\">{{ detail?.cronExpr || '-' }}</el-descriptions-item>\n            <el-descriptions-item label=\"负责人\">{{ detail?.owner }}</el-descriptions-item>\n            <el-descriptions-item label=\"超时时间\">{{ detail?.timeout }} s</el-descriptions-item>\n          </el-descriptions>\n        </div>\n\n        <div class=\"detail-card__section\">\n          <h3>调度策略</h3>\n          <el-descriptions :column=\"2\" size=\"small\">\n            <el-descriptions-item label=\"路由策略\">{{ routeLabel(detail?.routeStrategy) }}</el-descriptions-item>\n            <el-descriptions-item label=\"最大重试\">{{ detail?.maxRetry }} 次</el-descriptions-item>\n            <el-descriptions-item label=\"重试策略\">{{ retryLabel(detail?.retryPolicy) }}</el-descriptions-item>\n            <el-descriptions-item label=\"幂等 Key\">{{ detail?.idempotentKey || '-' }}</el-descriptions-item>\n          </el-descriptions>\n        </div>\n\n        <div class=\"detail-card__section\">\n          <h3>参数</h3>\n          <el-input\n            v-model=\"parameterText\"\n            type=\"textarea\"\n            :rows=\"detail?.parameters ? 5 : 2\"\n            readonly\n          />\n        </div>\n      </section>\n\n      <section class=\"card execution-card\">\n        <div class=\"execution-card__header\">\n          <h3>最近执行记录</h3>\n          <el-button size=\"small\" @click=\"loadExecutions\">刷新</el-button>\n        </div>\n        <el-table :data=\"executions\" height=\"320\" v-loading=\"executionLoading\">\n          <el-table-column prop=\"triggerTime\" label=\"调度时间\" width=\"160\" />\n          <el-table-column prop=\"node\" label=\"执行节点\" width=\"120\" />\n          <el-table-column label=\"状态\" width=\"120\">\n            <template #default=\"{ row }\">\n              <StatusTag :status=\"row.status\" />\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"duration\" label=\"耗时(ms)\" width=\"100\" />\n          <el-table-column prop=\"traceId\" label=\"TraceId\" min-width=\"140\" show-overflow-tooltip />\n          <el-table-column label=\"操作\" width=\"120\" fixed=\"right\">\n            <template #default=\"{ row }\">\n              <el-button link type=\"primary\" size=\"small\" @click=\"openLog(row)\">查看日志</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n      </section>\n\n      <section class=\"card dependency-card\">\n        <div class=\"dependency-card__header\">\n          <h3>任务依赖链</h3>\n          <el-tag v-if=\"detail?.dependencies?.length\" size=\"small\">总共 {{ detail.dependencies.length }} 个节点</el-tag>\n        </div>\n        <el-timeline>\n          <el-timeline-item\n            v-for=\"dep in detail?.dependencies || []\"\n            :key=\"dep.id\"\n            :timestamp=\"dep.triggerType\"\n            :type=\"dep.status === 'SUCCESS' ? 'success' : dep.status === 'FAILED' ? 'danger' : 'info'\"\n          >\n            <div class=\"dependency-item\">\n              <strong>{{ dep.name }}</strong>\n              <span>执行节点：{{ dep.node || '-' }}</span>\n              <span>最近状态：<StatusTag :status=\"dep.status\" /></span>\n              <el-tag size=\"small\" v-if=\"dep.cronExpr\" effect=\"plain\">{{ dep.cronExpr }}</el-tag>\n            </div>\n          </el-timeline-item>\n          <el-empty v-if=\"!(detail?.dependencies?.length)\" description=\"未配置依赖任务\" />\n        </el-timeline>\n      </section>\n    </div>\n\n    <TaskFormDrawer\n      v-model:visible=\"drawerVisible\"\n      :model-value=\"detail\"\n      :group-options=\"groupOptions\"\n      :owner-options=\"ownerOptions\"\n      :tag-options=\"tagOptions\"\n      :submitting=\"submitting\"\n      @submit=\"submitTask\"\n    />\n\n    <el-dialog v-model=\"logVisible\" title=\"执行日志\" width=\"60%\">\n      <el-scrollbar height=\"400px\">\n        <pre class=\"log\">{{ activeLog }}</pre>\n      </el-scrollbar>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { computed, onMounted, ref } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport StatusTag from '@/components/common/StatusTag.vue';\nimport TaskFormDrawer from '@/components/task/TaskFormDrawer.vue';\n\nconst store = useStore();\nconst route = useRoute();\nconst router = useRouter();\n\nconst taskId = route.params.taskId;\nconst drawerVisible = ref(false);\nconst submitting = ref(false);\nconst logVisible = ref(false);\nconst activeLog = ref('');\nconst triggering = ref(false);\n\nconst groupOptions = [\n  { label: '数据报表', value: 'DATA_REPORT' },\n  { label: '实时风控', value: 'RISK_CONTROL' },\n  { label: '营销中心', value: 'MARKETING' },\n  { label: '推荐引擎', value: 'RECOMMEND' }\n];\n\nconst ownerOptions = [\n  { label: '张强 - 数据平台', value: 'zhangqiang' },\n  { label: '李娜 - 营销中台', value: 'lina' },\n  { label: '王伟 - 结算系统', value: 'wangwei' },\n  { label: '周凯 - 推荐系统', value: 'zhoukai' }\n];\n\nconst tagOptions = ['报表', '风控', '缓存', '推荐', '营销', '结算'];\n\nonMounted(async () => {\n  await store.dispatch('tasks/loadTaskDetail', taskId);\n  await loadExecutions();\n});\n\nconst detail = computed(() => store.getters['tasks/currentTask'] || {});\nconst executions = computed(() => store.getters['tasks/taskExecutions']);\nconst executionLoading = computed(() => store.getters['tasks/taskExecutionLoading']);\nconst parameterText = computed(() => {\n  const params = detail.value?.parameters;\n  if (!params) {\n    return '-';\n  }\n  if (typeof params === 'string') {\n    return params;\n  }\n  try {\n    return JSON.stringify(params, null, 2);\n  } catch (error) {\n    return String(params);\n  }\n});\n\nconst loadExecutions = async () => {\n  await store.dispatch('tasks/loadTaskExecutions', { taskId, page: 1 });\n};\n\nconst goBack = () => {\n  router.back();\n};\n\nconst openEdit = () => {\n  drawerVisible.value = true;\n};\n\nconst submitTask = async (payload) => {\n  submitting.value = true;\n  try {\n    await store.dispatch('tasks/submitTask', payload);\n    await store.dispatch('tasks/loadTaskDetail', taskId);\n    drawerVisible.value = false;\n  } finally {\n    submitting.value = false;\n  }\n};\n\nconst triggerTask = async () => {\n  triggering.value = true;\n  try {\n    await store.dispatch('tasks/triggerTask', {\n      taskId,\n      payload: { manual: true, operator: store.getters['auth/profile'].username }\n    });\n  } finally {\n    triggering.value = false;\n    await loadExecutions();\n  }\n};\n\nconst confirmDelete = async () => {\n  await store.dispatch('tasks/removeTask', taskId);\n  router.push('/tasks');\n};\n\nconst openLog = (record) => {\n  logVisible.value = true;\n  activeLog.value = record.log || '日志加载中...';\n};\n\nconst typeLabel = (type) => {\n  const map = {\n    CRON: 'Cron 定时任务',\n    ONE_TIME: '一次性任务',\n    FIXED_RATE: '固定间隔任务'\n  };\n  return map[type] || type;\n};\n\nconst executorLabel = (executor) => {\n  const map = {\n    GRPC: 'gRPC 执行',\n    HTTP: 'HTTP 回调',\n    SPRING_BEAN: 'Spring Bean',\n    SHELL: 'Shell 脚本'\n  };\n  return map[executor] || executor;\n};\n\nconst routeLabel = (route) => {\n  const map = {\n    ROUND_ROBIN: '自动均衡',\n    CONSISTENT_HASH: '一致性哈希',\n    SHARDING: '分片广播',\n    FIXED_NODE: '指定节点'\n  };\n  return map[route] || route;\n};\n\nconst retryLabel = (retry) => {\n  const map = {\n    NONE: '不重试',\n    FIXED_INTERVAL: '固定间隔',\n    EXP_BACKOFF: '指数退避'\n  };\n  return map[retry] || retry;\n};\n</script>\n\n<style scoped lang=\"scss\">\n.task-detail {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.header {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n\n  &__title {\n    font-size: 20px;\n    font-weight: 600;\n  }\n}\n\n.content {\n  display: grid;\n  grid-template-columns: repeat(2, minmax(0, 1fr));\n  gap: 20px;\n}\n\n.detail-card {\n  grid-column: span 2;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  &__section {\n    h3 {\n      margin: 0 0 12px;\n      font-size: 16px;\n      font-weight: 600;\n      color: #0f172a;\n    }\n  }\n}\n\n.execution-card,\n.dependency-card {\n  h3 {\n    margin: 0;\n    font-size: 16px;\n    font-weight: 600;\n  }\n}\n\n.execution-card__header,\n.dependency-card__header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 12px;\n}\n\n.dependency-item {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  font-size: 13px;\n  color: #475569;\n\n  strong {\n    font-weight: 600;\n    color: #1e293b;\n  }\n}\n\n.log {\n  margin: 0;\n  font-family: 'Fira Code', 'Consolas', monospace;\n  font-size: 13px;\n  white-space: pre-wrap;\n  background: #0f172a;\n  color: #e2e8f0;\n  padding: 16px;\n  border-radius: 8px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
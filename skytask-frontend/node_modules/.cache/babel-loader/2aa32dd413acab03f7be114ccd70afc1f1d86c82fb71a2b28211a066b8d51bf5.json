{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createVNode as _createVNode, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveDirective as _resolveDirective, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"node-monitor\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"card node-monitor__summary\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"summary__error\"\n};\nconst _hoisted_4 = {\n  key: 2,\n  class: \"summary__grid\"\n};\nconst _hoisted_5 = {\n  class: \"summary__item\"\n};\nconst _hoisted_6 = {\n  class: \"summary__value\"\n};\nconst _hoisted_7 = {\n  class: \"summary__item\"\n};\nconst _hoisted_8 = {\n  class: \"summary__value summary__value--success\"\n};\nconst _hoisted_9 = {\n  class: \"summary__item\"\n};\nconst _hoisted_10 = {\n  class: \"summary__value summary__value--danger\"\n};\nconst _hoisted_11 = {\n  class: \"summary__item\"\n};\nconst _hoisted_12 = {\n  class: \"summary__value\"\n};\nconst _hoisted_13 = {\n  class: \"summary__item\"\n};\nconst _hoisted_14 = {\n  class: \"summary__value\"\n};\nconst _hoisted_15 = {\n  key: 1,\n  class: \"card node-monitor__table\"\n};\nconst _hoisted_16 = {\n  class: \"table__header\"\n};\nconst _hoisted_17 = {\n  class: \"node-name\"\n};\nconst _hoisted_18 = {\n  class: \"node-meta\"\n};\nconst _hoisted_19 = {\n  class: \"resource\"\n};\nconst _hoisted_20 = {\n  class: \"resource\"\n};\nconst _hoisted_21 = {\n  class: \"metrics\"\n};\nconst _hoisted_22 = {\n  key: 2,\n  class: \"card node-monitor__empty\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_skeleton = _resolveComponent(\"el-skeleton\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_result = _resolveComponent(\"el-result\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_progress = _resolveComponent(\"el-progress\");\n  const _component_el_popconfirm = _resolveComponent(\"el-popconfirm\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_empty = _resolveComponent(\"el-empty\");\n  const _component_el_descriptions_item = _resolveComponent(\"el-descriptions-item\");\n  const _component_el_descriptions = _resolveComponent(\"el-descriptions\");\n  const _component_el_timeline_item = _resolveComponent(\"el-timeline-item\");\n  const _component_el_timeline = _resolveComponent(\"el-timeline\");\n  const _component_el_drawer = _resolveComponent(\"el-drawer\");\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$setup.canViewNodes ? (_openBlock(), _createElementBlock(\"section\", _hoisted_2, [$setup.metricsLoading && !$setup.metricsError ? (_openBlock(), _createBlock(_component_el_skeleton, {\n    key: 0,\n    rows: 2,\n    animated: \"\"\n  })) : $setup.metricsError ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_el_result, {\n    status: $setup.metricsError.forbidden ? 'warning' : 'error',\n    title: $setup.metricsError.forbidden ? '无访问权限' : '指标加载失败',\n    \"sub-title\": $setup.metricsError.message\n  }, {\n    extra: _withCtx(() => [_createVNode(_component_el_button, {\n      size: \"small\",\n      type: \"primary\",\n      onClick: $setup.refresh\n    }, {\n      default: _withCtx(() => [...(_cache[1] || (_cache[1] = [_createTextVNode(\"重试\", -1 /* CACHED */)]))]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"status\", \"title\", \"sub-title\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_cache[2] || (_cache[2] = _createElementVNode(\"span\", {\n    class: \"summary__label\"\n  }, \"Total Nodes\", -1 /* CACHED */)), _createElementVNode(\"span\", _hoisted_6, _toDisplayString($setup.metrics.totalNodes), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_7, [_cache[3] || (_cache[3] = _createElementVNode(\"span\", {\n    class: \"summary__label\"\n  }, \"Online\", -1 /* CACHED */)), _createElementVNode(\"span\", _hoisted_8, _toDisplayString($setup.metrics.onlineNodes), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_9, [_cache[4] || (_cache[4] = _createElementVNode(\"span\", {\n    class: \"summary__label\"\n  }, \"Offline\", -1 /* CACHED */)), _createElementVNode(\"span\", _hoisted_10, _toDisplayString($setup.metrics.offlineNodes), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_11, [_cache[5] || (_cache[5] = _createElementVNode(\"span\", {\n    class: \"summary__label\"\n  }, \"Avg CPU\", -1 /* CACHED */)), _createElementVNode(\"span\", _hoisted_12, _toDisplayString($setup.metrics.avgCpu) + \"%\", 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_13, [_cache[6] || (_cache[6] = _createElementVNode(\"span\", {\n    class: \"summary__label\"\n  }, \"Avg Memory\", -1 /* CACHED */)), _createElementVNode(\"span\", _hoisted_14, _toDisplayString($setup.metrics.avgMemory) + \"%\", 1 /* TEXT */)])]))])) : _createCommentVNode(\"v-if\", true), $setup.canViewNodes ? (_openBlock(), _createElementBlock(\"section\", _hoisted_15, [_createElementVNode(\"div\", _hoisted_16, [_cache[8] || (_cache[8] = _createElementVNode(\"h3\", null, \"Worker Nodes\", -1 /* CACHED */)), _createVNode(_component_el_button, {\n    type: \"primary\",\n    size: \"small\",\n    onClick: $setup.refresh\n  }, {\n    default: _withCtx(() => [...(_cache[7] || (_cache[7] = [_createTextVNode(\"Refresh\", -1 /* CACHED */)]))]),\n    _: 1 /* STABLE */\n  })]), _withDirectives((_openBlock(), _createBlock(_component_el_table, {\n    data: $setup.nodes,\n    height: \"520\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      label: \"Node\",\n      \"min-width\": \"180\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createElementVNode(\"div\", _hoisted_17, [_createVNode(_component_el_tag, {\n        size: \"small\",\n        effect: \"plain\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(row.cluster), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */), _createElementVNode(\"strong\", null, _toDisplayString(row.name), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"span\", null, \"Host: \" + _toDisplayString(row.host), 1 /* TEXT */), _createElementVNode(\"span\", null, \"Registered: \" + _toDisplayString(row.registerTime), 1 /* TEXT */)])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      label: \"Status\",\n      width: \"120\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createVNode($setup[\"StatusTag\"], {\n        status: row.status === 'ONLINE' ? 'SUCCESS' : 'FAILED'\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(row.status === 'ONLINE' ? 'Online' : 'Offline'), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"status\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      label: \"Resource\",\n      width: \"240\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createElementVNode(\"div\", _hoisted_19, [_cache[9] || (_cache[9] = _createElementVNode(\"span\", null, \"CPU\", -1 /* CACHED */)), _createVNode(_component_el_progress, {\n        percentage: row.cpu,\n        status: row.cpu > 80 ? 'exception' : 'success'\n      }, null, 8 /* PROPS */, [\"percentage\", \"status\"])]), _createElementVNode(\"div\", _hoisted_20, [_cache[10] || (_cache[10] = _createElementVNode(\"span\", null, \"Memory\", -1 /* CACHED */)), _createVNode(_component_el_progress, {\n        percentage: row.memory,\n        status: row.memory > 80 ? 'exception' : 'warning'\n      }, null, 8 /* PROPS */, [\"percentage\", \"status\"])])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      label: \"Runtime\",\n      width: \"220\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createElementVNode(\"div\", _hoisted_21, [_createElementVNode(\"span\", null, \"Running: \" + _toDisplayString(row.runningTasks), 1 /* TEXT */), _createElementVNode(\"span\", null, \"Backlog: \" + _toDisplayString(row.backlog), 1 /* TEXT */), _createElementVNode(\"span\", null, \"Delay: \" + _toDisplayString(row.delay) + \" ms\", 1 /* TEXT */), _createElementVNode(\"span\", null, \"Alert: \" + _toDisplayString(row.alertLevel), 1 /* TEXT */)])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      label: \"Actions\",\n      width: \"220\",\n      fixed: \"right\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [$setup.canManageNodes ? (_openBlock(), _createBlock(_component_el_button, {\n        key: 0,\n        link: \"\",\n        type: \"primary\",\n        size: \"small\",\n        onClick: $event => $setup.rebalance(row)\n      }, {\n        default: _withCtx(() => [...(_cache[11] || (_cache[11] = [_createTextVNode(\" Rebalance \", -1 /* CACHED */)]))]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_button, {\n        link: \"\",\n        type: \"warning\",\n        size: \"small\",\n        onClick: $event => $setup.openHeartbeat(row)\n      }, {\n        default: _withCtx(() => [...(_cache[12] || (_cache[12] = [_createTextVNode(\" Heartbeat \", -1 /* CACHED */)]))]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"]), $setup.canManageNodes ? (_openBlock(), _createBlock(_component_el_popconfirm, {\n        key: 1,\n        title: \"Offline this node?\",\n        onConfirm: $event => $setup.offline(row)\n      }, {\n        reference: _withCtx(() => [_createVNode(_component_el_button, {\n          link: \"\",\n          type: \"danger\",\n          size: \"small\"\n        }, {\n          default: _withCtx(() => [...(_cache[13] || (_cache[13] = [_createTextVNode(\"Offline\", -1 /* CACHED */)]))]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onConfirm\"])) : _createCommentVNode(\"v-if\", true)]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\"])), [[_directive_loading, $setup.loading]])])) : (_openBlock(), _createElementBlock(\"section\", _hoisted_22, [_createVNode(_component_el_empty, {\n    description: \"You do not have permission to view nodes\"\n  })])), _createVNode(_component_el_drawer, {\n    modelValue: $setup.heartbeatVisible,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.heartbeatVisible = $event),\n    title: \"Node Heartbeat\",\n    size: \"30%\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_descriptions, {\n      column: 1,\n      border: \"\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_descriptions_item, {\n        label: \"Node\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.heartbeatDetail.name), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_descriptions_item, {\n        label: \"Latest\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.heartbeatDetail.latest), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_descriptions_item, {\n        label: \"Avg Latency\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.heartbeatDetail.avgLatency) + \" ms\", 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_descriptions_item, {\n        label: \"Last Alert\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.heartbeatDetail.lastAlert || '-'), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_timeline, {\n      class: \"heartbeat-timeline\"\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.heartbeatDetail.logs, item => {\n        return _openBlock(), _createBlock(_component_el_timeline_item, {\n          key: item.time,\n          timestamp: item.time,\n          type: item.status\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(item.message), 1 /* TEXT */)]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"timestamp\", \"type\"]);\n      }), 128 /* KEYED_FRAGMENT */))]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","$setup","canViewNodes","_hoisted_2","metricsLoading","metricsError","_createBlock","_component_el_skeleton","rows","animated","_hoisted_3","_createVNode","_component_el_result","status","forbidden","title","message","extra","_withCtx","_component_el_button","size","type","onClick","refresh","_cache","_hoisted_4","_createElementVNode","_hoisted_5","_hoisted_6","_toDisplayString","metrics","totalNodes","_hoisted_7","_hoisted_8","onlineNodes","_hoisted_9","_hoisted_10","offlineNodes","_hoisted_11","_hoisted_12","avgCpu","_hoisted_13","_hoisted_14","avgMemory","_hoisted_15","_hoisted_16","_component_el_table","data","nodes","height","_component_el_table_column","label","default","row","_hoisted_17","_component_el_tag","effect","cluster","name","_hoisted_18","host","registerTime","width","_hoisted_19","_component_el_progress","percentage","cpu","_hoisted_20","memory","_hoisted_21","runningTasks","backlog","delay","alertLevel","fixed","canManageNodes","link","$event","rebalance","openHeartbeat","_component_el_popconfirm","onConfirm","offline","reference","loading","_hoisted_22","_component_el_empty","description","_component_el_drawer","heartbeatVisible","_component_el_descriptions","column","border","_component_el_descriptions_item","heartbeatDetail","latest","avgLatency","lastAlert","_component_el_timeline","_Fragment","_renderList","logs","item","_component_el_timeline_item","key","time","timestamp"],"sources":["D:\\桌面\\项目\\分布式任务调度系统\\SkyTask\\skytask-frontend\\src\\views\\NodeMonitorView.vue"],"sourcesContent":["<template>\n  <div class=\"node-monitor\">\n        <section v-if=\"canViewNodes\" class=\"card node-monitor__summary\">\n      <el-skeleton v-if=\"metricsLoading && !metricsError\" :rows=\"2\" animated />\n      <div v-else-if=\"metricsError\" class=\"summary__error\">\n        <el-result\n          :status=\"metricsError.forbidden ? 'warning' : 'error'\"\n          :title=\"metricsError.forbidden ? '无访问权限' : '指标加载失败'\"\n          :sub-title=\"metricsError.message\"\n        >\n          <template #extra>\n            <el-button size=\"small\" type=\"primary\" @click=\"refresh\">重试</el-button>\n          </template>\n        </el-result>\n      </div>\n      <div v-else class=\"summary__grid\">\n        <div class=\"summary__item\">\n          <span class=\"summary__label\">Total Nodes</span>\n          <span class=\"summary__value\">{{ metrics.totalNodes }}</span>\n        </div>\n        <div class=\"summary__item\">\n          <span class=\"summary__label\">Online</span>\n          <span class=\"summary__value summary__value--success\">{{ metrics.onlineNodes }}</span>\n        </div>\n        <div class=\"summary__item\">\n          <span class=\"summary__label\">Offline</span>\n          <span class=\"summary__value summary__value--danger\">{{ metrics.offlineNodes }}</span>\n        </div>\n        <div class=\"summary__item\">\n          <span class=\"summary__label\">Avg CPU</span>\n          <span class=\"summary__value\">{{ metrics.avgCpu }}%</span>\n        </div>\n        <div class=\"summary__item\">\n          <span class=\"summary__label\">Avg Memory</span>\n          <span class=\"summary__value\">{{ metrics.avgMemory }}%</span>\n        </div>\n      </div>\n    </section>\n\n    <section v-if=\"canViewNodes\" class=\"card node-monitor__table\">\n      <div class=\"table__header\">\n        <h3>Worker Nodes</h3>\n        <el-button type=\"primary\" size=\"small\" @click=\"refresh\">Refresh</el-button>\n      </div>\n      <el-table :data=\"nodes\" v-loading=\"loading\" height=\"520\">\n        <el-table-column label=\"Node\" min-width=\"180\">\n          <template #default=\"{ row }\">\n            <div class=\"node-name\">\n              <el-tag size=\"small\" effect=\"plain\">{{ row.cluster }}</el-tag>\n              <strong>{{ row.name }}</strong>\n            </div>\n            <div class=\"node-meta\">\n              <span>Host: {{ row.host }}</span>\n              <span>Registered: {{ row.registerTime }}</span>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"Status\" width=\"120\">\n          <template #default=\"{ row }\">\n            <StatusTag :status=\"row.status === 'ONLINE' ? 'SUCCESS' : 'FAILED'\">\n              {{ row.status === 'ONLINE' ? 'Online' : 'Offline' }}\n            </StatusTag>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"Resource\" width=\"240\">\n          <template #default=\"{ row }\">\n            <div class=\"resource\">\n              <span>CPU</span>\n              <el-progress :percentage=\"row.cpu\" :status=\"row.cpu > 80 ? 'exception' : 'success'\" />\n            </div>\n            <div class=\"resource\">\n              <span>Memory</span>\n              <el-progress :percentage=\"row.memory\" :status=\"row.memory > 80 ? 'exception' : 'warning'\" />\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"Runtime\" width=\"220\">\n          <template #default=\"{ row }\">\n            <div class=\"metrics\">\n              <span>Running: {{ row.runningTasks }}</span>\n              <span>Backlog: {{ row.backlog }}</span>\n              <span>Delay: {{ row.delay }} ms</span>\n              <span>Alert: {{ row.alertLevel }}</span>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"Actions\" width=\"220\" fixed=\"right\">\n          <template #default=\"{ row }\">\n            <el-button\n              v-if=\"canManageNodes\"\n              link\n              type=\"primary\"\n              size=\"small\"\n              @click=\"rebalance(row)\"\n            >\n              Rebalance\n            </el-button>\n            <el-button link type=\"warning\" size=\"small\" @click=\"openHeartbeat(row)\">\n              Heartbeat\n            </el-button>\n            <el-popconfirm\n              v-if=\"canManageNodes\"\n              title=\"Offline this node?\"\n              @confirm=\"offline(row)\"\n            >\n              <template #reference>\n                <el-button link type=\"danger\" size=\"small\">Offline</el-button>\n              </template>\n            </el-popconfirm>\n          </template>\n        </el-table-column>\n      </el-table>\n    </section>\n\n    <section v-else class=\"card node-monitor__empty\">\n      <el-empty description=\"You do not have permission to view nodes\" />\n    </section>\n\n    <el-drawer v-model=\"heartbeatVisible\" title=\"Node Heartbeat\" size=\"30%\">\n      <el-descriptions :column=\"1\" border>\n        <el-descriptions-item label=\"Node\">{{ heartbeatDetail.name }}</el-descriptions-item>\n        <el-descriptions-item label=\"Latest\">{{ heartbeatDetail.latest }}</el-descriptions-item>\n        <el-descriptions-item label=\"Avg Latency\">{{ heartbeatDetail.avgLatency }} ms</el-descriptions-item>\n        <el-descriptions-item label=\"Last Alert\">{{ heartbeatDetail.lastAlert || '-' }}</el-descriptions-item>\n      </el-descriptions>\n      <el-timeline class=\"heartbeat-timeline\">\n        <el-timeline-item\n          v-for=\"item in heartbeatDetail.logs\"\n          :key=\"item.time\"\n          :timestamp=\"item.time\"\n          :type=\"item.status\"\n        >\n          {{ item.message }}\n        </el-timeline-item>\n      </el-timeline>\n    </el-drawer>\n  </div>\n</template>\n\n<script setup>\nimport { computed, onMounted, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { ElMessage } from \"element-plus\";\nimport StatusTag from \"@/components/common/StatusTag.vue\";\nimport { fetchNodeHeartbeat } from \"@/api/nodes\";\n\nconst store = useStore();\n\nconst heartbeatVisible = ref(false);\nconst heartbeatDetail = ref({\n  name: \"\",\n  latest: \"\",\n  avgLatency: 0,\n  lastAlert: \"\",\n  logs: []\n});\n\nconst metricsLoading = ref(false);\nconst metricsError = ref(null);\nconst nodesError = ref(null);\n\nconst canViewNodes = computed(() => store.getters['auth/hasPermission']('node:read'));\nconst canManageNodes = computed(() => store.getters['auth/hasPermission']('config:write'));\nconst metrics = computed(() => store.getters['nodes/nodeMetrics']);\nconst nodes = computed(() => store.getters['nodes/nodeList']);\nconst loading = computed(() => store.getters['nodes/nodesLoading']);\nconst hasNodes = computed(() => (nodes.value?.length ?? 0) > 0);\n\nconst parseError = (error) => error?.response?.data?.message || error?.message || '请求失败';\nconst isForbidden = (error) => Number(error?.response?.status) === 403;\n\nconst loadMetrics = async () => {\n  if (!canViewNodes.value) {\n    return;\n  }\n  metricsLoading.value = true;\n  try {\n    await store.dispatch('nodes/loadNodeMetrics');\n    metricsError.value = null;\n  } catch (error) {\n    const forbidden = isForbidden(error);\n    metricsError.value = {\n      message: forbidden ? '当前账号无权限查看节点指标' : parseError(error),\n      forbidden\n    };\n    ElMessage[forbidden ? 'warning' : 'error'](metricsError.value.message);\n  } finally {\n    metricsLoading.value = false;\n  }\n};\n\nconst loadNodes = async () => {\n  if (!canViewNodes.value) {\n    return;\n  }\n  try {\n    await store.dispatch('nodes/loadNodes');\n    nodesError.value = null;\n  } catch (error) {\n    const forbidden = isForbidden(error);\n    nodesError.value = {\n      message: forbidden ? '当前账号无权限查看节点列表' : parseError(error),\n      forbidden\n    };\n    ElMessage[forbidden ? 'warning' : 'error'](nodesError.value.message);\n  }\n};\n\nconst refresh = async () => {\n  if (!canViewNodes.value) {\n    return;\n  }\n  await Promise.all([loadMetrics(), loadNodes()]);\n};\n\nwatch(canViewNodes, (allowed) => {\n  if (allowed) {\n    refresh();\n  }\n}, { immediate: true });\n\nonMounted(() => {\n  if (canViewNodes.value) {\n    refresh();\n  }\n});\n\nconst offline = async (node) => {\n  if (!canManageNodes.value) {\n    ElMessage.warning('没有权限执行下线操作');\n    return;\n  }\n  try {\n    await store.dispatch('nodes/decommissionNode', node.id);\n    ElMessage.success('节点已下线');\n    await refresh();\n  } catch (error) {\n    ElMessage.error(parseError(error));\n  }\n};\n\nconst rebalance = async (node) => {\n  if (!canManageNodes.value) {\n    ElMessage.warning('没有权限执行再均衡操作');\n    return;\n  }\n  try {\n    await store.dispatch('nodes/rebalance', node.id);\n    ElMessage.success('已触发再均衡');\n    await refresh();\n  } catch (error) {\n    ElMessage.error(parseError(error));\n  }\n};\n\nconst openHeartbeat = async (node) => {\n  if (!canViewNodes.value) {\n    ElMessage.warning('没有权限查看心跳详情');\n    return;\n  }\n  try {\n    const detail = await fetchNodeHeartbeat(node.id);\n    heartbeatDetail.value = detail;\n    heartbeatVisible.value = true;\n  } catch (error) {\n    ElMessage.error(parseError(error));\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n.node-monitor {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  &__summary {\n    display: grid;\n    grid-template-columns: repeat(5, minmax(0, 1fr));\n    gap: 16px;\n    padding: 20px 24px;\n  }\n\n  &__table {\n    padding: 20px;\n\n    .table__header {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      margin-bottom: 16px;\n\n      h3 {\n        margin: 0;\n      }\n    }\n  }\n\n  &__empty {\n    display: flex;\n    justify-content: center;\n    padding: 48px 0;\n  }\n}\n\n.summary__item {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  color: #475569;\n\n  .summary__label {\n    font-size: 12px;\n    text-transform: uppercase;\n    letter-spacing: 0.5px;\n  }\n\n  .summary__value {\n    font-size: 24px;\n    font-weight: 700;\n    color: #0f172a;\n\n    &--success {\n      color: #10b981;\n    }\n\n    &--danger {\n      color: #ef4444;\n    }\n  }\n}\n\n.node-name {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  strong {\n    color: #0f172a;\n  }\n}\n\n.node-meta {\n  display: flex;\n  gap: 16px;\n  font-size: 12px;\n  color: #64748b;\n  margin-top: 6px;\n}\n\n.resource {\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n  font-size: 13px;\n  color: #475569;\n  margin-bottom: 8px;\n}\n\n.metrics {\n  display: grid;\n  gap: 4px;\n  font-size: 12px;\n  color: #475569;\n}\n\n.heartbeat-timeline {\n  margin-top: 16px;\n}\n</style>\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
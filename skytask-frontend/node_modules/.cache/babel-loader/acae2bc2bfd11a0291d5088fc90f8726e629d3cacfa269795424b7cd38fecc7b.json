{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createTextVNode as _createTextVNode, withModifiers as _withModifiers, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"drawer__footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  const _component_el_link = _resolveComponent(\"el-link\");\n  const _component_el_input_number = _resolveComponent(\"el-input-number\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_drawer = _resolveComponent(\"el-drawer\");\n  return _openBlock(), _createBlock(_component_el_drawer, {\n    \"model-value\": $props.visible,\n    title: $setup.formTitle,\n    size: \"45%\",\n    onClose: $setup.handleClose\n  }, {\n    footer: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_el_button, {\n      onClick: $setup.handleClose\n    }, {\n      default: _withCtx(() => [...(_cache[16] || (_cache[16] = [_createTextVNode(\"取消\", -1 /* CACHED */)]))]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_button, {\n      type: \"primary\",\n      loading: $props.submitting,\n      onClick: $setup.handleSubmit\n    }, {\n      default: _withCtx(() => [...(_cache[17] || (_cache[17] = [_createTextVNode(\"保存\", -1 /* CACHED */)]))]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"loading\"])])]),\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      ref: \"formRef\",\n      model: $setup.formState,\n      rules: $setup.rules,\n      \"label-width\": \"110px\",\n      \"status-icon\": \"\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_row, {\n        gutter: 16\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_col, {\n          span: 12\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, {\n            label: \"任务名称\",\n            prop: \"name\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              modelValue: $setup.formState.name,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.formState.name = $event),\n              placeholder: \"例如 nightly-report-generate\"\n            }, null, 8 /* PROPS */, [\"modelValue\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_col, {\n          span: 12\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, {\n            label: \"所属分组\",\n            prop: \"group\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_select, {\n              modelValue: $setup.formState.group,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.formState.group = $event),\n              placeholder: \"选择任务分组\"\n            }, {\n              default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.groupOptions, item => {\n                return _openBlock(), _createBlock(_component_el_option, {\n                  key: item.value,\n                  label: item.label,\n                  value: item.value\n                }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n              }), 128 /* KEYED_FRAGMENT */))]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"modelValue\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_row, {\n        gutter: 16\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_col, {\n          span: 12\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, {\n            label: \"任务类型\",\n            prop: \"type\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_select, {\n              modelValue: $setup.formState.type,\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.formState.type = $event),\n              placeholder: \"选择任务类型\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_option, {\n                label: \"Cron 定时任务\",\n                value: \"CRON\"\n              }), _createVNode(_component_el_option, {\n                label: \"一次性任务\",\n                value: \"ONE_TIME\"\n              }), _createVNode(_component_el_option, {\n                label: \"固定间隔任务\",\n                value: \"FIXED_RATE\"\n              })]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"modelValue\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_col, {\n          span: 12\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, {\n            label: \"执行方式\",\n            prop: \"executorType\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_select, {\n              modelValue: $setup.formState.executorType,\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.formState.executorType = $event),\n              placeholder: \"选择执行方式\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_option, {\n                label: \"HTTP 回调\",\n                value: \"HTTP\"\n              }), _createVNode(_component_el_option, {\n                label: \"gRPC 执行\",\n                value: \"GRPC\"\n              }), _createVNode(_component_el_option, {\n                label: \"Spring Bean\",\n                value: \"SPRING_BEAN\"\n              }), _createVNode(_component_el_option, {\n                label: \"Shell 脚本\",\n                value: \"SHELL\"\n              })]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"modelValue\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), $setup.formState.type === 'CRON' ? (_openBlock(), _createBlock(_component_el_row, {\n        key: 0,\n        gutter: 16\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_col, {\n          span: 16\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, {\n            label: \"Cron 表达式\",\n            prop: \"cronExpr\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              modelValue: $setup.formState.cronExpr,\n              \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.formState.cronExpr = $event),\n              placeholder: \"0 0 2 * * ?\",\n              onBlur: $setup.emitCronPreview\n            }, {\n              append: _withCtx(() => [_createVNode(_component_el_link, {\n                type: \"primary\",\n                onClick: _withModifiers($setup.handleCronHelper, [\"prevent\"])\n              }, {\n                default: _withCtx(() => [...(_cache[15] || (_cache[15] = [_createTextVNode(\"表达式助手\", -1 /* CACHED */)]))]),\n                _: 1 /* STABLE */\n              })]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"modelValue\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_col, {\n          span: 8\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, {\n            label: \"时区\",\n            prop: \"timeZone\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_select, {\n              modelValue: $setup.formState.timeZone,\n              \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.formState.timeZone = $event),\n              placeholder: \"选择时区\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_option, {\n                label: \"系统默认\",\n                value: \"SYSTEM\"\n              }), _createVNode(_component_el_option, {\n                label: \"UTC\",\n                value: \"UTC\"\n              }), _createVNode(_component_el_option, {\n                label: \"Asia/Shanghai\",\n                value: \"Asia/Shanghai\"\n              })]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"modelValue\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_row, {\n        gutter: 16\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_col, {\n          span: 12\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, {\n            label: \"路由策略\",\n            prop: \"routeStrategy\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_select, {\n              modelValue: $setup.formState.routeStrategy,\n              \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $setup.formState.routeStrategy = $event)\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_option, {\n                label: \"自动均衡\",\n                value: \"ROUND_ROBIN\"\n              }), _createVNode(_component_el_option, {\n                label: \"一致性哈希\",\n                value: \"CONSISTENT_HASH\"\n              }), _createVNode(_component_el_option, {\n                label: \"分片广播\",\n                value: \"SHARDING\"\n              }), _createVNode(_component_el_option, {\n                label: \"指定节点\",\n                value: \"FIXED_NODE\"\n              })]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"modelValue\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_col, {\n          span: 12\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, {\n            label: \"重试策略\",\n            prop: \"retryPolicy\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_select, {\n              modelValue: $setup.formState.retryPolicy,\n              \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $setup.formState.retryPolicy = $event)\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_option, {\n                label: \"不重试\",\n                value: \"NONE\"\n              }), _createVNode(_component_el_option, {\n                label: \"固定间隔\",\n                value: \"FIXED_INTERVAL\"\n              }), _createVNode(_component_el_option, {\n                label: \"指数退避\",\n                value: \"EXP_BACKOFF\"\n              })]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"modelValue\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_row, {\n        gutter: 16\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_col, {\n          span: 12\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, {\n            label: \"最大重试次数\",\n            prop: \"maxRetry\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input_number, {\n              modelValue: $setup.formState.maxRetry,\n              \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $setup.formState.maxRetry = $event),\n              min: 0,\n              max: 10\n            }, null, 8 /* PROPS */, [\"modelValue\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_col, {\n          span: 12\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, {\n            label: \"超时时间 (s)\",\n            prop: \"timeout\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input_number, {\n              modelValue: $setup.formState.timeout,\n              \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $setup.formState.timeout = $event),\n              min: 10,\n              max: 3600\n            }, null, 8 /* PROPS */, [\"modelValue\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_row, {\n        gutter: 16\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_col, {\n          span: 12\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, {\n            label: \"负责人\",\n            prop: \"owner\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_select, {\n              modelValue: $setup.formState.owner,\n              \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $setup.formState.owner = $event),\n              placeholder: \"选择负责人\"\n            }, {\n              default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.ownerOptions, user => {\n                return _openBlock(), _createBlock(_component_el_option, {\n                  key: user.value,\n                  label: user.label,\n                  value: user.value\n                }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n              }), 128 /* KEYED_FRAGMENT */))]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"modelValue\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_col, {\n          span: 12\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, {\n            label: \"标签\",\n            prop: \"tags\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_select, {\n              modelValue: $setup.formState.tags,\n              \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => $setup.formState.tags = $event),\n              multiple: \"\",\n              \"collapse-tags\": \"\",\n              placeholder: \"业务标签\"\n            }, {\n              default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.tagOptions, tag => {\n                return _openBlock(), _createBlock(_component_el_option, {\n                  key: tag,\n                  label: tag,\n                  value: tag\n                }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n              }), 128 /* KEYED_FRAGMENT */))]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"modelValue\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"幂等 Key 生成器\",\n        prop: \"idempotentKey\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.formState.idempotentKey,\n          \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => $setup.formState.idempotentKey = $event),\n          placeholder: \"例如 ${bizId}-${yyyyMMddHHmm}\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"执行参数\",\n        prop: \"parameters\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.formState.parameters,\n          \"onUpdate:modelValue\": _cache[13] || (_cache[13] = $event => $setup.formState.parameters = $event),\n          type: \"textarea\",\n          rows: 4,\n          placeholder: \"JSON 参数，例如 {\\\"reportType\\\":\\\"DAILY\\\"}\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"任务描述\",\n        prop: \"description\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.formState.description,\n          \"onUpdate:modelValue\": _cache[14] || (_cache[14] = $event => $setup.formState.description = $event),\n          type: \"textarea\",\n          rows: 3\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model-value\", \"title\"]);\n}","map":{"version":3,"names":["class","_createBlock","_component_el_drawer","$props","visible","title","$setup","formTitle","size","onClose","handleClose","footer","_withCtx","_createElementVNode","_hoisted_1","_createVNode","_component_el_button","onClick","_cache","type","loading","submitting","handleSubmit","_component_el_form","ref","model","formState","rules","_component_el_row","gutter","_component_el_col","span","_component_el_form_item","label","prop","_component_el_input","name","$event","placeholder","_component_el_select","group","_createElementBlock","_Fragment","_renderList","groupOptions","item","_component_el_option","key","value","executorType","cronExpr","onBlur","emitCronPreview","append","_component_el_link","_withModifiers","handleCronHelper","timeZone","routeStrategy","retryPolicy","_component_el_input_number","maxRetry","min","max","timeout","owner","ownerOptions","user","tags","multiple","tagOptions","tag","idempotentKey","parameters","rows","description"],"sources":["D:\\桌面\\项目\\分布式任务调度系统\\SkyTask\\skytask-frontend\\src\\components\\task\\TaskFormDrawer.vue"],"sourcesContent":["<template>\n  <el-drawer\n    :model-value=\"visible\"\n    :title=\"formTitle\"\n    size=\"45%\"\n    @close=\"handleClose\"\n  >\n    <el-form\n      ref=\"formRef\"\n      :model=\"formState\"\n      :rules=\"rules\"\n      label-width=\"110px\"\n      status-icon\n    >\n      <el-row :gutter=\"16\">\n        <el-col :span=\"12\">\n          <el-form-item label=\"任务名称\" prop=\"name\">\n            <el-input v-model=\"formState.name\" placeholder=\"例如 nightly-report-generate\" />\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"12\">\n          <el-form-item label=\"所属分组\" prop=\"group\">\n            <el-select v-model=\"formState.group\" placeholder=\"选择任务分组\">\n              <el-option\n                v-for=\"item in groupOptions\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\"\n              />\n            </el-select>\n          </el-form-item>\n        </el-col>\n      </el-row>\n\n      <el-row :gutter=\"16\">\n        <el-col :span=\"12\">\n          <el-form-item label=\"任务类型\" prop=\"type\">\n            <el-select v-model=\"formState.type\" placeholder=\"选择任务类型\">\n              <el-option label=\"Cron 定时任务\" value=\"CRON\" />\n              <el-option label=\"一次性任务\" value=\"ONE_TIME\" />\n              <el-option label=\"固定间隔任务\" value=\"FIXED_RATE\" />\n            </el-select>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"12\">\n          <el-form-item label=\"执行方式\" prop=\"executorType\">\n            <el-select v-model=\"formState.executorType\" placeholder=\"选择执行方式\">\n              <el-option label=\"HTTP 回调\" value=\"HTTP\" />\n              <el-option label=\"gRPC 执行\" value=\"GRPC\" />\n              <el-option label=\"Spring Bean\" value=\"SPRING_BEAN\" />\n              <el-option label=\"Shell 脚本\" value=\"SHELL\" />\n            </el-select>\n          </el-form-item>\n        </el-col>\n      </el-row>\n\n      <el-row :gutter=\"16\" v-if=\"formState.type === 'CRON'\">\n        <el-col :span=\"16\">\n          <el-form-item label=\"Cron 表达式\" prop=\"cronExpr\">\n            <el-input\n              v-model=\"formState.cronExpr\"\n              placeholder=\"0 0 2 * * ?\"\n              @blur=\"emitCronPreview\"\n            >\n              <template #append>\n                <el-link type=\"primary\" @click.prevent=\"handleCronHelper\">表达式助手</el-link>\n              </template>\n            </el-input>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"8\">\n          <el-form-item label=\"时区\" prop=\"timeZone\">\n            <el-select v-model=\"formState.timeZone\" placeholder=\"选择时区\">\n              <el-option label=\"系统默认\" value=\"SYSTEM\" />\n              <el-option label=\"UTC\" value=\"UTC\" />\n              <el-option label=\"Asia/Shanghai\" value=\"Asia/Shanghai\" />\n            </el-select>\n          </el-form-item>\n        </el-col>\n      </el-row>\n\n      <el-row :gutter=\"16\">\n        <el-col :span=\"12\">\n          <el-form-item label=\"路由策略\" prop=\"routeStrategy\">\n            <el-select v-model=\"formState.routeStrategy\">\n              <el-option label=\"自动均衡\" value=\"ROUND_ROBIN\" />\n              <el-option label=\"一致性哈希\" value=\"CONSISTENT_HASH\" />\n              <el-option label=\"分片广播\" value=\"SHARDING\" />\n              <el-option label=\"指定节点\" value=\"FIXED_NODE\" />\n            </el-select>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"12\">\n          <el-form-item label=\"重试策略\" prop=\"retryPolicy\">\n            <el-select v-model=\"formState.retryPolicy\">\n              <el-option label=\"不重试\" value=\"NONE\" />\n              <el-option label=\"固定间隔\" value=\"FIXED_INTERVAL\" />\n              <el-option label=\"指数退避\" value=\"EXP_BACKOFF\" />\n            </el-select>\n          </el-form-item>\n        </el-col>\n      </el-row>\n\n      <el-row :gutter=\"16\">\n        <el-col :span=\"12\">\n          <el-form-item label=\"最大重试次数\" prop=\"maxRetry\">\n            <el-input-number v-model=\"formState.maxRetry\" :min=\"0\" :max=\"10\" />\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"12\">\n          <el-form-item label=\"超时时间 (s)\" prop=\"timeout\">\n            <el-input-number v-model=\"formState.timeout\" :min=\"10\" :max=\"3600\" />\n          </el-form-item>\n        </el-col>\n      </el-row>\n\n      <el-row :gutter=\"16\">\n        <el-col :span=\"12\">\n          <el-form-item label=\"负责人\" prop=\"owner\">\n            <el-select v-model=\"formState.owner\" placeholder=\"选择负责人\">\n              <el-option\n                v-for=\"user in ownerOptions\"\n                :key=\"user.value\"\n                :label=\"user.label\"\n                :value=\"user.value\"\n              />\n            </el-select>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"12\">\n          <el-form-item label=\"标签\" prop=\"tags\">\n            <el-select v-model=\"formState.tags\" multiple collapse-tags placeholder=\"业务标签\">\n              <el-option v-for=\"tag in tagOptions\" :key=\"tag\" :label=\"tag\" :value=\"tag\" />\n            </el-select>\n          </el-form-item>\n        </el-col>\n      </el-row>\n\n      <el-form-item label=\"幂等 Key 生成器\" prop=\"idempotentKey\">\n        <el-input v-model=\"formState.idempotentKey\" placeholder=\"例如 ${bizId}-${yyyyMMddHHmm}\" />\n      </el-form-item>\n\n      <el-form-item label=\"执行参数\" prop=\"parameters\">\n        <el-input\n          v-model=\"formState.parameters\"\n          type=\"textarea\"\n          :rows=\"4\"\n          placeholder='JSON 参数，例如 {\"reportType\":\"DAILY\"}'\n        />\n      </el-form-item>\n\n      <el-form-item label=\"任务描述\" prop=\"description\">\n        <el-input v-model=\"formState.description\" type=\"textarea\" :rows=\"3\" />\n      </el-form-item>\n    </el-form>\n\n    <template #footer>\n      <div class=\"drawer__footer\">\n        <el-button @click=\"handleClose\">取消</el-button>\n        <el-button type=\"primary\" :loading=\"submitting\" @click=\"handleSubmit\">保存</el-button>\n      </div>\n    </template>\n  </el-drawer>\n</template>\n\n<script setup>\nimport { computed, nextTick, reactive, ref, watch } from 'vue';\n\nconst props = defineProps({\n  visible: {\n    type: Boolean,\n    default: false\n  },\n  modelValue: {\n    type: Object,\n    default: () => ({})\n  },\n  groupOptions: {\n    type: Array,\n    default: () => []\n  },\n  ownerOptions: {\n    type: Array,\n    default: () => []\n  },\n  tagOptions: {\n    type: Array,\n    default: () => []\n  },\n  submitting: {\n    type: Boolean,\n    default: false\n  }\n});\n\nconst emit = defineEmits(['update:visible', 'submit', 'cron-helper', 'cron-preview']);\n\nconst formRef = ref(null);\n\nconst createInitialState = () => ({\n  id: null,\n  name: '',\n  group: '',\n  type: 'CRON',\n  executorType: 'GRPC',\n  cronExpr: '',\n  timeZone: 'Asia/Shanghai',\n  routeStrategy: 'ROUND_ROBIN',\n  retryPolicy: 'EXP_BACKOFF',\n  maxRetry: 3,\n  timeout: 300,\n  owner: '',\n  tags: [],\n  idempotentKey: '',\n  parameters: '',\n  description: ''\n});\n\nconst formState = reactive(createInitialState());\n\nfunction applyModelValue(value) {\n  Object.assign(formState, createInitialState(), value || {});\n}\n\nfunction resetForm() {\n  nextTick(() => {\n    formRef.value?.resetFields();\n    Object.assign(formState, createInitialState());\n  });\n}\n\nwatch(\n  () => props.modelValue,\n  (val) => {\n    if (val && Object.keys(val).length) {\n      applyModelValue(val);\n    } else {\n      resetForm();\n    }\n  },\n  { immediate: true, deep: true }\n);\n\nconst formTitle = computed(() => (formState.id ? '编辑任务' : '新建任务'));\n\nconst rules = {\n  name: [{ required: true, message: '请输入任务名称', trigger: 'blur' }],\n  group: [{ required: true, message: '请选择任务分组', trigger: 'change' }],\n  type: [{ required: true, message: '请选择任务类型', trigger: 'change' }],\n  executorType: [{ required: true, message: '请选择执行方式', trigger: 'change' }],\n  cronExpr: [\n    {\n      validator: (_, value, callback) => {\n        if (formState.type === 'CRON' && !value) {\n          callback(new Error('请输入 Cron 表达式'));\n        } else {\n          callback();\n        }\n      },\n      trigger: 'blur'\n    }\n  ],\n  owner: [{ required: true, message: '请选择负责人', trigger: 'change' }]\n};\n\nfunction handleClose() {\n  emit('update:visible', false);\n  resetForm();\n}\n\nfunction handleSubmit() {\n  formRef.value?.validate((valid) => {\n    if (valid) {\n      emit('submit', { ...formState });\n    }\n  });\n}\n\nfunction handleCronHelper() {\n  emit('cron-helper', formState.cronExpr);\n}\n\nfunction emitCronPreview() {\n  if (formState.cronExpr) {\n    emit('cron-preview', formState.cronExpr);\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n.drawer__footer {\n  display: flex;\n  justify-content: flex-end;\n  gap: 12px;\n  padding-top: 12px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
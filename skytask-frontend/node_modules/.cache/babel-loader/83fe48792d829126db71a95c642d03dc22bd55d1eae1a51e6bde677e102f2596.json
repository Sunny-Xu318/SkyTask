{"ast":null,"code":"import { createRouter, createWebHashHistory } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport store from '../store';\nconst LoginView = () => import('../views/LoginView.vue');\nconst DashboardView = () => import('../views/DashboardView.vue');\nconst TaskCenterView = () => import('../views/TaskCenterView.vue');\nconst TaskDetailView = () => import('../views/TaskDetailView.vue');\nconst NodeMonitorView = () => import('../views/NodeMonitorView.vue');\nconst ConfigCenterView = () => import('../views/ConfigCenterView.vue');\nconst routes = [{\n  path: '/login',\n  name: 'Login',\n  component: LoginView,\n  meta: {\n    public: true\n  }\n}, {\n  path: '/',\n  redirect: '/dashboard'\n}, {\n  path: '/dashboard',\n  name: 'Dashboard',\n  component: DashboardView,\n  meta: {\n    requiresAuth: true,\n    permissions: ['task:read'],\n    breadcrumbs: [{\n      title: '总览监控',\n      path: '/dashboard'\n    }]\n  }\n}, {\n  path: '/tasks',\n  name: 'TaskCenter',\n  component: TaskCenterView,\n  meta: {\n    requiresAuth: true,\n    permissions: ['task:read'],\n    breadcrumbs: [{\n      title: '任务中心',\n      path: '/tasks'\n    }]\n  }\n}, {\n  path: '/tasks/:taskId',\n  name: 'TaskDetail',\n  component: TaskDetailView,\n  meta: {\n    requiresAuth: true,\n    permissions: ['task:read'],\n    breadcrumbs: [{\n      title: '任务中心',\n      path: '/tasks'\n    }, {\n      title: '任务详情',\n      path: '/tasks/:taskId'\n    }]\n  }\n}, {\n  path: '/nodes',\n  name: 'NodeMonitor',\n  component: NodeMonitorView,\n  meta: {\n    requiresAuth: true,\n    permissions: ['node:read'],\n    breadcrumbs: [{\n      title: '执行器节点',\n      path: '/nodes'\n    }]\n  }\n}, {\n  path: '/config',\n  name: 'ConfigCenter',\n  component: ConfigCenterView,\n  meta: {\n    requiresAuth: true,\n    permissions: ['config:write'],\n    breadcrumbs: [{\n      title: '配置与告警',\n      path: '/config'\n    }]\n  }\n}, {\n  path: '/:pathMatch(.*)*',\n  redirect: '/dashboard'\n}];\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  const isAuthenticated = store.getters['auth/isAuthenticated'];\n  if (to.meta.public) {\n    if (isAuthenticated && to.path === '/login') {\n      return next({\n        path: '/dashboard'\n      });\n    }\n    return next();\n  }\n  if (to.meta.requiresAuth && !isAuthenticated) {\n    return next({\n      path: '/login',\n      query: {\n        redirect: to.fullPath\n      }\n    });\n  }\n  if (to.meta.permissions && to.meta.permissions.length > 0) {\n    const allowed = store.getters['auth/hasAnyPermission'](to.meta.permissions);\n    if (!allowed) {\n      ElMessage.warning('当前账号没有访问该页面的权限');\n      return next(from.fullPath === '/login' ? '/dashboard' : from.fullPath || '/dashboard');\n    }\n  }\n  return next();\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHashHistory","ElMessage","store","LoginView","DashboardView","TaskCenterView","TaskDetailView","NodeMonitorView","ConfigCenterView","routes","path","name","component","meta","public","redirect","requiresAuth","permissions","breadcrumbs","title","router","history","beforeEach","to","from","next","isAuthenticated","getters","query","fullPath","length","allowed","warning"],"sources":["D:/桌面/项目/分布式任务调度系统/SkyTask/skytask-frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHashHistory } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport store from '../store';\n\nconst LoginView = () => import('../views/LoginView.vue');\nconst DashboardView = () => import('../views/DashboardView.vue');\nconst TaskCenterView = () => import('../views/TaskCenterView.vue');\nconst TaskDetailView = () => import('../views/TaskDetailView.vue');\nconst NodeMonitorView = () => import('../views/NodeMonitorView.vue');\nconst ConfigCenterView = () => import('../views/ConfigCenterView.vue');\n\nconst routes = [\n  {\n    path: '/login',\n    name: 'Login',\n    component: LoginView,\n    meta: { public: true }\n  },\n  {\n    path: '/',\n    redirect: '/dashboard'\n  },\n  {\n    path: '/dashboard',\n    name: 'Dashboard',\n    component: DashboardView,\n    meta: {\n      requiresAuth: true,\n      permissions: ['task:read'],\n      breadcrumbs: [{ title: '总览监控', path: '/dashboard' }]\n    }\n  },\n  {\n    path: '/tasks',\n    name: 'TaskCenter',\n    component: TaskCenterView,\n    meta: {\n      requiresAuth: true,\n      permissions: ['task:read'],\n      breadcrumbs: [{ title: '任务中心', path: '/tasks' }]\n    }\n  },\n  {\n    path: '/tasks/:taskId',\n    name: 'TaskDetail',\n    component: TaskDetailView,\n    meta: {\n      requiresAuth: true,\n      permissions: ['task:read'],\n      breadcrumbs: [\n        { title: '任务中心', path: '/tasks' },\n        { title: '任务详情', path: '/tasks/:taskId' }\n      ]\n    }\n  },\n  {\n    path: '/nodes',\n    name: 'NodeMonitor',\n    component: NodeMonitorView,\n    meta: {\n      requiresAuth: true,\n      permissions: ['node:read'],\n      breadcrumbs: [{ title: '执行器节点', path: '/nodes' }]\n    }\n  },\n  {\n    path: '/config',\n    name: 'ConfigCenter',\n    component: ConfigCenterView,\n    meta: {\n      requiresAuth: true,\n      permissions: ['config:write'],\n      breadcrumbs: [{ title: '配置与告警', path: '/config' }]\n    }\n  },\n  {\n    path: '/:pathMatch(.*)*',\n    redirect: '/dashboard'\n  }\n];\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n});\n\nrouter.beforeEach((to, from, next) => {\n  const isAuthenticated = store.getters['auth/isAuthenticated'];\n\n  if (to.meta.public) {\n    if (isAuthenticated && to.path === '/login') {\n      return next({ path: '/dashboard' });\n    }\n    return next();\n  }\n\n  if (to.meta.requiresAuth && !isAuthenticated) {\n    return next({\n      path: '/login',\n      query: { redirect: to.fullPath }\n    });\n  }\n\n  if (to.meta.permissions && to.meta.permissions.length > 0) {\n    const allowed = store.getters['auth/hasAnyPermission'](to.meta.permissions);\n    if (!allowed) {\n      ElMessage.warning('当前账号没有访问该页面的权限');\n      return next(from.fullPath === '/login' ? '/dashboard' : from.fullPath || '/dashboard');\n    }\n  }\n\n  return next();\n});\n\nexport default router;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}